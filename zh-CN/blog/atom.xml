<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="atom.xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://open.mp/zh-CN/blog</id>
    <title>open.mp Blog</title>
    <updated>2024-03-06T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://open.mp/zh-CN/blog"/>
    <subtitle>open.mp Blog</subtitle>
    <icon>https://open.mp/zh-CN/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Porting to open.mp]]></title>
        <id>https://open.mp/zh-CN/blog/porting</id>
        <link href="https://open.mp/zh-CN/blog/porting"/>
        <updated>2024-03-06T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[SA:MP has been stuck in limbo for years, with no updates and plenty of workarounds just to keep things running. open.mp changes that—it's a full rewrite that fixes long-standing issues, improves scripting, and removes old limits while keeping your existing code working. But what does that actually mean for you? Let's break it down.]]></summary>
        <content type="html"><![CDATA[<p>SA<!-- -->:MP<!-- --> has been stuck in limbo for years, with no updates and plenty of workarounds just to keep things running. open.mp changes that—it's a full rewrite that fixes long-standing issues, improves scripting, and removes old limits while keeping your existing code working. But what does that actually mean for you? Let's break it down.</p>
<div class="theme-admonition theme-admonition-warning admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>注意</div><div class="admonitionContent_BuS1"><p>The content of the following post is out of date and has mostly no reference to the current state of open.mp. The post is published here for archival purposes.</p></div></div>
<p>It has been clear for a long time that Kalcor was no longer interested in maintaining SA<!-- -->:MP<!-- -->; which in itself is fine, but as the only person with official source code access this made him a bottleneck to new updates. Both YSF and fixes.inc were created to fill this void - fix the bugs and inconsistencies in the server without having source code access; the former as a plugin and the latter as an include. Despite some monumental efforts to make these (and other) projects as stable, comprehensive, and easy to use as possible, they naturally started hitting their limits and a new generation of fixes were required. This is where open.mp comes in.</p>
<p>Founded on the same principles, and taking all the myriad improvements developed over a decade by the community, open.mp is a ground-up rewrite of the original SA<!-- -->:MP<!-- --> server with all the fixes from its direct predecessors, and many more that were either unmanageable or outright impossible. Granted this approach was not without controversy - some servers had developed their own private methods of dealing with SA<!-- -->:MP<!-- -->'s quirks independent of the community's efforts, but these are not techniques that every scripter should have to develop for themselves, and this article will help with porting over existing code.</p>
<p>We hope to address the major sticking points, but if there are any we miss, feel free to reach out via discord or github and we'll be happy to ammend the guide.</p>
<p>The alternative option is to undo the fixes using a library which is the twin of fixes.inc - breaks.inc:</p>
<p><a href="https://github.com/pawn-lang/sa-mp-fixes/blob/master/breaks.inc" target="_blank" rel="noopener noreferrer">https://github.com/pawn-lang/sa-mp-fixes/blob/master/breaks.inc</a></p>
<p>So feel free to install that to revert to all the old behaviours transparently via hooks.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="tags"><code>Tags</code><a href="https://open.mp/zh-CN/blog/porting#tags" class="hash-link" aria-label="tags的直接链接" title="tags的直接链接">​</a></h2>
<p>The open.mp includes add many new tags to functions, though still trying to strike a balance between much needed upgrades and invasiveness. Due to how wide-spread these changes can be we wrote a tool to automate a lot of it:</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="hidemenuforplayer"><code>HideMenuForPlayer</code><a href="https://open.mp/zh-CN/blog/porting#hidemenuforplayer" class="hash-link" aria-label="hidemenuforplayer的直接链接" title="hidemenuforplayer的直接链接">​</a></h2>
<p>This function has always taken a menu ID parameter, but in SA<!-- -->:MP<!-- --> this ID was not used. So whatever value was given the player's current menu would be closed, even if they weren't looking at the one you said to close.</p>
<p>Old code may have looked like:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">gShopMenu </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">CreateMenu</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"text"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100.0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">30.0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">7.0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">HideMenuForPlayer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">gShopMenu</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> playerid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p>That would always close the player's current menu, regardless of which one they were actually looking at. Now you will need to remember which one they are looking at, or just get it:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">gShopMenu </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">CreateMenu</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"text"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100.0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">30.0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">7.0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">HideMenuForPlayer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">GetPlayerMenu</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> playerid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="setplayerattachedobject"><code>SetPlayerAttachedObject</code><a href="https://open.mp/zh-CN/blog/porting#setplayerattachedobject" class="hash-link" aria-label="setplayerattachedobject的直接链接" title="setplayerattachedobject的直接链接">​</a></h2>
<p>Attached objects in SA<!-- -->:MP<!-- --> would survive a gamemode change, but in open.mp they do not. If you want a player to keep their objects over a mode restart you will have to re-add them in <code>OnPlayerConnect</code>:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">enum</span><span class="token plain"> </span><span class="token class-name">E_ATTACHMENT_DATA</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    E_ATTACHMENT_DATA_MODEL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    E_ATTACHMENT_DATA_BONE</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    E_ATTACHMENT_DATA_OFFSET_X</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    E_ATTACHMENT_DATA_OFFSET_Y</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    E_ATTACHMENT_DATA_OFFSET_Z</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    E_ATTACHMENT_DATA_ROT_X</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    E_ATTACHMENT_DATA_ROT_Y</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    E_ATTACHMENT_DATA_ROT_Z</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    E_ATTACHMENT_DATA_SCALE_X</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    E_ATTACHMENT_DATA_SCALE_Y</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    E_ATTACHMENT_DATA_SCALE_Z</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    E_ATTACHMENT_DATA_COLOUR_1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    E_ATTACHMENT_DATA_COLOUR_2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public </span><span class="token function" style="color:#d73a49">OnPlayerConnect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">new i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> MAX_OBJECT_ATTACHMENT_SLOTS</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">++</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">SetPlayerAttachedObject</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            playerid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            gAttachementData</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">E_ATTACHMENT_DATA_MODEL</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            gAttachementData</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">E_ATTACHMENT_DATA_BONE</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            gAttachementData</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">E_ATTACHMENT_DATA_OFFSET_X</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            gAttachementData</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">E_ATTACHMENT_DATA_OFFSET_Y</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            gAttachementData</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">E_ATTACHMENT_DATA_OFFSET_Z</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            gAttachementData</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">E_ATTACHMENT_DATA_ROT_X</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            gAttachementData</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">E_ATTACHMENT_DATA_ROT_Y</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            gAttachementData</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">E_ATTACHMENT_DATA_ROT_Z</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            gAttachementData</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">E_ATTACHMENT_DATA_SCALE_X</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            gAttachementData</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">E_ATTACHMENT_DATA_SCALE_Y</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            gAttachementData</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">E_ATTACHMENT_DATA_SCALE_Z</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            gAttachementData</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">E_ATTACHMENT_DATA_COLOUR_1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            gAttachementData</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">E_ATTACHMENT_DATA_COLOUR_2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="clearanimations"><code>ClearAnimations</code><a href="https://open.mp/zh-CN/blog/porting#clearanimations" class="hash-link" aria-label="clearanimations的直接链接" title="clearanimations的直接链接">​</a></h2>
<p><code>ClearAnimations</code> is the dual of <code>ApplyAnimation</code> to stop a player performing the action previously requested. However, when used on a player in a vehicle this would also cause the player to be removed from the vehicle. This is a useful function, as it happens instantly, but is not within the purview of the <code>ClearAnimations</code> function. To force remove a player from a vehicle instantly use:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">RemovePlayerFromVehicle</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> true</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="death-money">Death money<a href="https://open.mp/zh-CN/blog/porting#death-money" class="hash-link" aria-label="Death money的直接链接" title="Death money的直接链接">​</a></h2>
<p>When a player dies in San Andreas they get $100 deducted from them to cover hospital bills automatically. This feature remains in SA<!-- -->:MP<!-- -->, but is removed from open.mp to allow scripts to manage all their own money. Several scripts attempt to fix this already by adding $100 to a player after death, or on spawn. If this is your script simply delete the additional fix, although the code in open.mp does attempt to account for scripts that do this. If your script relied on this feature, simply add the following code to <code>OnPlayerDeath</code>:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">GivePlayerMoney</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="onplayerconnect"><code>OnPlayerConnect</code><a href="https://open.mp/zh-CN/blog/porting#onplayerconnect" class="hash-link" aria-label="onplayerconnect的直接链接" title="onplayerconnect的直接链接">​</a></h2>
<p>When a gamemode starts or restarts in SA<!-- -->:MP<!-- --> <code>OnPlayerConnect</code> is immediately called for all players already connected to the server, but it isn't when a filterscript starts or restarts. While the latter behaviour more closely matches the name, the former behaviour is extremely widely exploited in scripts, and so was extended to all script types in open.mp to maintain consistency.</p>
<p>Scripts which initialise data for a player no longer need to perform this code in two different locations:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public </span><span class="token function" style="color:#d73a49">OnFilterScriptInit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">new playerid </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> playerid </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> MAX_PLAYERS</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">++</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">IsPlayerConnected</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token function" style="color:#d73a49">InitialisePlayer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public </span><span class="token function" style="color:#d73a49">OnPlayerConnect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">InitialisePlayer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>The loop in OnFilterScriptInit can now be removed:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public </span><span class="token function" style="color:#d73a49">OnPlayerConnect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">InitialisePlayer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>If a script exploited this fact to only run code for new players joining the server after the scripts starts, and not for those who were on before, this will no longer work, but is again easilly fixed:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> bool</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">gAlreadyHere</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">MAX_PLAYERS</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public </span><span class="token function" style="color:#d73a49">OnFilterScriptInit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">new playerid </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> playerid </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> MAX_PLAYERS</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">++</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        gAlreadyHere</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">IsPlayerConnected</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public </span><span class="token function" style="color:#d73a49">OnPlayerConnect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">gAlreadyHere</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        gAlreadyHere</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> false</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">SendClientMessage</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> COLOUR_WARN</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"You're late!"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>This may look to simply trade one loop in <code>OnFilterScriptInit</code> off for another one, but wanting to exclude current players from some code is a less common use-case than wanting to do something for everyone, so this is overall a net improvement; and as stated before vastly less invasive than not calling <code>OnPlayerConnect</code> in gamemodes.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="game-texts">Game texts<a href="https://open.mp/zh-CN/blog/porting#game-texts" class="hash-link" aria-label="Game texts的直接链接" title="Game texts的直接链接">​</a></h2>
<p>SA<!-- -->:MP<!-- --> has six different game text styles, but several of them are basically unusable. One fades in and out constantly, one disappears after a set time regardless of the time you put, and one never disappears regardless of the time selected. However it turns out that all of these game text styles can be accurately<sup><a href="https://open.mp/zh-CN/blog/porting#user-content-fn-1-44533e" id="user-content-fnref-1-44533e" data-footnote-ref="true" aria-describedby="footnote-label">1</a></sup> reproduced using text draws. Thus fixes.inc and subsequently open.mp did so. The appearance of the game texts is the same as before, the advantage being that all styles are usable, with the downside being that they no longer fade in and out.</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">FadingGameTextForPlayer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> format</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> time</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> style</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">style </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">6</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// There's no fading version of these styles.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">GameTextForPlayer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> format</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> time</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> style</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// Send a raw message via Pawn.RakNet</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="pool-sizes">Pool sizes<a href="https://open.mp/zh-CN/blog/porting#pool-sizes" class="hash-link" aria-label="Pool sizes的直接链接" title="Pool sizes的直接链接">​</a></h2>
<p><code>GetPlayerPoolSize</code>, <code>GetActorPoolSize</code>, and <code>GetVehiclePoolSize</code> were somewhat pointless when they were first introduced; returning the highest connected ID, which bears no relation to the number of connected players, and long after much better looping methods already existed. Being a bit silly is not in itself a reason to remove the functions, but unfortunately they are also broken and return incorrect data when there are no connected players. There is no way to fix these return values in a way that is both backwards compatible and correct going forward (believe me, we tried). Given these facts, we opted to simply remove the functions. Just use a normal loop or <code>foreach</code>:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">foreach</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">new i </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Player</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>Some scripts did crash when this change was introduced, but only when using the following loop form:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">new i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">GetPlayerPoolSize</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">++</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>Though since the highest value is a real player when there are people online this code is wrong anyway - it misses out a person.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="spellings">Spellings<a href="https://open.mp/zh-CN/blog/porting#spellings" class="hash-link" aria-label="Spellings的直接链接" title="Spellings的直接链接">​</a></h2>
<p>SA<!-- -->:MP<!-- --> is very inconsistent in its code spellings - some things use English, some things use American:</p>
<ul>
<li><code>Bumper</code> - English</li>
<li><code>Hood</code> - American</li>
<li><code>Armour</code> - English</li>
<li><code>Stereo</code> - American</li>
</ul>
<p>We have unified these, and settled on English spellings. So for example:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">TextDrawBoxColor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Text</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">textid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> boxColor</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p>Is now:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">TextDrawBoxColour</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Text</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">textid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> boxColour</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p>The upgrade tool will take care of most of these automatically.</p>
<!-- -->
<section data-footnotes="true" class="footnotes"><h2 class="anchor anchorWithStickyNavbar_LWe7 sr-only" id="footnote-label">Footnotes<a href="https://open.mp/zh-CN/blog/porting#footnote-label" class="hash-link" aria-label="Footnotes的直接链接" title="Footnotes的直接链接">​</a></h2>
<ol>
<li id="user-content-fn-1-44533e">
<p>With one notable exception - the new clock game text style. For some unknown reason the colour of the clock is different for different people, which led to a lot of back-and-forth discussion on how best to replicate this style until the discrepancy was found. We had to pick one of the two for consistency. <a href="https://open.mp/zh-CN/blog/porting#user-content-fnref-1-44533e" data-footnote-backref="" aria-label="Back to reference 1" class="data-footnote-backref">↩</a></p>
</li>
</ol>
</section>]]></content>
        <author>
            <name>Y_Less</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Release Candidate 1]]></title>
        <id>https://open.mp/zh-CN/blog/release-candidate-1</id>
        <link href="https://open.mp/zh-CN/blog/release-candidate-1"/>
        <updated>2023-01-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[It's finally here! 🎉 After years of development, rewrites, and challenges, we're excited to introduce Release Candidate 1 (RC1) of the open.mp server. This marks a major step towards our official 1.0 release, bringing significant updates, features, and improvements.]]></summary>
        <content type="html"><![CDATA[<p>It's finally here! 🎉 After years of development, rewrites, and challenges, we're excited to introduce Release Candidate 1 (RC1) of the open.mp server. This marks a major step towards our official 1.0 release, bringing significant updates, features, and improvements.</p>
<p>It's here!</p>
<p>It's finally here!</p>
<p>After four years, two rewrites, arguments and drama, and countless other hurdles; it is finally here!</p>
<p>Release Candidate 1 (RC1) of the open.mp server.</p>
<p>This, hopefully, represents the final version of the code for our 1.0 release, and if everything goes smoothly with this version we will be able to finally <strong>open</strong> the so-called <strong>open</strong>.mp in just a few days from now.</p>
<p>Before I get in to the meat of the release I want to first sincerely thank every member of the open.mp team for helping the mod get this far. It has not been easy, mostly because of how invested everyone truly was - we all wanted what was best for the mod, for the community, for SA<!-- -->:MP<!-- -->, for our servers, and for our players; we wouldn't have embarked on this journey if that wasn't the case. Unfortunately strong differing opinions on what is <strong>best</strong> sometimes causes friction. But we're here now. So to all, a huge thank you:</p>
<ul>
<li>Amir</li>
<li>Cheaterman</li>
<li>Freaksken</li>
<li>Graber</li>
<li>Hual</li>
<li>Josh</li>
<li>JustMichael</li>
<li>kseny</li>
<li>Nexius</li>
<li>pkfin</li>
<li>Potassium</li>
<li>Southclaws</li>
<li>TommyB</li>
<li>Y_Less</li>
<li>Zeex</li>
<li>And probably more...</li>
</ul>
<p>Anyway, now the bit you actually care about...</p>
<p>Now we're out of beta, we're (if all goes well this week) releasing on time. So along with the server itself, which you've seen a dozen times before, we have some new goodies for you:</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="pawn">Pawn<a href="https://open.mp/zh-CN/blog/release-candidate-1#pawn" class="hash-link" aria-label="Pawn的直接链接" title="Pawn的直接链接">​</a></h2>
<p>The download has the official includes, no more patching the old SA<!-- -->:MP<!-- --> includes with <code>omp.inc</code>, now we're doing it properly! It also has a new compiler. Ever wonder when 3.10.11 was coming? Well wait no longer (if you built it yourself, you could think of this one as 3.10.12)! With this combination you'll probably get loads of new warnings, but worry not - we have a tool for that as well, to automatically upgrade a load of code, adding well-defined symbol names, <code>const</code>, and more in all the right places. Maybe you already noticed this, you've been using it for months, but the virtual machine (the bit inside the server) has been updated as well! Oh, and all those string natives you know and love, like <code>SendClientMessage</code> and <code>AddMenuItem</code>? They all format now. All of them<sup><a href="https://open.mp/zh-CN/blog/release-candidate-1#user-content-fn-1-2f6cc8" id="user-content-fnref-1-2f6cc8" data-footnote-ref="true" aria-describedby="footnote-label">1</a></sup>.</p>
<p>A full list of what's available:</p>
<ul>
<li>Symbol length limit increased to 64, no more <code>OnPlyrDoTheTing</code> to try and fit your names in. Leading to...</li>
<li>Multiple natives decompressed - is <code>Col</code> short for <code>Colour</code> or <code>Collision</code>? Now you know!</li>
<li>Tags. Tags everywhere. See the included documentation.</li>
<li>The official includes are finally const-correct. No more complaining that some people might not have them.</li>
<li>Compiler version updated: <code>__nameof</code>, <code>__addressof</code>, fixes, and too many more things to go in to here.</li>
<li><code>switch</code> is way faster.</li>
<li>More warnings for previously undetected issues. The more problems the compiler can find, the fewer you need to.</li>
<li>An <em>upgrader</em> tool to add tags and <code>const</code> to user-code and fix several new warnings.</li>
<li>More consistent naming. Every native has been closely examined and compared to ensure the maximum level of similarity and intuitiveness in naming.</li>
<li>Added <code>{Float, _}:...</code> everywhere. What does this mean? It means no more <code>format()</code><sup><a href="https://open.mp/zh-CN/blog/release-candidate-1#user-content-fn-2-2f6cc8" id="user-content-fnref-2-2f6cc8" data-footnote-ref="true" aria-describedby="footnote-label">2</a></sup> - think y_va but natively.</li>
<li><code>-O2</code>, the highest pawn optimisation level, works when using the new compiler and VM. Some includes may need to be updated, but some already have. To help with that...</li>
<li>The <code>__optimisation</code> macro was added so code can configure itself when compiled with -O2.</li>
</ul>
<p>Documentation on the updated includes:<br>
<a href="https://github.com/openmultiplayer/omp-stdlib" target="_blank" rel="noopener noreferrer">https://github.com/openmultiplayer/omp-stdlib</a></p>
<p>Documentation on the new compiler:<br>
<a href="https://github.com/openmultiplayer/compiler/" target="_blank" rel="noopener noreferrer">https://github.com/openmultiplayer/compiler/</a><br>
<a href="https://github.com/pawn-lang/compiler/" target="_blank" rel="noopener noreferrer">https://github.com/pawn-lang/compiler/</a></p>
<p>Documentation on qawno:<br>
<a href="https://github.com/openmultiplayer/qawno/" target="_blank" rel="noopener noreferrer">https://github.com/openmultiplayer/qawno/</a></p>
<p>Documentation on the upgrader tool:<br>
<a href="https://github.com/openmultiplayer/upgrade" target="_blank" rel="noopener noreferrer">https://github.com/openmultiplayer/upgrade</a></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sdk">SDK<a href="https://open.mp/zh-CN/blog/release-candidate-1#sdk" class="hash-link" aria-label="SDK的直接链接" title="SDK的直接链接">​</a></h2>
<p>Pawn is the long-standing, and still official, way to write modes for your server. It isn't going away, but for those of you who want more control we are finally releasing the full SDK (the <em>S</em>oftware <em>D</em>evelopment <em>K</em>it). This is a C++ interface to the server, the same one used by all the components that make up the core open.mp code. Anything they can do you can do too (compared to plugins, which were only designed to provide functions to pawn, not write modes).</p>
<p>We have some documentation under way, it takes time unfortunately. But in the meantime have several example components for those of you who want to get straight stuck in. These are all templates you can build upon, and go from basically nothing to a fully working component with most common features:</p>
<p><a href="https://github.com/openmultiplayer/empty-template" target="_blank" rel="noopener noreferrer">https://github.com/openmultiplayer/empty-template</a><br>
<a href="https://github.com/openmultiplayer/basic-template" target="_blank" rel="noopener noreferrer">https://github.com/openmultiplayer/basic-template</a><br>
<a href="https://github.com/openmultiplayer/pawn-template" target="_blank" rel="noopener noreferrer">https://github.com/openmultiplayer/pawn-template</a><br>
<a href="https://github.com/openmultiplayer/full-template" target="_blank" rel="noopener noreferrer">https://github.com/openmultiplayer/full-template</a></p>
<p>A few terms to get you started, so you can start to understand what it is that you're reading:</p>
<ul>
<li><em>Component</em> - A logical individual piece of the server, like objects or pickups. Ones you don't need don't need to be loaded.</li>
<li><em>Extension</em> - Code that extends another bit of code. You can write component extensions, but the most common ones are player extensions, which define some structure of data to be associated with a player in addition to all their normal data like health and weapons.</li>
<li><em>UID</em> - <em>U</em>nique <em>ID</em>entifier, a number that represents your component, and your component alone. This ia always required and can be got here: <a href="http://open.mp/uid" target="_blank" rel="noopener noreferrer">http://open.mp/uid</a></li>
<li><em>Entity</em> - A thing, usually a thing a player can interact with, and which you might have a lot of. Objects are entities, but other players are also entities, even commands in a processor could be called entities.</li>
<li><em>Pool</em> - Something that holds entities. When you have a lot you need to be able to access them by name or ID in some way, this is what a pool does.</li>
<li><em>Interface</em> - Components use an abstract base class as an interface. This declares which methods a component has, but doesn't contain the code for the methods. Interfaces are passed around so that components can communicate with each other, but implementations are kept private.</li>
<li><em>SDK</em> - The collection of all the interfaces defined by the core server.</li>
<li><em>ABI</em> - An <em>A</em>pplication <em>B</em>inary <em>I</em>nterface is the way compiled code talks to other compiled code. The interfaces exported by the SDK are <em>ABI stable</em>, which means that using two components compiled at different times will still work together.</li>
<li><em>pawn-natives</em> - The library on which all native declarations are built. Useing a wrapper called <em>SCRIPT_API</em> around this library: <a href="https://github.com/openmultiplayer/pawn-natives" target="_blank" rel="noopener noreferrer">https://github.com/openmultiplayer/pawn-natives</a></li>
<li><em>Event</em> - Something that happens externally. Things like players connecting and typing commands are events. Any component can define events and tell other components when those events happen.</li>
<li><em>Handler</em> - A component that wants to know when an event happens.</li>
</ul>
<p>If you have questions, the best place is probably the brand new (revived) forums:<br>
<a href="https://forum.open.mp/" target="_blank" rel="noopener noreferrer">https://forum.open.mp/</a></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="features">Features<a href="https://open.mp/zh-CN/blog/release-candidate-1#features" class="hash-link" aria-label="Features的直接链接" title="Features的直接链接">​</a></h2>
<p>Beside all the new features announced for pawn, there are several new (and newly announced) features in the server:</p>
<ul>
<li>Per-player gang zones, as were in YSF.</li>
<li>Per-player pickups, also as in YSF.</li>
<li><code>AttachPlayerObjectToPlayer</code>.</li>
<li>Better PawnPlus support.</li>
<li><code>:memory:</code>, and other special names support in SQLite.</li>
<li>SQLite open flags.</li>
<li><code>exclude</code> config option to not load certain components.</li>
<li>Show config parse errors, don't just silently fail.</li>
<li>SDK major version check, just in case we ever make major server changes (hopefully we won't).</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="fixes">Fixes<a href="https://open.mp/zh-CN/blog/release-candidate-1#fixes" class="hash-link" aria-label="Fixes的直接链接" title="Fixes的直接链接">​</a></h2>
<p>There were a few new bugs introduced in beta 11, and a few minor ones left over from before. The ones fixed include:</p>
<ul>
<li><code>funcidx</code> already registered warning.</li>
<li>GDK plugins (streamer etc) missing natives.</li>
<li>Random crash on GMX.</li>
<li>GDK callbacks sometimes not called.</li>
<li>No logging when requested in SQLite component.</li>
<li>Some settings not reset on GMX.</li>
<li>NPCs were connecting when there were a lot done at once.</li>
<li><code>.so</code> was still needed in Linux legacy plugin names.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="links">Links<a href="https://open.mp/zh-CN/blog/release-candidate-1#links" class="hash-link" aria-label="Links的直接链接" title="Links的直接链接">​</a></h2>
<p>Firstly, of course, is the new server version:<br>
<a href="https://github.com/openmultiplayer/open.mp/releases" target="_blank" rel="noopener noreferrer">https://github.com/openmultiplayer/open.mp/releases</a></p>
<p>Secondly, the forums are back up. Head there for all your questions:<br>
<a href="https://forum.open.mp/" target="_blank" rel="noopener noreferrer">https://forum.open.mp/</a></p>
<p>Or if you prefer:<br>
<a href="https://vk.com/open_mp" target="_blank" rel="noopener noreferrer">https://vk.com/open_mp</a></p>
<p>Next, despite it being offered a few times, we have explicitly resisted any money up to this point; because we didn't feel it was right until we had proven ourselves with a release. With this post, that time is now, so if anyone wants to help support us (all donations will go towards infrastructure and future client dev work), it would be most appreciated:</p>
<p><a href="https://www.patreon.com/open_mp" target="_blank" rel="noopener noreferrer">https://www.patreon.com/open_mp</a><br>
<a href="https://opencollective.com/openmultiplayer" target="_blank" rel="noopener noreferrer">https://opencollective.com/openmultiplayer</a></p>
<p>And of course everything is still in active development, so please do check all the links above regularly to see what's new that we have.</p>
<!-- -->
<section data-footnotes="true" class="footnotes"><h2 class="anchor anchorWithStickyNavbar_LWe7 sr-only" id="footnote-label">Footnotes<a href="https://open.mp/zh-CN/blog/release-candidate-1#footnote-label" class="hash-link" aria-label="Footnotes的直接链接" title="Footnotes的直接链接">​</a></h2>
<ol>
<li id="user-content-fn-1-2f6cc8">
<p>Almost all of them. <a href="https://open.mp/zh-CN/blog/release-candidate-1#user-content-fnref-1-2f6cc8" data-footnote-backref="" aria-label="Back to reference 1" class="data-footnote-backref">↩</a></p>
</li>
<li id="user-content-fn-2-2f6cc8">
<p>Almost no more <code>format()</code>. <a href="https://open.mp/zh-CN/blog/release-candidate-1#user-content-fnref-2-2f6cc8" data-footnote-backref="" aria-label="Back to reference 2" class="data-footnote-backref">↩</a></p>
</li>
</ol>
</section>]]></content>
        <author>
            <name>Y_Less</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[SA-MP 0.3DL compatibility plus other added features and bug fixes - SERVER BETA RELEASE 9]]></title>
        <id>https://open.mp/zh-CN/blog/server-beta-9</id>
        <link href="https://open.mp/zh-CN/blog/server-beta-9"/>
        <updated>2022-09-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[We've just released open.mp server beta 9, bringing major improvements, fixes, and the highly anticipated SA:MP 0.3DL support! This update includes new features, better plugin compatibility, and enhanced server configuration options.]]></summary>
        <content type="html"><![CDATA[<p>We've just released open.mp server beta 9, bringing major improvements, fixes, and the highly anticipated SA<!-- -->:MP<!-- --> 0.3DL support! This update includes new features, better plugin compatibility, and enhanced server configuration options.</p>
<p>Posted in our Discord server announcements channel by kseny (<a href="https://discord.gg/samp" target="_blank" rel="noopener noreferrer">discord.gg/samp</a>)</p>
<p>Hello everyone</p>
<p>We have just released open.mp server beta 9, fixing several reported issues and adding several new features. The most notable change being - SA<!-- -->:MP<!-- --> 0.3DL support. You can now run 0.3.7 and 0.3.DL compatible servers from the same binary.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="other-changes">Other Changes<a href="https://open.mp/zh-CN/blog/server-beta-9#other-changes" class="hash-link" aria-label="Other Changes的直接链接" title="Other Changes的直接链接">​</a></h2>
<ul>
<li>Dynamic tick rate. Specify a target tickrate, rather than a fixed sleep time.<!-- -->
<ul>
<li>Use the <code>tickrate</code> console command to set the rate.</li>
<li><code>sleep</code> can now be a float to accomodate precise tick rates.</li>
</ul>
</li>
<li>More plugin compatibility - fsutil, Discord connector (only with non static build)</li>
<li><code>SetSpawnInfo</code> return fixed.</li>
<li>Fix weather and time not resetting after GMX.</li>
<li>Fix various GMX bugs.</li>
<li>Fix various console commands.</li>
<li>Fix <code>GetPlayerClass</code>.</li>
<li>Fix <code>GetVehicleLastDriver</code>.</li>
<li>Add <code>GetVehicles</code> native.</li>
<li>Add <code>GetPlayers</code> native.</li>
<li>Add <code>GetActors</code> native.</li>
<li>All lagcomp modes are now available through config.</li>
<li>Fix trailer sync.</li>
<li>Fix <code>GetVehicleLastDriver</code>.</li>
<li>Fix <code>GetPlayerRotationQuat</code>.</li>
<li>Fix crash in vehicle component.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sa-dl">SA<!-- -->:MP<!-- --> DL<a href="https://open.mp/zh-CN/blog/server-beta-9#sa-dl" class="hash-link" aria-label="sa-dl的直接链接" title="sa-dl的直接链接">​</a></h2>
<p>This is the big news obviously, and comes with a whole host of new settings:</p>
<ul>
<li>Implemented all DL natives and callbacks (<code>AddSimpleModel</code>, <code>AddSimpleModelTimed</code>, <code>GetPlayerCustomSkin</code>, <code>OnPlayerFinishedDownloading</code>, <code>OnPlayerRequestDownload</code>):<!-- -->
<ul>
<li><code>RedirectDownload</code> native and <code>OnPlayerRequestDownload</code> callback are now deprecated in favour of CDN config options.</li>
</ul>
</li>
<li>Add <code>artwork.enable</code> (legacy: <code>useartwork</code>) config option.</li>
<li>Add <code>artwork.models_path</code> (legacy: <code>artpath</code>) config option.<!-- -->
<ul>
<li>Server can load custom models from <code>artconfig.txt</code> file like SA<!-- -->:MP<!-- --> does.</li>
</ul>
</li>
<li>0.3.7 compatibility is preserved and can be configured by <code>network.allow_037_clients</code> config option (true by default).</li>
<li>open.mp server comes now with a built in webserver used to serve custom models<!-- -->
<ul>
<li>Webserver is using open.mp server bind address and port. Please allow TCP connections on your port in firewall if you plan to use it.</li>
<li>If your public IP address is different than bind address (ex: you're behind a router) you'll need to set it in <code>network.public_addr</code> config option.</li>
</ul>
</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="notes">Notes<a href="https://open.mp/zh-CN/blog/server-beta-9#notes" class="hash-link" aria-label="Notes的直接链接" title="Notes的直接链接">​</a></h2>
<ul>
<li>Due to few changes old config.json files may not work properly. Please use <code>./omp-server --default-config</code> to generate a new one</li>
<li>server.cfg users are not affected.</li>
<li>While allowing 0.3.7 connections only 1000 objects can be created</li>
<li>open.mp server now provides two types of Linux builds, standard and static. You are encouraged to use the standard build if possible, it will minimize incompatibilities with various plugins; however, it will require openssl 1.1 installed on your system. If you can't install modern openssl on your system (typically if it's very old), you can use the static build, but some plugins or components might fail to load and crash the server.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="official-includes">Official Includes<a href="https://open.mp/zh-CN/blog/server-beta-9#official-includes" class="hash-link" aria-label="Official Includes的直接链接" title="Official Includes的直接链接">​</a></h2>
<p>Preparing a full release is not just having a working server, but all the other peripherals as well - libraries, tools, documentation, and more. On the pawn side open.mp is a significant upgrade, with many QoL improvements already seen through fixes and new functions, and more to come. A big part of this push is more compiler diagnostics to find code problems ahead of time, mostly through more tags and const-correctness. While the offical versions aren't out yet you can still help in the meantime by testing your code with the following includes and tools:</p>
<p><a href="https://github.com/pawn-lang/samp-stdlib/tree/consistency-overhaul" target="_blank" rel="noopener noreferrer">https://github.com/pawn-lang/samp-stdlib/tree/consistency-overhaul</a><br>
<a href="https://github.com/pawn-lang/pawn-stdlib/tree/backported-natives" target="_blank" rel="noopener noreferrer">https://github.com/pawn-lang/pawn-stdlib/tree/backported-natives</a><br>
<a href="https://github.com/openmultiplayer/upgrade" target="_blank" rel="noopener noreferrer">https://github.com/openmultiplayer/upgrade</a><br>
<a href="https://github.com/pawn-lang/compiler" target="_blank" rel="noopener noreferrer">https://github.com/pawn-lang/compiler</a></p>
<p>These were originally developed to improve the default SA<!-- -->:MP<!-- --> includes, but never fully released (i.e. never merged to master, despite the PR being accepted). The open.mp includes build on the foundation established here so think of these as a stepping-stone to full open.mp tag and const safety; and important feedback on their direction. See the links above for far more information and documentation on pugrading.</p>
<p>As ever, if you don't want to upgrade old code and includes will still work (at least for the first release).</p>]]></content>
        <author>
            <name>Potassium</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[2022 Update - cross-play and beta testing (Happy New Year 🎉)]]></title>
        <id>https://open.mp/zh-CN/blog/update-2022</id>
        <link href="https://open.mp/zh-CN/blog/update-2022"/>
        <updated>2022-01-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[After years of development, experimentation, and a full rewrite, open.mp is reaching a major milestone! We're launching our first semi-public beta testing program and working on something huge—cross-play support across different versions of GTA San Andreas.]]></summary>
        <content type="html"><![CDATA[<p>After years of development, experimentation, and a full rewrite, open.mp is reaching a major milestone! We're launching our first semi-public beta testing program and working on something huge—cross-play support across different versions of GTA San Andreas.</p>
<p>Hey there everyone!</p>
<p>After 3 years since open.mp's exposure, through experiments and rewrites, trying and attempting different approaches throughout the years to find what's the best for us and the community, we are finally here. But first, a little back story would be nice to tell:</p>
<p>We started open.mp in early 2019, and gained lots of attention after the exposure. Instead of doing our job in peace we had to rush things a little bit, which raised some problems in our management, team, and codebase. We were far from what we were aiming for. Our implementation was powerful but at the same time complex and hard to continue with. This made it hard for us to follow our roadmap, so decisions had to be made, We started a rewrite.</p>
<p>Rewrite In June 2021, after months of inactivity, the open.mp team decided to start a rewrite, aiming to build a 1:1 SA<!-- -->:MP<!-- --> server replacement (making everything backwards compatible) and add fixes with some new features. Focusing on more important things, and let us add extra features later.</p>
<p>Beta Testing Program And now here we are, starting our first semi-public beta testing program. We're inviting server developers with Pawn skills to help us go through testing everything by checking all natives and expected responses as well as stress testing with their current SA<!-- -->:MP<!-- --> scripts and player-bases. We will link to a beta tester application form after the announcement, feel free to sign up if you think you can help us in this process :)</p>
<p>GTA SA Definitive Edition And last but not least, we are hyped to announce our team started working on a client for Grand Theft Auto: San Andreas Definitive Edition! The Definitive Edition client for open.mp will be compatible with open.mp servers! So you can host a server and let people decide which game they want to join the server with! Imagine a single open.mp server, with players using the original San Andreas, Android San Andreas, and San Andreas Definitive Edition, all three together, in the same server, playing with each other. This is our last and hardest attempt to make everything compatible with each other to bring cross-play to the community. So this way - as a server owner - you don't have to worry about a new platform to move to, start over and split your community. Because we let everyone to use their SA<!-- -->:MP<!-- --> scripts on a server where players can decide which game to use to connect to!</p>
<p>Thank you everyone to stay with us in this long exhausting journey, we are proud of this big community we have! Happy New Years 🎉, 2022 is going to be a great year for us, and a change in our beloved multiplayer mod, SA<!-- -->:MP<!-- -->. Love from all of us ❤️</p>
<p>Here is a video of our very first attempt of testing very first version of open.mp GTA San Andreas Definitive Edition client, with SA<!-- -->:MP<!-- --> PC and SA<!-- -->:MP<!-- --> Android client, all three in open.mp server: <a href="https://www.youtube.com/watch?v=-PWXXvHe35M" target="_blank" rel="noopener noreferrer">https://www.youtube.com/watch?v=-PWXXvHe35M</a></p>
<p>Our beta tester application form can be found here: <a href="https://airtable.com/shrjqca2tpgYa9sQL" target="_blank" rel="noopener noreferrer">https://airtable.com/shrjqca2tpgYa9sQL</a></p>
<p>Reminder that we are looking for beta testers for our open.mp SERVER project currently, it is not related to the CLIENT. This is for scripters/developers, NOT regular players at this time. Please do not send us messages about the client, and do not fill the form if you can't help us test the SERVER side of open.mp. You need to be somewhat good with Pawn and familiar with samp scripting.</p>]]></content>
        <author>
            <name>iAmir</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How can I join the team?]]></title>
        <id>https://open.mp/zh-CN/blog/how-to-join-the-team</id>
        <link href="https://open.mp/zh-CN/blog/how-to-join-the-team"/>
        <updated>2021-08-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Want to be part of the open.mp team? We get this question a lot, so here's how you can contribute and get involved!]]></summary>
        <content type="html"><![CDATA[<p>Want to be part of the open.mp team? We get this question a lot, so here's how you can contribute and get involved!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-can-i-join-the-team">How can I join the team?<a href="https://open.mp/zh-CN/blog/how-to-join-the-team#how-can-i-join-the-team" class="hash-link" aria-label="How can I join the team?的直接链接" title="How can I join the team?的直接链接">​</a></h2>
<p>We get asked this question a LOT, so we thought we should make a post about it!</p>
<p>Firstly, thanks so much for being interested in contributing!</p>
<p>As you know, we are all veteran SA-MP players who came together to keep the world of SA multiplayer alive. We are passionate about the project being FOR the players and BY the players, and this is why it will eventually be open-source.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="development">Development<a href="https://open.mp/zh-CN/blog/how-to-join-the-team#development" class="hash-link" aria-label="Development的直接链接" title="Development的直接链接">​</a></h2>
<p>We are currently working on the finishing touches for the beta release, and once that is live we would greatly appreciate and welcome contributions from the community! We will need help testing functionalities and edge cases, and of course looking for bugs and other issues that need work.</p>
<p>The beta test will be an extremely important part of the development journey, and we would love for everyone to be involved, so please stay tuned for the announcement of the beta test, which we promise is going to be really, really soon!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="regional-co-ordinators">Regional Co-ordinators<a href="https://open.mp/zh-CN/blog/how-to-join-the-team#regional-co-ordinators" class="hash-link" aria-label="Regional Co-ordinators的直接链接" title="Regional Co-ordinators的直接链接">​</a></h2>
<p>Do you speak English AND another language, both fluently? We would love your help to translate our Wiki pages, our blog posts, and our social media posts, and to help moderate the language sections of our Discord and our forum.</p>
<p>Applications for these positions are currently closed while we make some changes, but they will be open again soon!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="other-ways-to-help">Other ways to help<a href="https://open.mp/zh-CN/blog/how-to-join-the-team#other-ways-to-help" class="hash-link" aria-label="Other ways to help的直接链接" title="Other ways to help的直接链接">​</a></h2>
<ul>
<li>SHARE our social media posts</li>
<li>INVITE other SA players to our Discord (discord.gg/samp)</li>
<li>ENGAGE in our community on Discord</li>
<li>HELP other players on Discord (scripting, tech, whatever!)</li>
</ul>]]></content>
        <author>
            <name>Potassium</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[10,000 Members!]]></title>
        <id>https://open.mp/zh-CN/blog/10k-members</id>
        <link href="https://open.mp/zh-CN/blog/10k-members"/>
        <updated>2021-07-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[We just hit an incredible milestone—10,000 users in our Discord! 🎉 It's been a while, so here's a quick update on what's been happening and what's next for open.mp.]]></summary>
        <content type="html"><![CDATA[<p>We just hit an incredible milestone—10,000 users in our Discord! 🎉 It's been a while, so here's a quick update on what's been happening and what's next for open.mp.</p>
<p>Hey everyone!</p>
<p>We reached an amazing milestone recently: we officially hit 10,000 USERS in our Discord! 🥳🔟🥳</p>
<p>We thought we would take this opportunity to give a small update as we know it's been a while and everyone is wondering what's going on!</p>
<p>As all of the dev team has full-time jobs and other commitments, we have all really been messed around with the COVID situation. That means that we have not had much time to dedicate to open.mp for a while now.</p>
<p>But things have picked up again recently, we are still alive, the project is truly moving along faster than ever, and we have made more progress in the last few weeks than we have in a long time!</p>
<p>We are so proud of the work going into this, and of the amazing refined team we have.</p>
<p>We will give more detailed info in the coming months, but we just wanted to make sure everyone knows we have not abandoned open.mp, the passion is still there, and we are doing the best we can. So please stick with us as we will have some news and some screenshots and videos very soon!</p>
<p>In the meantime, come hang out with us on Discord! Thank you to all 10,000+ of you 🥰</p>
<p>Our Discord server is a warm and welcoming spot for players and friends of ALL San Andreas multiplayer mods and communities! Some of the things we promote are:</p>
<p>✅ Community: Hang out with the regulars, meet new people, find old friends and veteran players, find people from your country/region in the language-specific channels, meet people from SA-MP / MTA / other multiplayer mods</p>
<p>✅ Scripting: Learn to script, get help with your scripts, help others</p>
<p>✅ Server advertisements: Show off your SA-MP server in the dedicated channels</p>
<p>✅ Programming and tech: Discuss and get help with other programming languages and software development, tech support, meet other like-minded people to work with</p>
<p>✅ Gaming: Find people to play games with (not just SA!), discuss gaming news and updates</p>
<p>✅ Showcase: Are you a YouTuber? Streamer? Artist? Make cool music? Are you a chef? Maybe you fish? Or build cars? Whatever you're proud of, show it off!</p>
<p>✅ open.mp: Stay up to date with the latest open.mp development progress and GitHub movements, hang out with the team, watch our Discord VIP-exclusive dev streams when they are back up and running!</p>]]></content>
        <author>
            <name>Potassium</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[SA-MP Android (Mobile Version)]]></title>
        <id>https://open.mp/zh-CN/blog/samp-mobile</id>
        <link href="https://open.mp/zh-CN/blog/samp-mobile"/>
        <updated>2021-01-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[We've been getting a lot of questions about SA-MP for Android, so we wanted to share our thoughts and plans for a legal multiplayer alternative.]]></summary>
        <content type="html"><![CDATA[<p>We've been getting a lot of questions about SA-MP for Android, so we wanted to share our thoughts and plans for a legal multiplayer alternative.</p>
<p>The open.mp team's views on SA-MP for Android</p>
<p>Hi everyone,</p>
<p>We just wanted to write a quick blog post about our views on SA-MP for Android, because we have been getting a lot of comments about it on our YouTube videos and on Discord.</p>
<p>As we stated in our YouTube video, we do not support the current version of SA-MP for Android. This app was created using source code which was stolen from the SA-MP team, which makes the app illegal.</p>
<p>We do not condone the theft of other people's code, and we do not condone the use of stolen code. We also do not associate with illegal activities.</p>
<p>We see that GTA SA multiplayer for mobile has a large community, and we would like to welcome this community into open.mp.</p>
<p>We are currently discussing how we can create our own multiplayer mod for SA mobile, so that it will be done legally and fairly! :)</p>
<p>This means that it is very possible that there will be open.mp for mobile in the future, so please keep supporting us while we figure it out!</p>
<p>We invite the mobile community to join our official Discord with over 7000 members, we have created a channel for you at #samp-android and we look forward to hearing your thoughts and opinions!</p>
<p>See you there!</p>
<p><a href="https://discord.gg/samp" target="_blank" rel="noopener noreferrer">https://discord.gg/samp</a></p>]]></content>
        <author>
            <name>Potassium</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Live Podcast]]></title>
        <id>https://open.mp/zh-CN/blog/interview</id>
        <link href="https://open.mp/zh-CN/blog/interview"/>
        <updated>2020-11-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[We recently hosted a live Q&A podcast with the open.mp dev team, covering everything from project updates and scripting improvements to future plans and community involvement. If you missed it, you can watch the full recording here!]]></summary>
        <content type="html"><![CDATA[<p>We recently hosted a live Q&amp;A podcast with the open.mp dev team, covering everything from project updates and scripting improvements to future plans and community involvement. If you missed it, you can watch the full recording here!</p>
<p>On the 24th of October we had a dev Q&amp;A podcast, which is recorded for you below:</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="video">Video<a href="https://open.mp/zh-CN/blog/interview#video" class="hash-link" aria-label="Video的直接链接" title="Video的直接链接">​</a></h2>
<p><a href="https://www.youtube.com/watch?v=bTYWWsXkcDo" target="_blank" rel="noopener noreferrer">https://www.youtube.com/watch?v=bTYWWsXkcDo</a></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="transcript">Transcript<a href="https://open.mp/zh-CN/blog/interview#transcript" class="hash-link" aria-label="Transcript的直接链接" title="Transcript的直接链接">​</a></h2>
<p><strong>Potassium:</strong><br>
<!-- -->hello everyone welcome to our very first live stream for open multiplayer<br>
<!-- -->um can i get a mic check can someone tell me if this is working please? jamie?</p>
<p><strong>everyone:</strong><br>
<!-- -->it's working<br>
<!-- -->it's working<br>
<!-- -->okay<br>
<!-- -->yeah<br>
<!-- -->yeah i heard it coming through on the other side<br>
<!-- -->yeah it's quite a delay<br>
<!-- -->yeah that's okay</p>
<p><strong>Potassium:</strong><br>
<!-- -->alright um hello uh what's up<br>
<!-- -->we're finally here and doing this i guess, um</p>
<p><strong>Southclaws:</strong><br>
<!-- -->many days of planning</p>
<p><strong>Potassium:</strong><br>
<!-- -->yes<br>
<!-- -->maybe we should start by introducing ourselves, so... <strong>Southclaws</strong>?</p>
<p><strong>Southclaws:</strong><br>
<!-- -->that's me</p>
<p><strong>Potassium:</strong><br>
<!-- -->tell everyone a little bit about yourself and what you do here</p>
<p><strong>Southclaws:</strong><br>
<!-- -->uh yeah i think i've been around SAMP for like um since 2008 or 2007 i can't remember... a long time ago... um i just kind of do the website stuff at the moment, i manage the wiki and do a tiny bit of coding, but not too much, these guys are far better at that than i am. but yeah i do the wiki stuff mainly, and the website so that's kind of my area</p>
<p><strong>Potassium:</strong><br>
<!-- -->and <strong>Y_Less</strong>?</p>
<p><em>stream alert CJ's "here we go again"</em></p>
<p><strong>Y_Less:</strong><br>
<!-- -->hi i'm Y_Less:<br>
<!-- -->i've been in SAMP longer than you have<br>
<!-- -->i made my way onto the beta team before it was even released so there we go, it's been a while. i'm a former dev, i'm not entirely sure if i need to introduce myself but there we go</p>
<p><strong>Southclaws:</strong><br>
<!-- -->no probably not</p>
<p><strong>Potassium:</strong><br>
<!-- -->probably not</p>
<p><strong>Southclaws:</strong><br>
<!-- -->i'm sure everybody knows you</p>
<p><strong>Potassium:</strong><br>
<!-- -->just in case</p>
<p><strong>Y_Less:</strong><br>
<!-- -->scripters know me, but not necessarily players</p>
<p><strong>Potassium:</strong><br>
<!-- -->no i'm pretty sure everyone does</p>
<p><strong>Y_Less:</strong><br>
<!-- -->i'm also the only form of dev currently not purged from the client "about" page</p>
<p><strong>Potassium:</strong><br>
<!-- -->uhhh... nice... i guess?</p>
<p><strong>BigETI:</strong><br>
<!-- -->that's an achievement</p>
<p><strong>Potassium:</strong><br>
<!-- -->that's an achievement, yeah<br>
<!-- -->ok, josh, your turn</p>
<p><strong>j0sh.../alasnkz:</strong><br>
<!-- -->well i'm josh and i'm one of the main developers of open.mp<br>
<!-- -->i've been in samp for at least seven years now<br>
<!-- -->started programming six years because of samp<br>
<!-- -->and if you've been on the discord you know who i am, i'm always there, and always able to talk to you if you need any help for anything</p>
<p><strong>Potassium:</strong><br>
<!-- -->oh that was very wholesome<br>
<!-- -->who are you and what have you done with josh?<br>
<!-- -->ok, Amir?</p>
<p><strong>iAmir:</strong><br>
<!-- -->well i'm Amir and i've been around since 2010 i guess, that's the time i started playing samp actually. i'm just part of open.mp development team and i just kind of help the coding and stuff like that</p>
<p><strong>Potassium:</strong><br>
<!-- -->nice! and bigETI?</p>
<p><strong>BigETI:</strong><br>
<!-- -->yeah i'm bigeti, i'm 27 years old, i started playing samp around 2009, and contributed to projects, had my own servers, etc, and also i'm a contributor to<br>
<!-- -->open.mp now</p>
<p><strong>Potassium:</strong><br>
<!-- -->awesome, and michael?</p>
<p><strong>JustMichael:</strong><br>
<!-- -->i'm JustMichael:, i've been around since 2007, owned a few communities, fought my way up, these days though i pretty much just follow Southclaws: and manage all his projects that he's abandoned! and other than that i just work in free time on open.mp</p>
<p><strong>Southclaws:</strong><br>
<!-- -->he's the surrogate father to everything i've created</p>
<p><em>everyone laughs</em></p>
<p><strong>Potassium:</strong><br>
<!-- -->awesome!</p>
<p><strong>Y_Less:</strong><br>
<!-- -->who are you Potassium?</p>
<p><strong>Potassium:</strong><br>
<!-- -->that is a good question! so i'm Potassium, obviously, i've been in the samp community since about 2008/2009 maybe... so like 10 years... or more i guess... maths!<br>
<!-- -->i'm not a scripter, i keep telling everyone that i will be maybe one day, i probably won't be, but anyway! i don't really have a backstory i'm just some random from the samp forum and i just, i don't know, i just love this community and want to be a part of keeping it alive so i kind of just invited myself to this team... so yay!</p>
<p><strong>Y_Less:</strong><br>
<!-- -->that's fine, you do a fairly important job</p>
<p><strong>BigETI:</strong><br>
<!-- -->you're definitely welcome!</p>
<p><strong>Potassium:</strong><br>
<!-- -->i can't do any technical things, they're completely over my head, so we just named my role "public relations" and i just post stupid memes every now and again... but that's okay! someone needs to!</p>
<p><strong>Potassium:</strong><br>
<!-- -->so is there any point in quickly explaining what openmp is actually about or? i guess, yeah i guess we should, just in case anyone's listening and isn't quite sure. so basically we're all old school players of san andreas as you just heard, and we're all part of a community<br>
<!-- -->called san andreas multiplayer, it's a multi-player modification for san andreas and it's a little bit outdated now i guess you could say, so we're just kind of trying to breathe some more life back into it because we're not ready to let our little community die yet. is that is that a fair summary?</p>
<p><strong>everyone:</strong><br>
<!-- -->i think so<br>
<!-- -->yeah</p>
<p><strong>Y_Less:</strong><br>
<!-- -->i want to kind of address the big question to start with, about WHY. in some respects<br>
<!-- -->we don't really want to create open.mp - we were perfectly happy playing samp, it's a nice little game, it does everything we want, but kalcor wrote it, he has the source code and<br>
<!-- -->things, he had some help, and in short he was no longer interested in maintaining it which is fine and happens to everybody, and i just want to make that clear that i've no hard feelings to him for that because everybody moves on eventually, you get new interests but<br>
<!-- -->he decided that he wanted to just take everything down with him. he didn't want to pass on the source code, he just wanted to stop so he felt everyone else should stop as well. and we quite liked it here so we didn't stop.</p>
<p><strong>Potassium:</strong><br>
<!-- -->correct</p>
<p><strong>JustMichael:</strong><br>
<!-- -->yeah that sounds fine</p>
<p><strong>Y_Less:</strong><br>
<!-- -->as i said, if he wants if he wants to move on and move on to other things that's only his prerogative</p>
<p><strong>Potassium:</strong><br>
<!-- -->yes that's right, we're not judging, we're just a little bit sad. but that's okay, because we're gonna fix it. we can do something about it so we will!</p>
<p><strong>JustMichael:</strong><br>
<!-- -->yeah let's move on to the next bigger things</p>
<p><strong>Potassium:</strong><br>
<!-- -->yeah that's right. alright so we had a bunch of questions on our forum, which by the way is<br>
<a href="http://burgershot.gg/" target="_blank" rel="noopener noreferrer">http://burgershot.gg</a> so sign up there!<br>
<!-- -->so i guess let's just get into them.<br>
<!-- -->the most pressing question right now obviously is regarding the recent samp drama. so for those who don't know the samp forum and the samp wiki have been offline for a few weeks now, and we don't want to make assumptions but it doesn't look like they're coming<br>
<!-- -->back anytime soon. i think that's a pretty fair assumption to make.</p>
<p><strong>Y_Less:</strong><br>
<!-- -->the links have been removed from the home page, if it was just a temporary thing he<br>
<!-- -->would have probably not removed the links.</p>
<p><strong>Potassium:</strong><br>
<!-- -->yeah that's right, so it doesn't look like they're coming back. so people just kind of want to know what our thoughts are on this, what do we think actually happened? so... open mic... <strong>Southclaws</strong>? anyone?</p>
<p><strong>Y_Less:</strong><br>
<!-- -->it's basically what i just said, kalcor has for years been uninterested, that's why there's<br>
<!-- -->just been zero development, and several of us when i was in the beta team kept trying to push him along and release updates and things, and actually the whole community was screaming for updates, he didn't want to because he'd lost interest, he wanted to move on and that's... as i already said that's fine, we don't mind people moving on and leaving<br>
<!-- -->projects, it was the fact that he refused to hand over the reins to anybody else, this is just a<br>
<!-- -->continuation of that, the forums were pretty huge, they were not easy to run, it's close to a full-time job just moderating them. and i suspect he's just totally lost interest and decided he no longer wants to do it, but does not want anybody else to continue his legacy, so he's just taking everything down. i'm slightly confused that the home page is still there.</p>
<p><strong>Southclaws:</strong><br>
<!-- -->i'd imagine that's probably just because the home page probably costs next to nothing to actually keep online, whereas the forum probably took a bit of time and expense to<br>
<!-- -->actually run. i'd imagine that's why.</p>
<p><strong>BigETI:</strong><br>
<!-- -->you can still download samp from the main home page</p>
<p><strong>JustMichael:</strong><br>
<!-- -->yeah that's good, at least they can do that. but if we complete our mission<br>
<!-- -->they won't have to!</p>
<p><strong>Potassium:</strong><br>
<!-- -->personally i just hope kalcor is ok! what if he got COVID and he's in the hospital and can't maintain</p>
<p><strong>Southclaws:</strong><br>
<!-- -->that would be really bad</p>
<p><strong>Potassium:</strong><br>
<!-- -->what if it just like ran out and he can't put it back up because he's in hospital</p>
<p><strong>JustMichael:</strong><br>
<!-- -->that would just be extremely unfortunate</p>
<p><strong>Potassium:</strong><br>
<!-- -->and then he comes back and there's just like... a mutiny... anyway</p>
<p><strong>JustMichael:</strong><br>
<!-- -->and while he was in hospital he happened to remove the forum link and wiki...?</p>
<p><strong>Potassium:</strong><br>
<!-- -->oh yeah... fair enough</p>
<p><em>everyone laughs</em></p>
<p><strong>Y_Less:</strong><br>
<!-- -->i'm just thinking we might have heard about that</p>
<p><strong>Potassium:</strong><br>
<!-- -->yeah we probably would've heard about that, you're right</p>
<p><strong>Y_Less:</strong><br>
<!-- -->or maybe not because even beta testers barely hear anything, i can speak from<br>
<!-- -->personal experience, people kept asking me when is the next version coming out?<br>
<!-- -->i know just as little as you do. but we have our own private forum and it's dead.</p>
<p><strong>JustMichael:</strong><br>
<!-- -->he ended up being pretty bad at communicating anything to any of the devs</p>
<p><strong>Potassium:</strong><br>
<!-- -->time to move on. on the subject of forums, our forum and our wiki seem to be quite popular replacements for the samp ones so feel free to check them out</p>
<p><strong>Y_Less:</strong><br>
<!-- -->they are not dead</p>
<p><strong>JustMichael:</strong><br>
<!-- -->they're very active and maintained, more than i've ever seen</p>
<p><strong>Potassium:</strong><br>
<!-- -->yeah, particularly for scripting help</p>
<p><strong>Southclaws:</strong><br>
<!-- -->yeah the wiki contributions have been great, when the wiki went down, having<br>
<!-- -->loads of people just copying pages from the old wiki onto the new one was really good, so shout out to everyone who contributed, thank you, that was really cool. the translation stuff is great because i think that's one thing that the old wiki definitely lacked, it had a handful of pages that were translated but not many i think.</p>
<p><strong>JustMichael:</strong><br>
<!-- -->i think it was like polish, brazilian, and... yeah... we lacked a lot.</p>
<p><strong>Southclaws:</strong><br>
<!-- -->yeah translating that is a definitely a priority and we've got some good people to help us with that so that's brilliant</p>
<p><strong>Potassium:</strong><br>
<!-- -->yeah that's awesome. just for the record, <a href="http://burgershot.gg/" target="_blank" rel="noopener noreferrer">http://burgershot.gg</a> is our forum and <a href="http://open.mp/" target="_blank" rel="noopener noreferrer">http://open.mp</a> docs is our wiki, so go there!<br>
<!-- -->so obviously the next discord alert noise that scared me, sorry! the next most frequently asked question is and always will be is the release date. so obviously we don't have a date, we will never give a specific date because we're all volunteers and do this in our free time, but do we have a rough idea of maybe like a percentage of how far along we are before we can make it public? are 1% through? are we halfway through? are we 90% through? what do you think?</p>
<p><strong>JustMichael:</strong><br>
<!-- -->i mean, we're pretty close aren't we?</p>
<p><strong>Y_Less:</strong><br>
<!-- -->yeah i think most of our big systems, the bulk of it, is done. they say that the first 90% takes 90% of the time, and the last 10% takes the other 90% of the time because it's all that kind of tweaking, and there's bugs, and when this and this and this and this happen together, suddenly everything breaks. most of what we've called "modules" are done now, i can explain modules later, but essentially the large chunks of code are done now. it's just connecting them making sure all the little extra features are there. it's progressing fairly steadily, now especially recently,</p>
<p><strong>JustMichael:</strong><br>
<!-- -->yeah we've had quite a bit of a big boost of active development recently which is very nice</p>
<p><strong>Potassium:</strong><br>
<!-- -->i was just gonna ask if anyone else had anything else to add to that</p>
<p><strong>j0sh...:</strong><br>
<!-- -->i think it depends on what you define as public, i can pretty much say that we're fairly close<br>
<!-- -->to having a beta test server, i'm sure we're near that. but a public release as in everyone else having the executable is obviously a bit further off, but i think a test server will be coming fairly shortly.</p>
<p><strong>Potassium:</strong><br>
<!-- -->woohoo!</p>
<p><strong>JustMichael:</strong><br>
<!-- -->yeah we need a fair amount of time to test all the progress so far because there's still gonna be edge cases</p>
<p><strong>Potassium:</strong><br>
<!-- -->did you hear that chat?! a test server is coming fairly shortly! mark his words!<br>
<!-- -->alright so most of the questions from this point on are from a scripting point of view, so obviously i have no idea about that stuff so this is where you guys shine! so you mentioned modules just before, did you want to explain that a little bit? or did you not want to?</p>
<p><strong>Y_Less:</strong><br>
<!-- -->yeah basically modules is an extension of kind of a general trend in library development and stuff that has developed over years, for code isolation, so all the objects, all the code related to objects, that's a module. all the code related to checkpoints, that's a module. vehicles is a separate module.</p>
<p><strong>Potassium:</strong><br>
<!-- -->so in terms of plugins and filter scripts like we have in samp, is that what we're... are we renaming them to modules? i think i saw something about that before but i don't understand that stuff!</p>
<p><strong>Y_Less:</strong><br>
<!-- -->not quite, modules are more like a chunk of code that provides some functionality, so your filter scripts... i mean, we don't really have filter scripts anymore, we just have scripts, because game modes and filter scripts was an arbitrary pointless distinction in the first place. we do still have plugins but there's legacy plugins which is all existing ones,<br>
<!-- -->most of them should work, some of them won't.</p>
<p><strong>JustMichael:</strong><br>
<!-- -->any memory hacking ones won't</p>
<p><strong>Y_Less:</strong><br>
<!-- -->yes, if they use memory hacking they won't work because that's just changing values in memory at very specific locations, but because it's completely different code, everything's<br>
<!-- -->moved</p>
<p><strong>BigETI:</strong><br>
<!-- -->yeah but then but then if someone wants to make let's say a memory hacking plug-in to work on openmp, they can just use the existing api in openmp instead of hacking memory</p>
<p><strong>JustMichael:</strong><br>
<!-- -->yeah you won't need to go about that route anymore</p>
<p><strong>Y_Less:</strong><br>
<!-- -->yeah so we have a full C API, so legacy plugins had about 3 functions that they could call in the server, and that was it. and there were all sorts of workarounds and horrible ways to<br>
<!-- -->put natives from plugins, now you can do that directly so 90% of the need for memory<br>
<!-- -->hacking plugins is just gone. things like samp gdk, that was just pulling pawn<br>
<!-- -->functions from plugins, that's gone. the plugins are all these legacy ones, and modules are basically the replacements. like plugins, but far more powerful.</p>
<p><strong>Potassium:</strong><br>
<!-- -->cool. i'm just smiling and nodding because i don't understand but i'm sure most of our viewers do so that's awesome!</p>
<p><strong>Y_Less:</strong><br>
<!-- -->if anybody wants any clarification on that, just ask! maybe you're in the same boat as Potassium</p>
<p><strong>Potassium:</strong><br>
<!-- -->correct! so obviously we've got our forum for questions like that, but also we're going to have a little live question session at the end so stick around!</p>
<p><strong>JustMichael:</strong><br>
<!-- -->it's also not like we won't document the code when it's actually released, so you know if you are struggling to understand what any of this is, we will have some kind of explanation that just tells you what it is.</p>
<p><strong>Potassium:</strong><br>
<!-- -->so we got a few questions about limits, i know that we've we talked about that in our last Q&amp;A, and i think you guys said there won't be limits on things like vehicles and objects, is that right?</p>
<p><strong>BigETI:</strong><br>
<!-- -->there is no reason to have arbitrary limits, but right now openmp will be just a server release for now</p>
<p><strong>Potassium:</strong><br>
<!-- -->server release</p>
<p><strong>BigETI:</strong><br>
<!-- -->so you have to make it competitive with san andreas multiplayer, therefore we<br>
<!-- -->have to emulate limits, but then internally in openmp there are no server-sided limits. it just depends on how much your machine is capable to do</p>
<p><strong>JustMichael:</strong><br>
<!-- -->yeah so it does appear that in the very first version that the limits will be have to be in place<br>
<!-- -->until we get our own client out</p>
<p><strong>Y_Less:</strong><br>
<!-- -->an internal streamer</p>
<p><strong>BigETI:</strong><br>
<!-- -->we can't go over game limits right now</p>
<p><strong>JustMichael:</strong><br>
<!-- -->yeah that's true yeah</p>
<p><strong>Y_Less:</strong><br>
<!-- -->there was one interesting issue with limits that we were discussing last week, the server itself can stream players as well, so in theory you could have unlimited players on the server even with this legacy samp client, basically we just send the players closest to you, sync them, and then when you move further away we change which players are synced. but we've had to disable that by default because it means that everybody's constantly<br>
<!-- -->changing IDs, so i would connect to the server and have a server ID of 27, but when i'm streamed to you i have your local ID of 3. i'm streaming to somebody else and i have a<br>
<!-- -->local ID for them of 17. so you as an admin see that i'm cheating and type /ban 5 because you think that i'm ID 5 but the server thinks i'm ID 27. and translating those when people are just using raw IDs instead of names is tricky. we've decided to disable that for now and<br>
<!-- -->make it optionally enabled if people want it, but with the caveat that their script will need to be aware of this and for example if in a command they just use strval to get typed ID, don't do that because it would probably be wrong, or do do that and then translate it to from local ID to server ID. sscanf will probably support that already, but if you do type "u", if you<br>
<!-- -->use sscanf with "u" already it will auto translate. some scripts will need updating to support that.</p>
<p><strong>Potassium:</strong><br>
<!-- -->actually the next question was "will we still be limited to 1000 player slots?" so i guess that kind of ties in.</p>
<p><strong>JustMichael:</strong><br>
<!-- -->the answer for that is no!</p>
<p><strong>Y_Less:</strong><br>
<!-- -->if you enable it</p>
<p><strong>BigETI:</strong><br>
<!-- -->i wanted to add to that, so our idea is to have like, you can configure what you want to limit<br>
<!-- -->for yourself, because for example you don't want a server where you can spawn infinite entities, because someone could abuse it and just down your server, so there should be some configuration you can do to limit stuff, like players or vehicles or something else.</p>
<p><strong>Southclaws:</strong><br>
<!-- -->yeah fair enough</p>
<p><strong>Y_Less:</strong><br>
<!-- -->i just want to say that's not me in the twitch chat</p>
<p><strong>Potassium:</strong><br>
<!-- -->it's ok i banned them, that is not the real Y_Less: in chat, THIS is the real Y_Less:!</p>
<p><strong>BigETI:</strong><br>
<!-- -->what is your twitch account Y_Less:?</p>
<p><strong>Potassium:</strong><br>
<!-- -->it's ok, it's not important. so moving on with the community questions, people want to know which languages other than pawn we can script our servers in.</p>
<p><strong>JustMichael:</strong><br>
<!-- -->that's completely dependent on plug-in developers, we already have quite a few already which can be easily ported over, and some already do work, i think bigeti you were working on or at least you were thinking about writing another C# one right?</p>
<p><strong>BigETI:</strong><br>
<!-- -->i was thinking to implement some module that implements another language like for example C# because nowadays C#... well first of all i don't want to say that it will be officially supported, but i'm thinking about making a module so it will be released under my name.</p>
<p><strong>JustMichael:</strong><br>
<!-- -->i know there's the sampnodes, that's amir, and i also help on that sometimes so that should be easy to poty over if it doesn't already work.</p>
<p><strong>BigETI:</strong><br>
<!-- -->i think it already works with openmp, it would be better and faster if we use the C API that we are providing for openmp so it's better than going through the pawn layer</p>
<p><strong>JustMichael:</strong><br>
<!-- -->yeah well we'll have to find a way to translate the rust plug in over somehow, or the rust sdk, to make that work</p>
<p><strong>Y_Less:</strong><br>
<!-- -->samp gdk?</p>
<p><strong>JustMichael:</strong><br>
<!-- -->yeah we're gonna find a way to support the current rust plugins</p>
<p><strong>BigETI:</strong><br>
<!-- -->no more fake amx bollocks</p>
<p><strong>Y_Less:</strong><br>
<!-- -->a lot of those plugins use samp gdk to access pawn, we just need to change the lowest<br>
<!-- -->level in there</p>
<p><strong>JustMichael:</strong><br>
<!-- -->yeah the rust one doesn't... he just kind of tried to reinvent it in his own way</p>
<p><strong>Southclaws:</strong><br>
<!-- -->i don't think the rust community is that big</p>
<p><strong>JustMichael:</strong><br>
<!-- -->there are a couple of plugins that people do rely on</p>
<p><strong>Southclaws:</strong><br>
<!-- -->yeah i might take a crack at that, i don't know, but it'd be cool to write modules in rust i think, shouldn't be too difficult.</p>
<p><strong>Potassium:</strong><br>
<!-- -->cool, ok, next question: will sampCTL/openCTL be the official package manager for open multiplayer?</p>
<p><strong>Southclaws:</strong><br>
<!-- -->that's my ballpark! yes it will, it will be renamed of course, yeah it's going to<br>
<!-- -->be Open Packet Manager - OPM.</p>
<p><strong>JustMichael:</strong><br>
<!-- -->that's what we decided on</p>
<p><strong>Southclaws:</strong><br>
<!-- -->that's what i decided on!</p>
<p><strong>JustMichael:</strong><br>
<!-- -->i gave you the name!</p>
<p><strong>Southclaws:</strong><br>
<!-- -->we're kind of working on experimental features at the moment, i've sort of just built a couple of quick interesting experimental things for that, they're coming in the recent days, i've been coding, so yeah i'm thinking mainly about developer experience type things so<br>
<!-- -->things like logging and command line interface environment variables, you know, all the stuff that helps you kind of build game modes faster and deploy them faster and automate as many things as you can. such as the deployment process and that sort of thing so<br>
<!-- -->yeah that's where my head is at really. some CTL will remain compatible and will basically just add openmp support. so you can switch to it just by changing a string, in theory, and changing your includes and then recompile and it'll just work. that's the plan anyway!</p>
<p><strong>JustMichael:</strong><br>
<!-- -->that's gonna be a lot of fun!</p>
<p><strong>Southclaws:</strong><br>
<!-- -->and then it'll eventually have a bunch of new features as well, better log handling, better docker support, better deployment automation, stuff like that, some of which will be implemented into openmp itself, a lot of the things that sampCTL does is actually to<br>
<!-- -->get around awkward design choices with the samp server, so a few of those things<br>
<!-- -->won't need to happen, a few of them will just be implemented directly into openmp. so yeah hopefully that answers that</p>
<p><strong>Y_Less:</strong><br>
<!-- -->yes sampCTL/openCTL is officially supported, officially endorsed, probably distributed with it, but that doesn't mean it's required, you can write scripts without it, if you don't know how then you don't have to start using it</p>
<p><strong>Southclaws:</strong><br>
<!-- -->yeah it's kind of like how you can use node.js without npm</p>
<p><strong>Potassium:</strong><br>
<!-- -->cool, ok, next question: what are openmp's current build times?</p>
<p><strong>Southclaws:</strong><br>
<!-- -->does that mean the C++ build times or script?</p>
<p><strong>Potassium:</strong><br>
<!-- -->i don't know</p>
<p><strong>Southclaws:</strong><br>
<!-- -->we could just do both because they're both questions we can answer</p>
<p><strong>BigETI:</strong><br>
<!-- -->if you rebuild the entire project, make sure to make a coffee then! click compile, make a coffee, come back and it will be done.</p>
<p><strong>Y_Less:</strong><br>
<!-- -->it's gotten way better, it used to be like half an hour, now it's about eight minutes.<br>
<!-- -->i spent a lot of time improving that. the player module used to be everywhere, included by everything, if you accidentally touch that file that's a full rebuild. change one line, that's a full<br>
<!-- -->rebuild.</p>
<p><strong>Southclaws:</strong><br>
<!-- -->as for scripts, that shouldn't change too much really. we have a compatibility layer, scripts will just be the same, i think there is a question about that later on so i'll leave that until then.</p>
<p><strong>Potassium:</strong><br>
<!-- -->alright, cool, thank you. next question is: a lot of people wanted to know if we'll have a built-in anti-cheat?</p>
<p><strong>JustMichael:</strong><br>
<!-- -->no, i think we'll have a kind of very small... not really an anti-cheat but more of<br>
<!-- -->just like we will try to block a few known issues, exploits, stuff like that, but i think we're going to leave it to other developers</p>
<p><strong>Southclaws:</strong><br>
<!-- -->we'll provide people the tools to build good anti-cheats, that's probably the most efficient way because then the community can come together and build solutions for specific cheats. because if the community is dependent on us for doing that then it's just going to get overtaken because the amount of people developing cheats is going to outnumber the amount of people developing openmp</p>
<p><strong>Y_Less:</strong><br>
<!-- -->i'll probably post an official kind of repo for one where anybody can contribute, and serve it as a module, because the idea is that eventually... well, it's called openmp, it's meant to be open source. it's not currently because we've not finished the first release, but once it is,<br>
<!-- -->then we can release it and other people can contribute, and that's one of the major areas where we're hoping they will do. so will it have an officially included anti cheat? yes, if you help us!</p>
<p><strong>Potassium:</strong><br>
<!-- -->yeah, that's what it comes down to really, if the community helps then yeah we'll have things like that!</p>
<p><strong>Y_Less:</strong><br>
<!-- -->a lot of people forget that samp did have one, they experimented with an anti cheat for a while, and by a while i mean about a month, before it just became completely unfeasible because oh look they've blocked this cheat, it took us seven seconds to get around it, now<br>
<!-- -->you have a new cheat. it's a constant game of cat and mouse.</p>
<p><strong>JustMichael:</strong><br>
<!-- -->i feel the anti cheat should be separate, because we won't be updating the mod that much, we don't want to be updating every day or every week, it's going to be more of a long-term thing, but an anticheat needs to be updated quite frequently to combat the cheats so<br>
<!-- -->having it as a separate module or something like that would probably be better for servers than having to rely on us waiting for us to release at the end of the month or however<br>
<!-- -->long our update process will be</p>
<p><strong>Y_Less:</strong><br>
<!-- -->yeah that's kind of what i meant about boosting it centrally</p>
<p><strong>Potassium:</strong><br>
<!-- -->so if we just have it open then everyone can contribute and then it's not entirely on you guys to keep it updated and stuff. and then on that note, CLEO mods, a lot of people want to know if they'll still work, or mods in general</p>
<p><strong>JustMichael:</strong><br>
<!-- -->they're all client-side</p>
<p><strong>j0sh...:</strong><br>
<!-- -->there'll be no changes</p>
<p><strong>JustMichael:</strong><br>
<!-- -->not in this version anyway</p>
<p><strong>Y_Less:</strong><br>
<!-- -->um so unless they start cheating in a way that the server can detect</p>
<p><strong>Potassium:</strong><br>
<!-- -->ok, people wanted to know if openmp will have a fixed GPCI function like a serial in MTA</p>
<p><strong>JustMichael:</strong><br>
<!-- -->the problem with that is it's never going to be a 100% guaranteed way of banning someone or finding out if that player is that player, because anyone with any kind of skills at all will just use some kind of modifier for their system and they will just change some information and then they've got a brand new ID so there's not really much we can do with<br>
<!-- -->that, we can we can provide you the tools, but i can't say they're ever gonna be 100% working.</p>
<p><strong>Potassium:</strong><br>
<!-- -->cool, anyone got anything else to add to that? nope? okay cool</p>
<p><strong>Y_Less:</strong><br>
<!-- -->i do have something to add on the AC side of things since people are asking about that a bit more. so we definitely can't have a general ban system because servers are independent. if one server wants to keep you and one sever wants to ban you, that's<br>
<!-- -->up to the server. if one server wants to let you keep cheating that's up to the server.</p>
<p><strong>Southclaws:</strong><br>
<!-- -->i used to play a cheating server and it was really fun, i just want to add that</p>
<p><strong>Potassium:</strong><br>
<!-- -->yeah so a global ban list wouldn't work for reasons like that</p>
<p><strong>Y_Less:</strong><br>
<!-- -->oh that's a terrible idea, i know other mods have done it, that doesn't mean it's a<br>
<!-- -->good idea. as for the anticheat itself, it will be separate and yeah you can update it at any rate you like.</p>
<p><strong>Potassium:</strong><br>
<!-- -->awesome. alright we got a lot of questions about raknet, i think people just want to know what your thoughts are on it, if openmp will use the same version that samp uses, blah blah blah</p>
<p><strong>j0sh...:</strong><br>
<!-- -->there's a minor difference but nothing extraordinary, we need basically the same major version for it to actually communicate with samp perfectly</p>
<p><strong>Y_Less:</strong><br>
<!-- -->yeah the compatibility layer for communicating with existing samp clients is basically the same.</p>
<p><strong>iAmir:</strong><br>
<!-- -->it's going to be changed, right? so it's going to be changed later, for example when openmp client gets developed we're going to add a new networking library so for example other networking library out there, each one of them is probably better than raknet, especially the version that we are using right now. so yeah for now we're going to use<br>
<!-- -->raknet as the same version that samp is using, only to keep the backward compatibility. other than that for example for NPCs that josh is working on right now, i mean not right now but he was working on it, but he was using enet, that's probably, our first choice and it's way much better than raknet, and it gets contributed to more frequently, so we do not have issues with exploits or stuff that come up later because we all know that raknet project is<br>
<!-- -->dead, the latest version is probably six years old by now. so that's the only reason that we're using raknet now, we're gonna change that.</p>
<p><strong>Potassium:</strong><br>
<!-- -->cool, i don't understand any of that, but thank you. so there was a lot of discussion in<br>
<!-- -->the thread about sync and c-bug and stuff like that, so i guess people want to know what the sync will be like compared to samp</p>
<p><strong>JustMichael:</strong><br>
<!-- -->the exact same</p>
<p><strong>j0sh...:</strong><br>
<!-- -->exactly the same yeah. we'll see, but we can't do that until the client comes out, and i'm probably not going to do that because that's ruining the experience of samp.</p>
<p><strong>Potassium:</strong><br>
<!-- -->yeah so there was a lot of debate about that, and obviously there is within the team<br>
<!-- -->as well.</p>
<p><strong>JustMichael:</strong><br>
<!-- -->yeah i wouldn't agree with that because my server literally relies on those bugs</p>
<p><strong>Southclaws:</strong><br>
<!-- -->people enjoy that stuff and there's already ways to stop it and prevent it anyway so i don't really think it's our prerogative to get involved in that</p>
<p><strong>JustMichael:</strong><br>
<!-- -->i think that in the client we should probably have a way to disable those kind of bugs if the server owner wants to, but it should be an option</p>
<p><strong>Southclaws:</strong><br>
<!-- -->you can disable it via pawn scripts anyway</p>
<p><strong>JustMichael:</strong><br>
<!-- -->yeah you can</p>
<p><strong>Potassium:</strong><br>
<!-- -->so the consensus on that, just to clarify, is that we are just going to leave it how it is and<br>
<!-- -->each server can choose what they do with it. is that right?</p>
<p><strong>Southclaws:</strong><br>
<!-- -->pretty much yeah</p>
<p><strong>JustMichael:</strong><br>
<!-- -->yeah pretty much</p>
<p><strong>Southclaws:</strong><br>
<!-- -->it's one of those things where you're damned if you do, and you're damned if you don't, so yeah</p>
<p><strong>Y_Less:</strong><br>
<!-- -->again it's up to servers. servers are different so if they want it, they can have it</p>
<p><strong>Southclaws:</strong><br>
<!-- -->kind of like lag comp, some people like lag shot, some people don't like lag shot, which is why it was an option you could turn on and off</p>
<p><strong>Potassium:</strong><br>
<!-- -->that's right yeah, i think that's the best way to go about it. ok so a very popular question both on the forum and in this chat which i know you guys don't want to answer but we're gonna do it... samp for android. what are your thoughts on that?</p>
<p><strong>JustMichael:</strong><br>
<!-- -->we're not gonna support it directly, but we're gonna give the tools so that anyone else<br>
<!-- -->can do it</p>
<p><strong>Southclaws:</strong><br>
<!-- -->we don't want to support the existing samp mobile, because the existing current<br>
<!-- -->version of samp mobile is based on stolen code. it's very not legal.</p>
<p><strong>BigETI:</strong><br>
<!-- -->someone here probably wants to use openmp and then make their own android clients</p>
<p><strong>Potassium:</strong><br>
<!-- -->so officially as open multiplayer developers, NO is the answer?</p>
<p><strong>iAmir:</strong><br>
<!-- -->there is actually some stuff blocking us, for example to implement our own library into an APK file we need to modify that, so that means we need to modify GTA SA apk<br>
<!-- -->file for android, and that actually has legal issues. so besides that, we'd actually need<br>
<!-- -->to modify some code in gta apk file too, so either going to be the java assembly or<br>
<!-- -->we'd patch the current gta sa code, so that would load our own library which would be openmp client, so for that as i said we'd need to modify the game. and we'd need to give people the modified version, which is not legal, so we would have issues legal issues later, copyright issues later.</p>
<p><strong>Southclaws:</strong><br>
<!-- -->technically we could legally distribute the binary to players and then let them add it to their apk</p>
<p><strong>Y_Less:</strong><br>
<!-- -->there is stolen versions of the source code out and about, so that's what the android<br>
<!-- -->version is based on. if we wanted to use that we could have used that, we could have<br>
<!-- -->started from that code, updated the server, and written openmp using stolen code,<br>
<!-- -->and it would have been very illegal and that's entirely the reason why we started openmp from scratch, zero old source code in it, you can compare them and they are absolutely nothing alike. because we do not in any way condone stealing.</p>
<p><strong>Potassium:</strong><br>
<!-- -->correct, that's a very important point to reiterate, we do not support stolen code</p>
<p><strong>Y_Less:</strong><br>
<!-- -->and there is NONE in this mod.</p>
<p><strong>JustMichael:</strong><br>
<!-- -->it would potentially put us in a really bad spot with legal issues if we were to go down that route anyway</p>
<p><strong>Y_Less:</strong><br>
<!-- -->it would've been out years ago if we did!</p>
<p><strong>Potassium:</strong><br>
<!-- -->now along a similar path of questions, people want to know why they should play openmp instead of mta. so without without insulting other mods, what's different?</p>
<p><strong>JustMichael:</strong><br>
<!-- -->well we're still offering the same samp experience that everyone loves, but i guess we're now offering an upgrade path. more features down the line, a possible path for everyone to kind of like move forward, even add the stuff that everyone's wanted from samp for years. a lot of people have left samp because samp has been down the same path for a very long time, it's not gone anywhere, very little has been added. but now we're giving people the opportunity to add what they want now, after we've released it, they can add stuff you and that path's open now.</p>
<p><strong>Potassium:</strong><br>
<!-- -->anyone got anything else to add?</p>
<p><strong>Southclaws:</strong><br>
<!-- -->mta is great, i like mta. mta's not a bad software, there's no beef there, the map editor is great! i always used to use it. but there is a cultural difference between mta and samp, and i don't think anyone's really managed to figure out what it is exactly. mta definitely has better features, it is an objectively better thing than samp, but people just kind of like samp more, i guess it stays close to the game.</p>
<p><strong>JustMichael:</strong><br>
<!-- -->they have different goals</p>
<p><strong>Southclaws:</strong><br>
<!-- -->yeah different goals, mta kind of feels more like garry's mod in a way. it's more of a sandbox type create your own crazy multiplayer game type thing</p>
<p><strong>Hual:</strong><br>
<!-- -->people like simplicity</p>
<p><strong>Southclaws:</strong><br>
<!-- -->and the ability to join the server without downloading 500 megabytes of anime skins is always a good thing!</p>
<p><strong>Y_Less:</strong><br>
<!-- -->i guess samp and mta serve slightly different markets, why you'd use this one instead of mta is the same reason why you'd use samp instead of mta - it's essentially samp.</p>
<p><strong>Potassium:</strong><br>
<!-- -->the next lot of questions are more about the structure of the mod and the community rather than scripting. so people would like to know if it will be compatible with the steam version of san andreas because obviously, as we know, samp is not.</p>
<p><strong>Hual:</strong><br>
<!-- -->it should be.</p>
<p><strong>Southclaws:</strong><br>
<!-- -->yeah, mta does it, i'm sure we can do it</p>
<p><strong>j0sh...:</strong><br>
<!-- -->it will just take a lot of work.</p>
<p><strong>Y_Less:</strong><br>
<!-- -->there's no reason not to.</p>
<p><strong>Southclaws:</strong><br>
<!-- -->but if not, there are downgraders anywa,y and there's been downgraders for years. so either way it's not a huge issue i don't think.</p>
<p><strong>Y_Less:</strong><br>
<!-- -->no but we should be able, there's really no reason not to</p>
<p><strong>Potassium:</strong><br>
<!-- -->well that's that's exciting!<br>
<!-- -->ok now the master list. people want to know what's going to happen with that, will we have a<br>
<!-- -->paid list, etc. etc. - the server list</p>
<p><strong>JustMichael:</strong><br>
<!-- -->we have a few ideas for it but i'm not sure, we've not gotten to that point where we've gone "okay this is what we're doing"</p>
<p><strong>Southclaws:</strong><br>
<!-- -->i want to reiterate that this is not a for-profit project at all. there have been ideas thrown around, because people actually do genuinely want a way to... you know, if they run a big server and it is kind of like a business, then they do want a way to kind of bump it to the top like an investment kind of thing, and i appreciate that and i've actually talked to quite a few people about that desire from the sort of larger server community, there are ideas and i don't think we're quite ready to discuss them all yet because they're not really fleshed out. but i have been working on the new server index which is currently being deployed. it's essentially going to be like samp-servers.net but with an updated backend, and it'll support samp servers and in future openmp servers, and it's kind of going to be like the advertisements board from the forum, but better because it's not on a forum, but yeah it'll be like a dedicated website and it'll be openmp servers or something like that, and that will come soon. the first version is kind of done, and that will be open source as well, so you kind of follow along the development of that and eventually that will turn into the list. as i said we're quite early on decisions like that, and i don't really know what the team's consensus is, but i think we're probably not going to split servers into two separate lists because that just kind of separates people into the bad ones and the good ones in a way, and it kind of creates us versus them sort of... not a conflict, but just like a, you know, it's kind of like a separation</p>
<p><strong>Y_Less:</strong><br>
<!-- -->a divide</p>
<p><strong>Southclaws:</strong><br>
<!-- -->and i think giving the smaller servers a chance to kind of get some visibility is good as well because sometimes people make a really cool project and maybe they can't pay to go onto the hosted list or whatever, so one of my goals in that is to kind of surface potentially interesting servers that don't have reach. but at the moment it's just going to be like a list and you can sort it by whatever you want and find servers. that'll be the first version.</p>
<p><strong>JustMichael:</strong><br>
<!-- -->yeah samp at the moment is very biased for its hosted tab</p>
<p><strong>Southclaws:</strong><br>
<!-- -->yeah, and it's limited and expensive</p>
<p><strong>BigETI:</strong><br>
<!-- -->yeah and it's a horrible name</p>
<p><strong>iAmir:</strong><br>
<!-- -->for our own server list we can actually add some options like ratings, voting and stuff like that, so like there can be two sections for example uh one could be the ones with most ratings, and the other could be for example a server that got rated frequently, in recent days, so we can actually see the trends and stuff like that. so new servers can go up and can be seen by other players. so that's actually a good way for new servers that have actually a unique idea so they can actually be seen by other players and get famous, it's actually a better way than spending money on some other lists or stuff like that.</p>
<p><strong>Potassium:</strong><br>
<!-- -->so i think the really important thing to take away from that is that we are a not-for-profit project, so we're not gonna create a server list purely for the intention of making money off of it.</p>
<p><strong>Y_Less:</strong><br>
<!-- -->but that doesn't mean there won't be ways to advertise. and if you have ideas about thatm post on the forums!</p>
<p><strong>Potassium:</strong><br>
<!-- -->yes, and that is <a href="http://burgershot.gg/" target="_blank" rel="noopener noreferrer">http://burgershot.gg</a> - sign up!</p>
<p><strong>Y_Less:</strong><br>
<!-- -->that's something we've discussed for like two years and we have no conclusion</p>
<p><strong>Potassium:</strong><br>
<!-- -->ok, someone asked: does the openmp server actually include any kind of performance upgrade compared to the samp server? i think we sort of answered that before in the mta question but if anyone has anything else to add to that...</p>
<p><strong>Hual:</strong><br>
<!-- -->yeah can i just say i've actually run it on a raspberry pi zero, so yeah</p>
<p><strong>iAmir:</strong><br>
<!-- -->yeah you can host your own server while you're walking down the street, you have your raspberry pi in your pocket and still running your samp server so yeah it should be fast that this can be possible</p>
<p><strong>JustMichael:</strong><br>
<!-- -->should we mention because we're using C++17 and there is like a minimum deployment for that, right?</p>
<p><strong>Hual:</strong><br>
<!-- -->what do you mean?</p>
<p><strong>Y_Less:</strong><br>
<!-- -->no? depends how you build it</p>
<p><strong>JustMichael:</strong><br>
<!-- -->i mean like library requirements as in like system operating system libraries and stuff like that</p>
<p><strong>Southclaws:</strong><br>
<!-- -->Glibc and stuff like that</p>
<p><strong>BigETI:</strong><br>
<!-- -->it shouldn't be a problem</p>
<p><strong>Y_Less:</strong><br>
<!-- -->yeah there's no reason why you can't build it for a different system</p>
<p><strong>JustMichael:</strong><br>
<!-- -->yeah you're probably right yeah i'm thinking of edge cases like ark and stuff, but that'll probably work anyway... wait didn't someone actually build it for ark already? oh maybe that was you Hual? maybe that was you doing it for me?</p>
<p><strong>Southclaws:</strong><br>
<!-- -->oh you mean arm?</p>
<p><strong>JustMichael:</strong><br>
<!-- -->sorry yeah i said ark didn't i?</p>
<p><strong>Hual:</strong><br>
<!-- -->so yeah performance isfine, compatibility is fine</p>
<p><strong>Potassium:</strong><br>
<!-- -->now the question everyone hates... 0.3 DL. a lot of people, a lot of server owners asked if<br>
<!-- -->if it will be compatible on first release so they can instantly switch their servers over.</p>
<p><strong>everyone:</strong><br>
<!-- -->yes</p>
<p><strong>BigETI:</strong><br>
<!-- -->that was easy</p>
<p><strong>Potassium:</strong><br>
<!-- -->that WAS easy because the last time we talked about it we had very divided opinions and we kind of just asked the community what their opinions were,</p>
<p><strong>JustMichael:</strong><br>
<!-- -->yeah well we already know it's possible because adrian graber wrote that plugin that literally tricks the client into connecting so we know we can do it</p>
<p><strong>Potassium:</strong><br>
<!-- -->and then, on a similar path, i know we're not taking live questions yet but someone in chat had a really good question: have you guys thought about making a workshop for openmp something like how mta has for maps, scripts, plugins, etc?</p>
<p><strong>Southclaws:</strong><br>
<!-- -->uh that would be really cool!</p>
<p><strong>JustMichael:</strong><br>
<!-- -->yeah that would be cool!</p>
<p><strong>Y_Less:</strong><br>
<!-- -->the question is have we thought about it? the answer is no. but now we will!</p>
<p><strong>Potassium:</strong><br>
<!-- -->so thank you! moving on, people wanted to know more about future plans. so a specific question was "what's the next step for openmp after it reaches samp flow" - so once we've we've got it to compatibility and where we want it to be, what are your future plans and ideas?</p>
<p><strong>JustMichael:</strong><br>
<!-- -->i think after release we're just going to try and start with the client, just head for the second release i guess. we haven't really thought about it too much.</p>
<p><strong>Hual:</strong>
we should probably fix up the server first</p>
<p><strong>JustMichael:</strong><br>
<!-- -->we'll probably have a time frame after we've released where we wait for bug reports<br>
<!-- -->and stuff and handle that, because in any software there's always going to be those edge cases that need to be sorted, and no software that comes out the gates on the first try is<br>
<!-- -->ever going to be perfect.</p>
<p><strong>Potassium:</strong><br>
<!-- -->so is it fair to say the the initial release, and for a while after, won't really see any new features, they'll come later in the future maybe?</p>
<p><strong>JustMichael:</strong><br>
<!-- -->oh yeah probably not straight away</p>
<p><strong>j0sh:</strong><br>
<!-- -->we're basically limited by the client so without our own client we can't really do much</p>
<p><strong>Y_Less:</strong><br>
<!-- -->we can do some clever things, we've got some tricks up our sleeves</p>
<p><strong>Potassium:</strong><br>
<!-- -->watch this space, basically!</p>
<p><strong>BigETI:</strong><br>
<!-- -->but most of them have already been done in one way or another</p>
<p><strong>Potassium:</strong><br>
<!-- -->well there's always something new i think. on that note, what kind of things would you guys like to eventually add once it's all compatible and bugs are all sorted and everything, new things that you guys would like to see?</p>
<p><strong>Southclaws:</strong><br>
<!-- -->sex animations.</p>
<p><strong>Potassium:</strong><br>
<!-- -->oh my god.</p>
<p><em>everyone laughs</em></p>
<p><strong>j0sh...:</strong><br>
<!-- -->I want unicode. I want the clown emoji in chat.</p>
<p><strong>Potassium:</strong><br>
<!-- -->oh yeah emojis in chat!!!</p>
<p><strong>Southclaws:</strong><br>
<!-- -->the ability for russian people to talk to english people on the same server without having to change the code page</p>
<p><strong>JustMichael:</strong><br>
<!-- -->yeah that would be nice</p>
<p><strong>Southclaws:</strong><br>
<!-- -->that would be great</p>
<p><strong>j0sh...:</strong><br>
<!-- -->that's revolutionary</p>
<p><strong>Potassium:</strong><br>
<!-- -->that is revolutionary!</p>
<p><strong>Southclaws:</strong><br>
<!-- -->multi-server clustering would be cool, there's a lot of russian servers out there that run like 20 servers and they're all connected and you can imagine it's very janky in the back end. i think facilitating that would be kind of neat, to be able to switch server in game and stuff like that.</p>
<p><strong>Potassium:</strong><br>
<!-- -->someone in chat just asked: voice chat in openmp?</p>
<p><em>everyone laughs</em></p>
<p><strong>Southclaws:</strong><br>
<!-- -->do you want 12 year olds shouting at you down the street? i don't think so. there are plugins out there, and of course with the client and the server out in the future, if you want to do voice chat like plug-ins then go wild!</p>
<p><strong>JustMichael:</strong><br>
<!-- -->there are quite a few on there already, i think i know two already</p>
<p><strong>Southclaws:</strong><br>
<!-- -->i think they're closed source though so it's kind of sketchy</p>
<p><strong>JustMichael:</strong><br>
<!-- -->no i think i think one of them is open sourced</p>
<p><strong>Y_Less:</strong><br>
<!-- -->there's one actually open source</p>
<p><strong>Southclaws:</strong><br>
<!-- -->well there you go, that's the solution. i think one thing i do want to say though is just because we're making a from scratch new multiplayer mod platform to build on, that doesn't mean that the actual mod itself has to have every single possible feature crammed<br>
<!-- -->into it. we're making a better plugin api for a reason, we get questions like are you going to add mysql or are you going to add sscanf, or are you going to add this plug-in to that plug-in, and most of the answer to those questions is no, because there's no reason to. in fact there's more reason to build more things as plugins because then they're modular, you can add and remove them when you don't need them. so i think the same goes for things like<br>
<!-- -->voice chat and client things. we'll provide a better set of tools for people to actually augment the experience and add new things to it, and i think that's better than cramming<br>
<!-- -->it full of features that maybe most people won't actually use.</p>
<p><strong>Hual:</strong><br>
<!-- -->yeah but also since installing plugins in samp is kind of annoying, we probably should think about having an official plugin registry where servers can actually specify what client plugins the clients download</p>
<p><strong>Southclaws:</strong><br>
<!-- -->yeah like a client version of sampctl i suppose. and of course the worry there is always about being able to run arbitrary code on a user's computer so you know i think having a repository would be kind of good</p>
<p><strong>Y_Less:</strong><br>
<!-- -->just something to bear in mind, half of the big plugins that everybody uses like mysql, streamers, sscanf, all that, the developers for those plugins are ON THIS TEAM! we're not just going to stop developing them and say you can't get my plug in now because i wrote<br>
<!-- -->something else.</p>
<p><strong>Potassium:</strong><br>
<!-- -->so can we just clarify for some people asking in chat about making a client. so that's<br>
<!-- -->that's a future plan, right? making our own client?</p>
<p><strong>everyone:</strong><br>
<!-- -->yes, that's the second version</p>
<p><strong>Southclaws:</strong><br>
<!-- -->that's the fun part</p>
<p><strong>Potassium:</strong><br>
<!-- -->people were asking about other communities that speak different languages and such, and they kind of want to know what we're doing to work with those communities and how we plan on spreading the word to those communities. i think it's fair to say that we're working on that, we're recruiting volunteers i guess to translate our wiki pages and whatever else to other languages, to moderate language sections on the forum, <a href="http://burgershot.gg/" target="_blank" rel="noopener noreferrer">http://burgershot.gg</a> by the way, and generally just to be the point of contact between our team and the other communities i guess</p>
<p><strong>JustMichael:</strong><br>
<!-- -->we've made a huge effort already to translate the wiki, so we're making an improvement to<br>
<!-- -->make it easier for those communities to combine with the larger community. i myself<br>
<!-- -->have already talked to quite a few because i know quite a lot of balkan area servers, i<br>
<!-- -->actually run one even though i don't speak the language, but there you go. i actually run a second one now, and a role play server, so i've been in touch with quite a few of their areas and tried to get quite a few of them over and a lot of them are on board, a lot of server owners from those areas are on board, so that's that's always good</p>
<p><strong>Southclaws:</strong><br>
<!-- -->i was surprised to know there's quite a big chinese, japanese, taiwanese community as well that i didn't even know about, so i've been talking to people in those communities<br>
<!-- -->and helping translate and stuff.</p>
<p><strong>Y_Less:</strong><br>
<!-- -->i found out that there was a big chinese and japanese community about seven seconds ago when you said that</p>
<p><strong>Southclaws:</strong><br>
<!-- -->i've mentioned it before in the discord but yeah there is actually a big community, the problem's always been the language barrier, but the translation stuff is really helping with that the fact, that you can actually do it, because the old wiki you couldn't create an<br>
<!-- -->account for many years for some reason, so no one could translate the wiki</p>
<p><strong>Y_Less:</strong><br>
<!-- -->the reason is kalcor</p>
<p><strong>Southclaws:</strong><br>
<!-- -->so people usually make their own wikis and stuff and they got outdated and yeah, problems and problems. i have heard apparently in thailand there's actually a single translated version of the godfather game mode that everybody copies and uses</p>
<p><strong>Y_Less:</strong><br>
<!-- -->there are already multiple language sections on discord, and the forums. the big issue that we had, because the samp forums used to have language sections as well, the problem<br>
<!-- -->was moderating them because if we don't speak the language we don't know what you're saying. if there's issues people make reports like oh this person's doing something bad.<br>
<!-- -->well we don't know, we can't review that really, so we'd love to reach out to communities,<br>
<!-- -->we kind of need people within those communities that speak english to liaise with, but we're very interested in finding those people who are involved in one of the foreign<br>
<!-- -->language communities, and speak english, please speak to us!</p>
<p><strong>Potassium:</strong><br>
<!-- -->yeah so if you know trustworthy members of the community who speak other languages and want to help us out, tell them to get in touch with us on our forum, our discord, wherever, um because we would love that</p>
<p><strong>Y_Less:</strong><br>
<!-- -->i mean we already do have several languages in the team, we speak english or german or<br>
<!-- -->persian or...</p>
<p><strong>Potassium:</strong><br>
<!-- -->australian</p>
<p><strong>Y_Less:</strong><br>
<!-- -->that's about it, yeah, australian, that's a unique language... yorkshire...</p>
<p><strong>Hual:</strong>
also we're pretty close with the turkish and romanian communities as well,<br>
<!-- -->they're pretty big</p>
<p><strong>Y_Less:</strong><br>
<!-- -->and i do have contacts in the russian community as well.</p>
<p><strong>Potassium:</strong><br>
<!-- -->so we are trying.</p>
<p><strong>Y_Less:</strong><br>
<!-- -->it's tricky, it's hard, that's why it's not worked before.</p>
<p><strong>Potassium:</strong><br>
<!-- -->yeah and lack of effort. so the last kind of pre-loaded question from the forum today<br>
<!-- -->is: what are you most looking forward to about openmp? and i just thought this was<br>
<!-- -->really wholesome.</p>
<p><strong>everyone:</strong><br>
<!-- -->the release.</p>
<p><strong>Potassium:</strong><br>
<!-- -->after the release, just in general. it's a nice question because i'm glad that people can see that we're happy to be doing this and excited to be doing it. so yeah what are you looking forward to?</p>
<p><strong>JustMichael:</strong><br>
<!-- -->just looking forward to getting to a state where either players are finally enjoying the<br>
<!-- -->features, or we get to a point where the rest of the community can take over, pretty much that to be honest</p>
<p><strong>Potassium:</strong><br>
<!-- -->anyone else want to add anything?</p>
<p><strong>j0sh...:</strong><br>
<!-- -->no bug reports</p>
<p><strong>Potassium:</strong><br>
<!-- -->i just i'm honestly just kind of looking forward to bringing together the community again<br>
<!-- -->because we all kind of separated and went off</p>
<p><strong>JustMichael:</strong><br>
<!-- -->it'd be nice to have a big increase of players, especially now that we talked<br>
<!-- -->about including the other communities that have gone their own ways, it'd be<br>
<!-- -->nice to have them then because yeah you know more players are better</p>
<p><strong>Potassium:</strong><br>
<!-- -->not even just player count, just in general, bringing the community back together</p>
<p><strong>Y_Less:</strong><br>
<!-- -->yeah we're not doing this for the sake of a 15 year old game because the game is the greatest game ever, we're doing it because of the community</p>
<p><strong>Potassium:</strong><br>
<!-- -->yeah that's right</p>
<p><strong>Southclaws:</strong><br>
<!-- -->HOWEVER, it IS the greatest game ever!</p>
<p><strong>JustMichael:</strong><br>
<!-- -->can confirm!</p>
<p><strong>Y_Less:</strong><br>
<!-- -->uhhhh vice city is better.</p>
<p><strong>Potassium:</strong><br>
<!-- -->liberty city is my home, i'll always love gta 3.</p>
<p><strong>JustMichael:</strong><br>
<!-- -->so the team is completely split</p>
<p><strong>Potassium:</strong><br>
<!-- -->yes. but on that note, we get a lot of questions asking like san andreas is such an old game, why are you bothering, why do you care, kind of thing. and i just want to answer<br>
<!-- -->that one, or start by answering that one, and say that i think it's important to remember that a large portion of the samp player base come from countries where technology isn't necessarily as up-to-date or as high priority as it is where some of us live, and a lot of our players play samp because it's one of the only games that can run on their pcs or that they can afford, so i don't know i just absolutely love the fact that we can give them the ability to play and create their own game modes like battle royales or racing modes or whatever,<br>
<!-- -->so that everyone can still experience these kind of games even though they can't afford like pubg or call of duty or you know, like they can't run those things</p>
<p><strong>Southclaws:</strong><br>
<!-- -->a side thing to add to that i think is the the scripting side of it, it's like a gateway drug in a way, it's a gateway for people to learn how to code, and if you learn how to code that can be great because you can make things and you can make games and you can have fun but you can also get a job doing it</p>
<p><strong>Potassium:</strong><br>
<!-- -->there are a LOT of people-</p>
<p><strong>Southclaws:</strong><br>
<!-- -->a lot of people here actually got jobs because of samp, i'm one of them. it's definitely a<br>
<!-- -->great gateway to learning how to code because pawn is quite a simple language, and then you might move into C++ to build plugins and that's kind of a more complex language, and then you might move to doing web stuff like php and javascript because of user<br>
<!-- -->control panels and forums and stuff, and it just goes out from there and that's one of the main things i love about it, i don't really play the game anymore and i haven't really written much code for a few years, but i just love the community, i love helping people with that side of things, so that's why i'm in it</p>
<p><strong>Y_Less:</strong><br>
<!-- -->i think you can track the history of games over the last 15 years through samp modes.<br>
<!-- -->whatever the current popular games is, there's a samp version of it</p>
<p><strong>Potassium:</strong><br>
<!-- -->yeah absolutely, and i love that!</p>
<p><strong>Y_Less:</strong><br>
<!-- -->pubg - samp. battle royale - samp. microsoft flight simulator samp.</p>
<p><strong>iAmir:</strong>
among us...</p>
<p><strong>Southclaws:</strong><br>
<!-- -->i've always wanted to write a Trouble in Terrorist Town style game mode... maybe that's our next stream, making a TTT gamemode.</p>
<p><strong>Potassium:</strong><br>
<!-- -->but yeah just back on that note, i don't think there are many games or communities where you can do that kind of thing, where you can have different modes, maybe roblox...</p>
<p><strong>Southclaws:</strong><br>
<!-- -->garry's mod is like the closest thing, and even that you need a semi-modern pc to actually run it, and when you join the server you usually download 500 megabytes of anime skins</p>
<p><strong>Potassium:</strong><br>
<!-- -->every time i play garry's mod i get texture errors and stuff, and i have a good pc. so anyway i think we will go ahead and take some live questions from chat, so you guys listening...</p>
<p><strong>Y_Less:</strong><br>
<!-- -->just quickly before you do that, one other thing related to that point we were saying lots of people have got started in samp learning to code through pawn, it's quite a simple<br>
<!-- -->language, and a lot of people always ask why we are using pawn when it's such a simple<br>
<!-- -->language... and that is the answer, we use it because it's a simple language, anybody can pick it up. it's an 18+ game but let's face it we have a lot of kids playing, they come along and go okay i want to make my own server how do i do that? well first you need to download this editor and these plugins, and then you download this other compiler and these other things and do this and this and this, and then this and then this and this, and<br>
<!-- -->then you can start writing your first code in this horribly conflicted language. they just go<br>
<!-- -->oh... whereas with samp it was how do i start coding? open this, done.</p>
<p><strong>Southclaws:</strong><br>
<!-- -->and you've already got a piece of code to start with as well.</p>
<p><strong>Y_Less:</strong><br>
<!-- -->the barrier to entry is zero</p>
<p><strong>Potassium:</strong><br>
<!-- -->put it this way, if i can do it anyone can do it. and that is not an exaggeration!</p>
<p><strong>Southclaws:</strong><br>
<!-- -->Potassium learns to code - the video series. when's that happening?</p>
<p><strong>Potassium:</strong><br>
<!-- -->yes, i'm so down for that! but you guys are going to get very angry.</p>
<p><strong>Y_Less:</strong><br>
<!-- -->i actually think that would be a realy good series.</p>
<p><strong>Potassium:</strong><br>
<!-- -->i'm very hard to teach, and also i will cry. but that's okay, that's good content i guess! anyway we're gonna take some live questions from chat, so if you guys in the chat have any questions, which i know you do...</p>
<p><strong>JustMichael:</strong><br>
<!-- -->someone just asked about GetAsyncKeyState</p>
<p><strong>iAmir:</strong>
i'm not sure actually having that is actually a good idea because what samp actually does right now is listening to key events, so what player has mapped it to the gta game itself, so for example when you press F, if you change the F button to i don't know G for example, for interim vehicles when they press G, it's gonna get called on the server side, so what they want and what they were asking is actually sending all the keys, all the key events to the server, which is actually not um a good idea because you can actually run a key logger or stuff like that, and you're gonna have some security issues</p>
<p><strong>Southclaws:</strong><br>
<!-- -->it also proves the key layout is then controlled by the server and not the player, and that's kind of weird because if you like using a different keyboard layout, like maybe you like using ESDF which i know some fps players actually use things like that and other layouts for WASD, if you join a server and suddenly all your buttons are kind of different then<br>
<!-- -->it can be kind of confusing. so i mean we could add more keys that can be rebound, but<br>
<!-- -->i think using the games keys actually gives players the ability to customize their sort of<br>
<!-- -->layout and stuff to match them, not the server forcing them to press F if they want to use E for entering cars or something, picking up items, stuff like that</p>
<p><strong>iAmir:</strong>
i think how we should handle it is add some actions not keys just a bunch of actions so anyone can bind anything to them</p>
<p><strong>Southclaws:</strong><br>
<!-- -->we have Y and N as well that were added at some point, was it H? i can't remember, there were some new keys added at one point. we could do stuff like that, there was a there was actually a key i use... tab is actually a key action, but it's also the scoreboard, so users can't really use it, but if you rebind tab to like something like R, suddenly you've got a new key to<br>
<!-- -->actually rebind on the server side. so there's there's potential there.</p>
<p><strong>Y_Less:</strong><br>
<!-- -->yeah a better way is just to have the server define actions and then the client can get that<br>
<!-- -->list of actions and just assign their own keys but then still it's just they've triggered this action they've pressed this key.</p>
<p><strong>Southclaws:</strong><br>
<!-- -->yeah and also not allow people to bind every single key on the keyboard and then keylog people.</p>
<p><strong>Y_Less:</strong><br>
<!-- -->it won't work because they if they're allowed to bind their own keys they can change it so the keylogger is useless, but they've triggered these actions in this order, what key is that?i don't know</p>
<p><strong>JustMichael:</strong><br>
<!-- -->i'm not sure if this is a direct question to us but it just says what is the recommended amount of dedicated rams</p>
<p><em>everyone laughs</em></p>
<p><strong>Potassium:</strong><br>
<!-- -->that's jamie</p>
<p><strong>JustMichael:</strong><br>
<!-- -->bloody troll</p>
<p><strong>Southclaws:</strong><br>
<!-- -->get trolled bro</p>
<p><strong>iAmir:</strong><br>
<!-- -->so i've listed some questions, one of them was about ddos and people attacking other servers which is very common in the spanish community</p>
<p><strong>Potassium:</strong><br>
<!-- -->all communities</p>
<p><strong>iAmir:</strong><br>
<!-- -->yeah, kind of all communities, but in the spanish community there's some guy, stuff like that</p>
<p><strong>Southclaws:</strong><br>
<!-- -->oh yeah Graber had to write a weird proxy thing</p>
<p><strong>iAmir:</strong><br>
<!-- -->yyeah and people are now asking about that, for ddos protection</p>
<p><strong>JustMichael:</strong><br>
<!-- -->there's nothing we can do about ddos itself</p>
<p><strong>Southclaws:</strong><br>
<!-- -->the thing that Graber wrote and, something that i've worked on, and actually you've<br>
<!-- -->worked on this michael, is a proxy, which is kind of awkward to get working because<br>
<!-- -->of how samp quote unquote encrypts data, it uses the ports like a very simple cipher but if you can put a proxy on another server and then use round robin dns or something then that can be a good mitigation technique, so i think providing the tools to do that would be a good thing</p>
<p><strong>JustMichael:</strong><br>
<!-- -->there would be a problem though if someone was to ddos the actual load balance or proxy itself then that would ruin it for all servers</p>
<p><strong>Southclaws:</strong><br>
<!-- -->yeah but a proxy load balancer is a lot lighter than the game server so you can dedicate multiple threads to actually handle that load, it's kind of how cloudflare and all those proxy services work so you know if you're a big server and you've got the budget then you can<br>
<!-- -->you know rent a bunch of vps's, roundup and dns and put proxies on all of them, and then that kind of takes the load and then your actual real server you can just hide the ip address a bit and no one can ddos it directly</p>
<p><strong>iAmir:</strong><br>
<!-- -->the results of our discussion is if they are actually targeting the server itself not the openmp server for example like the machine itself, if they are targeting that with<br>
<!-- -->a stressor or some kind of exploits, stuff like that, you cannot actually do anything about it. we can fix our job but we can't fix details because that's just how the internet works. if those are exploits or stressor or some kind of ddos tools, stuff like that, if they are<br>
<!-- -->actually targeting openmp server we can find the issue and fix it as soon as possible that<br>
<!-- -->we figure it out, but about the server itself, the machine, there's actually no way we can handle that because there's nothing for us to fix, so that's actually other people's work buying ddos protection, having good servers, paying more</p>
<p><strong>JustMichael:</strong><br>
<!-- -->that comes with anyone running any kind of application in production, any kind of server, that's not a specific issue to us</p>
<p><strong>iAmir:</strong><br>
<!-- -->yeah even just a simple website, people can target a website for that to take down the servers</p>
<p><strong>Southclaws:</strong><br>
<!-- -->they can target your home router</p>
<p><strong>Y_Less:</strong><br>
<!-- -->you just can't stop ddos in software, it's just not possible, they keep saying how can we stop ddos, buy ddos protection, that's it.</p>
<p><strong>Hual:</strong><br>
<!-- -->basically we can stop it if it's abusing an openmp exploit, otherwise nothing we can do.</p>
<p><strong>JustMichael:</strong><br>
<!-- -->it would also be good if we had the community report these to make sure they actually report these issues immediately when they find them because that would just help us<br>
<!-- -->to fix them if something's gonna be on</p>
<p><strong>iAmir:</strong><br>
<!-- -->yeah one of the biggest issues that we had in samp was people couldn't report bugs, there was like some thread or discussions stuff like that and people were reporting bugs or adding suggestions and those messages were get lost in a day.</p>
<p><strong>JustMichael:</strong><br>
<!-- -->i remember there was a bug thread that got deleted like three hours after it was created when it had i think it was like 27 or 30 different replies in it, but all bugs, and it was just gone</p>
<p><strong>Southclaws:</strong><br>
<!-- -->i found a bug where you could read logs from remotely and no one cared about it and i got no reply</p>
<p><strong>Potassium:</strong><br>
<!-- -->i don't understand this question but Southclaws: sent it to me so it says: samp doesn't support ip failover/alias - will openmp support it?</p>
<p><strong>Southclaws:</strong><br>
<!-- -->the reason the reason samp doesn't support that is because it uses the actual port and the address to encrypt its packets, but you can just not do that when the client is out. while we've got to use the samp server we'll be kind of bound to the weird encryption that exists, but after that we can do like a regular udp proxy type thing. and yeah you can do failover<br>
<!-- -->for dns as well.</p>
<p><strong>iAmir:</strong><br>
<!-- -->uh there's also another question that i have in my list that people ask in chat, someone's asked more like a suggestion, can we consider giving servers the ability to add their favicon that is shown on the client next to the server title for example in launcher. we could we can actually do that right now with having even some client or some launcher i mean<br>
<!-- -->yeah with a custom launcher we can actually add a custom rule to the query so we read that in our own launcher</p>
<p><strong>Southclaws:</strong><br>
<!-- -->there's servers.net which i wrote three years ago or two years ago or something, i can't remember, i think that actually had the support for a field called "banner" which was meant to be an image that would like be like a graphic you could put in the background of your server page or the server list or something</p>
<p><strong>JustMichael:</strong><br>
<!-- -->there is also the fact that now that we've got the indexer you've added login support for users so they could easily even without it being on the server they could technically just log into that and put it on the index and then yeah all the launchers could just go off the indexer</p>
<p><strong>Southclaws:</strong><br>
<!-- -->the the plan with the indexer is to basically launch a server and you log into the indexer and the indexer will give you a token like an api token and you put that token into your server config file and now the indexer has verified that you own that server, so then on the indexer's web interface you can go and edit the description, the icon, the image, whatever whatever we end up adding, gifs, i don't know. then you don't have to modify a config file that is on a vps, log in and upload ssh, whatever, you just go to a website and you can just edit it with your browser and it's a lot simpler.</p>
<p><strong>Potassium:</strong><br>
<!-- -->alright before we end for today, people keep asking us to show videos of the progress. so<br>
<!-- -->we don't have that, we don't have videos because there's not really anything to show at<br>
<!-- -->the moment, right?</p>
<p><strong>JustMichael:</strong><br>
<!-- -->we have been live streaming recently and showing openmp progress</p>
<p><strong>iAmir:</strong><br>
<!-- -->there's actually nothing to show on a stream or as a video because it's just a simple server application which is like a console</p>
<p><strong>Hual:</strong><br>
<!-- -->development is occasionally streamed on discord</p>
<p><strong>Potassium:</strong><br>
<!-- -->so if you guys join our discord server Southclaws: and other people do often stream their development and stuff, their progress, in discord, so you just kind of join the discord channel and you watch the stream and you can just join the talk as well and chat and ask questions. we are quite open with it and do a lot of public stuff that you guys can join.</p>
<p><strong>JustMichael:</strong><br>
<!-- -->someone just asked about custom ui servers using htmlcs and js. and we have<br>
<!-- -->talked about this a lot and CEF will not be part of it.<br>
<!-- -->um google adsense um sources of<br>
<!-- -->nonsense on your screen yeah also good<br>
<!-- -->looking<br>
<!-- -->so you have to work on xp oh yeah yeah<br>
<!-- -->yeah also cef isn't small<br>
<!-- -->yeah keyboard yeah<br>
<!-- -->there's gonna be a problem with people<br>
<!-- -->who have low end computers<br>
<!-- -->people who have like weak computers to<br>
<!-- -->play<br>
<!-- -->that game so if you want to<br>
<!-- -->know you can just play mta<br>
<!-- -->it's fine like we want judge<br>
<!-- -->i mean eventually i guess we're gonna<br>
<!-- -->have um client-side<br>
<!-- -->c api too right so if we actually add<br>
<!-- -->that<br>
<!-- -->and having that yeah josh i mean<br>
<!-- -->we haven't talked about it yes but<br>
<!-- -->actually having that is actually a good<br>
<!-- -->idea because<br>
<!-- -->uh people can add voice chat by<br>
<!-- -->themselves by interacting<br>
<!-- -->our own api and um<br>
<!-- -->for cef stuff like that they can edit<br>
<!-- -->themselves<br>
<!-- -->if we add c api<br>
<!-- -->so yeah it's probably uh possible<br>
<!-- -->for later users<br>
<!-- -->well we probably won't ever have cef<br>
<!-- -->yeah we're not going to have that built<br>
<!-- -->in not officially<br>
<!-- -->someone else could edit it unofficially<br>
<!-- -->yeah<br>
<!-- -->yeah but i'm not sure we will accept it<br>
<!-- -->in the<br>
<!-- -->registry of official plugins also so<br>
<!-- -->i don't know yeah there are things<br>
<!-- -->someone asked if we have a official map and model editor
uh yeah we have a mirror working a model<br>
<!-- -->viewer<br>
<!-- -->uh not sure<br>
<!-- -->yeah cool<br>
<!-- -->all right uh and we've not really<br>
<!-- -->discussed it so<br>
<!-- -->we could say oh we would like one which<br>
<!-- -->is true but there's no plans to make one<br>
<!-- -->because there are ones already and they<br>
<!-- -->work and they're fine and everyone<br>
<!-- -->knows them</p>
<p><strong>Potassium:</strong><br>
<!-- -->I think we will end it there because i think we answered a lot of questions, but you know if you have more questions please go to our forum or our discord and ask there, because we do want to answer them.</p>
<p><strong>Y_Less:</strong><br>
<!-- -->some people are concerned about not being not native speakers and not understanding what we've talked about so we'll try and write it up</p>
<p><strong>Potassium:</strong><br>
<!-- -->yeah i'll try and get a transcript up and then our awesome contacts in other communities can translate for us, that would be great</p>
<p><strong>BigETI:</strong><br>
<!-- -->i mean if you upload it on youtube that should be fairly easy</p>
<p><strong>Potassium:</strong><br>
<!-- -->yeah that's the plan, we're gonna put this on youtube, and i'm gonna try to put it on some<br>
<!-- -->kind of podcast platform too so people can listen to it</p>
<p><strong>Southclaws:</strong><br>
<!-- -->i'm sure youtube will generate some very hilarious captions as well</p>
<p><strong>Potassium:</strong><br>
<!-- -->so like we said we do intend to stream regularly from now on, not just q&amp;a sessions but we<br>
<!-- -->would like to stream development progress, i think we talked about doing some community games like stuff like among us and other games that we could all play together, so make sure you follow this channel, join our discord, subscribe on youtube, follow our twitter,<br>
<!-- -->facebook, instagram, sign up to our forum, all that good stuff, everything is linked</p>
<p><strong>iAmir:</strong><br>
<!-- -->you forgot vk</p>
<p><strong>Potassium:</strong><br>
<!-- -->yes vk</p>
<p><strong>Southclaws:</strong><br>
<!-- -->there's a reddit as well</p>
<p><strong>Potassium:</strong><br>
<!-- -->everything should be linked below, otherwise we do have a linktree, it's linktr.ee/openmultiplayer i believe, everything is linked on that, but yeah i guess thank you guys for your time, thank you to all the viewers for watching, or listening rather, the link tree link is in the twitch chat right now, uh one more question quickly, are there plans to open a patreon for people wanting to support the project?</p>
<p><strong>everyone:</strong><br>
<!-- -->we haven't really discussed anything like that<br>
<!-- -->donations are always good but we don't really need them right now<br>
<!-- -->yeah at the moment we don't need them<br>
<!-- -->i think yeah i mean stuff like the server costs and whatever it would be nice<br>
<!-- -->they're fairly cheap<br>
<!-- -->the indexer probably costs like five dollars a month it's like nothing<br>
<!-- -->yeah yeah and the websites are all hosted for free<br>
<!-- -->yeah maybe maybe in the future we'll open up some kind of way that you guys can<br>
<!-- -->support the project if you want to, but you know we're not we're not doing it to make money so that's something we'll discuss<br>
<!-- -->also it's kind of like you're committing even more and i don't think we can just do that<br>
<!-- -->because we all work for a living</p>
<p><strong>Potassium:</strong><br>
<!-- -->alright well thank you guys so much for being here and for answering all these questions,<br>
<!-- -->and thank you twitch chat for being here and for following and everything, we'll see you on discord</p>
<p><strong>everyone:</strong><br>
<!-- -->thank you for hosting us</p>
<p><strong>Potassium:</strong><br>
<!-- -->you're welcome, see you guys!</p>]]></content>
        <author>
            <name>Potassium</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[open.mp API design]]></title>
        <id>https://open.mp/zh-CN/blog/scripting-api</id>
        <link href="https://open.mp/zh-CN/blog/scripting-api"/>
        <updated>2020-04-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A key focus of open.mp is maintaining backward compatibility—your existing SA:MP scripts will continue to work as-is. However, open.mp also introduces improvements to fix inconsistencies and make scripting more intuitive and powerful.]]></summary>
        <content type="html"><![CDATA[<p>A key focus of open.mp is maintaining <strong>backward compatibility</strong>—your existing SA<!-- -->:MP<!-- --> scripts will continue to work as-is. However, open.mp also introduces improvements to fix inconsistencies and make scripting more intuitive and powerful.</p>
<p>Here's a look at some common SA<!-- -->:MP<!-- --> issues we're addressing and how open.mp enhances the experience.</p>
<div class="theme-admonition theme-admonition-warning admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>注意</div><div class="admonitionContent_BuS1"><p>The content of the following post is out of date and has no reference to the current state of open.mp. The post is published here for archival purposes.</p></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="https://open.mp/zh-CN/blog/scripting-api#introduction" class="hash-link" aria-label="Introduction的直接链接" title="Introduction的直接链接">​</a></h2>
<p>Firstly, a VERY important clarification - existing scripts will still work as-is. We have worked very hard on backwards compatibility and bear it in mind for every decision. There are many improvements we'd like to make that we simply can't for this reason, and other code that is greatly complicated by this compatibility requirement.</p>
<p>That said, there are improvements that can be made all over the place. Let's look at some examples of the inconsistencies in SA<!-- -->:MP<!-- --> scripting:</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="tags">Tags<a href="https://open.mp/zh-CN/blog/scripting-api#tags" class="hash-link" aria-label="Tags的直接链接" title="Tags的直接链接">​</a></h3>
<ul>
<li><code>Menu:CreateMenu</code> - Tagged.</li>
<li><code>DB:db_open</code> - Tagged.</li>
<li><code>CreateVehicle</code> - Untagged.</li>
<li><code>CreateActor</code> - Untagged.</li>
</ul>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">define</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property macro-name" style="color:#36acaa">SELECT_OBJECT_GLOBAL_OBJECT</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property expression number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">define</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property macro-name" style="color:#36acaa">SELECT_OBJECT_PLAYER_OBJECT</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property expression number" style="color:#36acaa">2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">forward </span><span class="token function" style="color:#d73a49">OnPlayerSelectObject</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> type</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> objectid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> modelid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Float</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">fX</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Float</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">fY</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Float</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">fZ</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p><code>type</code> is untagged, as are ALL SA<!-- -->:MP<!-- --> defined constants; unlike pawn default constants:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">native File</span><span class="token operator" style="color:#393A34">:</span><span class="token function" style="color:#d73a49">fopen</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filemode</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">mode </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> io_readwrite</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="naming">Naming<a href="https://open.mp/zh-CN/blog/scripting-api#naming" class="hash-link" aria-label="Naming的直接链接" title="Naming的直接链接">​</a></h3>
<ul>
<li><code>SetVehiclePos</code> - "Vehicle" in the middle of the function name.</li>
<li><code>TextDrawTextSize</code> - "TextDraw" at the start.</li>
<li><code>db_open</code> - "db" at the start and lower-case.</li>
<li><code>fread</code> - "file" at the start, and shortened.</li>
<li><code>asin</code> - A SA<!-- -->:MP<!-- --> added function without camel/pascal case.</li>
</ul>
<p>Consistency:</p>
<ul>
<li>GetVehicleZAngle - "Z-Angle"</li>
<li>GetVehicleRotationQuat - "Rotation"</li>
<li>SetPlayerFacingAngle - "Facing Angle"</li>
<li>SetObjectRot - "Rot"</li>
</ul>
<p>And despite all this, most libraries have now settled on the <code>Module_Method</code> naming convention.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="constants">Constants<a href="https://open.mp/zh-CN/blog/scripting-api#constants" class="hash-link" aria-label="Constants的直接链接" title="Constants的直接链接">​</a></h3>
<ul>
<li><code>65535</code></li>
</ul>
<p>Value for invalid players, actors, TDs and a few other things. It is also the value for invalid vehicles, but <code>0</code> is ALSO an invalid vehicle ID sometimes returned.</p>
<ul>
<li><code>0</code></li>
</ul>
<p>Value for invalid files, sometimes vehicles (as well as <code>65535</code>). Also the value for missing many things such as action states and weapons.</p>
<ul>
<li><code>255</code></li>
</ul>
<p>Value for invalid teams and menus.</p>
<ul>
<li><code>-1</code></li>
</ul>
<p>Value for invalid gang zones and weapon states.</p>
<p>Additionally many libraries use <code>0x80000000</code> and <code>-1</code> for invalid states because they are far less likely to eventually be a valid ID. 65535 is quite a large number, but a big server can easily have more objects than that.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="per-player-functions">Per-Player Functions<a href="https://open.mp/zh-CN/blog/scripting-api#per-player-functions" class="hash-link" aria-label="Per-Player Functions的直接链接" title="Per-Player Functions的直接链接">​</a></h3>
<ul>
<li><code>CreateObject</code> and <code>CreatePlayerObject</code></li>
</ul>
<p>Has global and per-player versions.</p>
<ul>
<li><code>SetPlayerMapIcon</code></li>
</ul>
<p>Has no global version.</p>
<ul>
<li><code>SetGravity</code></li>
</ul>
<p>No per-player version, despite being possibly one of the most requested per-player functions, and added almost instantly by YSF and other plugins.</p>
<ul>
<li><code>CreateVehicle</code></li>
</ul>
<p>No per-player version, despite also being repeatedly requested. But also not added by any (public) plugin, not even the streamer plugin.</p>
<ul>
<li><code>SendClientMessage</code> and <code>SendClientMessageToAll</code></li>
</ul>
<p>Has global and per-player versions, but the per-player version is the default unlike most other functions.</p>
<ul>
<li><code>GangZoneShowForPlayer</code> and <code>GangZoneShowForAll</code></li>
</ul>
<p>Menus, Gang Zones, and Text Draws are the only default SA<!-- -->:MP<!-- --> functions where you can specify exactly which players can see them. All others are either everyone or just one person. Of course, libraries and plugins have since vasly expanded on this model and most good ones now allow very fine-grained control over which subsets of players (groups) can use any given entity.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ids">IDs<a href="https://open.mp/zh-CN/blog/scripting-api#ids" class="hash-link" aria-label="IDs的直接链接" title="IDs的直接链接">​</a></h3>
<ul>
<li><code>CreateObject</code> and <code>CreatePlayerObject</code></li>
</ul>
<p>The IDs pool for these functions are shared. If a global object has ID <code>4</code> no player object can ever have ID <code>4</code>, but multiple players could have different objects all with ID <code>5</code>.</p>
<ul>
<li><code>Create3DTextLabel</code> and <code>CreatePlayer3DTextLabel</code></li>
</ul>
<p>The ID pool is split - the first <code>1024</code> IDs are globals, the second <code>1024</code> are per-player. Each player can have up to <code>2048</code> 3D texts, but only <code>1024</code> of each type despite the fact that it makes no difference client-side.</p>
<ul>
<li><code>SetPlayerMapIcon</code></li>
</ul>
<p>IDs are manually specified, up to a limit of 32. For a while this limit was not checked client- side, leading to a potential ACE exploit.</p>
<ul>
<li><code>ShowPlayerDialog</code></li>
</ul>
<p>IDs are manually specified, with no limit at all. The IDs are also totally pointless since a player can only ever see one dialog at once.</p>
<ul>
<li><code>SetTimer</code></li>
</ul>
<p>IDs wrap around, with no checking that an existing timer has the same ID. You would have to start over 4,000,000,000 timers at some point to encounter this issue, but it could happen - they don't even have to all remain running.</p>
<p>And of course some people rely on IDs being allocated in very specific orders, then wonder why their whole mode breaks when they for example add or remove a single vehicle.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="compatibility">Compatibility<a href="https://open.mp/zh-CN/blog/scripting-api#compatibility" class="hash-link" aria-label="Compatibility的直接链接" title="Compatibility的直接链接">​</a></h2>
<p>So, again, we must make it very clear that all existing <em>"SA<!-- -->:MP<!-- --> code"</em> will work. What does that mean exactly? Any code that is:</p>
<ul>
<li>Written in pawn.</li>
<li>Uses the original SA<!-- -->:MP<!-- --> API without plugins.</li>
<li>Is recompiled with our includes.</li>
<li>Already uses the community compiler.</li>
</ul>
<p>Will work.</p>
<p>However:</p>
<ul>
<li>If you use a plugin to write in a language other than pawn, that plugin will probably need to be ported first. So your code won't work immediately.</li>
<li>If you use other plugins such as the streamer, YSF, audio, etc; they may already work, may need porting, or may be entirely superfluous because their functionality has been integrated in to the core server. So your code may work.</li>
<li>If you only have the .AMX of your mode not the original source, why? Anyway, while all SA<!-- -->:MP<!-- --> functions exist, some have been redone or replaced by pawn code or macros and you MUST recompile. So if you can't, your code won't work at all.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="building">Building<a href="https://open.mp/zh-CN/blog/scripting-api#building" class="hash-link" aria-label="Building的直接链接" title="Building的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="example">Example<a href="https://open.mp/zh-CN/blog/scripting-api#example" class="hash-link" aria-label="Example的直接链接" title="Example的直接链接">​</a></h3>
<p>Let's look at an insanely simple SA<!-- -->:MP<!-- --> mode to begin with.</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">&lt;a_samp&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public </span><span class="token function" style="color:#d73a49">OnGameModeInit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">SetGameModeText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Example Script"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">AddPlayerClass</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4.0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public </span><span class="token function" style="color:#d73a49">OnPlayerSpawn</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">SetPlayerCheckpoint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">20.0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">20.0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4.0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2.0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public </span><span class="token function" style="color:#d73a49">OnPlayerEnterCheckpoint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">SendClientMessage</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0xFF0000AA</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"You won!"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>You spawn. You go to the checkpoint. You win.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="conversion">Conversion<a href="https://open.mp/zh-CN/blog/scripting-api#conversion" class="hash-link" aria-label="Conversion的直接链接" title="Conversion的直接链接">​</a></h3>
<p>To build this for open.mp, we need to change just the first include and add one define.</p>
<p>This:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">&lt;a_samp&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>Becomes:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">define</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property macro-name" style="color:#36acaa">OPENMP_COMPAT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">&lt;openmp\openmp&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>The first error you might get is:</p>
<p><code>open.mp scripts require the community compiler from: git.io/pawn-compiler</code></p>
<p>If you get this, go to <a href="https://git.io/pawn-compiler" target="_blank" rel="noopener noreferrer">https://git.io/pawn-compiler</a> and download compiler version 3.10.10 or later. For the release we would like a pawno-equivalent tool with this compiler integrated already, but haven't done that yet. I STRONGLY suggest trying to compile your mode with this compiler first as it re-enabled const correctness warnings so you're likely to have a load of new warnings straight away (this is NOT a problem with the compiler, these are problems in your code that always existed, but were previously ignored). You will also probably want to replace your includes with these ones:</p>
<p><a href="https://github.com/pawn-lang/pawn-stdlib" target="_blank" rel="noopener noreferrer">https://github.com/pawn-lang/pawn-stdlib</a><br>
<a href="https://github.com/pawn-lang/samp-stdlib" target="_blank" rel="noopener noreferrer">https://github.com/pawn-lang/samp-stdlib</a></p>
<p>That's a good thing to do even if you don't use open.mp, as they fix a load of tag and const issues in the original includes.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="warnings">Warnings<a href="https://open.mp/zh-CN/blog/scripting-api#warnings" class="hash-link" aria-label="Warnings的直接链接" title="Warnings的直接链接">​</a></h3>
<p>If you don't get any warnings using the new compiler with the new version of <code>a_samp</code>, you will now see a load of new warnings along the lines of:</p>
<p><code>warning 234: function is deprecated (symbol "AddPlayerClass") Use "Class_Add" instead.</code></p>
<p>You have three options - and they're all supported:</p>
<ul>
<li><strong>Ignore the warnings:</strong> The code will still work.</li>
<li><strong>Suppress the warnings:</strong> Change <code>OPENMP_COMPAT</code> to <code>OPENMP_QUIET</code>:</li>
</ul>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">define</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property macro-name" style="color:#36acaa">OPENMP_QUIET</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">&lt;openmp\openmp&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<ul>
<li><strong>Fix the warnings:</strong> Some functions have changed names for consistency with each other; some functions have changed parameters because the old ones evolved and didn't fully expose the capabilities of open.mp. There's no simple way to convert every function yet, but you can leave the warnings on while slowly converting code - the old functions will continue to work perfectly well.</li>
</ul>
<p>There are three stages to conversion:</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="define-openmp_quiet"><code>#define OPENMP_QUIET</code><a href="https://open.mp/zh-CN/blog/scripting-api#define-openmp_quiet" class="hash-link" aria-label="define-openmp_quiet的直接链接" title="define-openmp_quiet的直接链接">​</a></h3>
<p>Using this define allows your mode to compile with no new warnings from deprecated functions. But you shouldn't stick to this define, and the implicit conversions will only work for pawn code. You can convert code in this mode, as the new API will also work, but you can't use the compiler to see where problems remain.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="define-openmp_compat"><code>#define OPENMP_COMPAT</code><a href="https://open.mp/zh-CN/blog/scripting-api#define-openmp_compat" class="hash-link" aria-label="define-openmp_compat的直接链接" title="define-openmp_compat的直接链接">​</a></h3>
<p>This is the second stage. Once you want to start taking advantage of all the improved features of open.mp like fine-grained per-player entity controls and removed limits you need to start using the new versions of the functions. The new functions are always available, but you might not know everywhere that needs converting. This will give warnings for the old functions, but they will still work, allowing you to convert parts of your mode one at a time.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="no-define">No define<a href="https://open.mp/zh-CN/blog/scripting-api#no-define" class="hash-link" aria-label="No define的直接链接" title="No define的直接链接">​</a></h3>
<p>Once you think you've finished converting your code, you remove the defines:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">&lt;openmp\openmp&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>Now you get errors instead of warnings for any old code still in use.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="new-api">New API<a href="https://open.mp/zh-CN/blog/scripting-api#new-api" class="hash-link" aria-label="New API的直接链接" title="New API的直接链接">​</a></h2>
<p>So now we've seen what the problems were with the old API, and how to find where you need to apply the new API, we should actually look at said new API in terms of the previously identified issues:</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="tags-1">Tags<a href="https://open.mp/zh-CN/blog/scripting-api#tags-1" class="hash-link" aria-label="Tags的直接链接" title="Tags的直接链接">​</a></h3>
<p>Functions now use tags almost everywhere. We have tried to find a balance between too many tag warnings and not enough useful information, but warnings are there for a reason and can help find problems you may have missed. For example passing a vehicle as a parameter to an object function, or giving someone a weapon that doesn't exist:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// No warnings for this code, despite it being clearly wrong.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">new object </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">CreateObject</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">various</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> parameters</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> here</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">PutPlayerInVehicle</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> object</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Same here - there's no weapon 20, despite it being amongst valid weapon IDs.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">GivePlayerWeapon</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">20</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">200</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p>It would be much better if all pieces of clearly wrong code could give warnings. This is the power of a type-safe language, and while pawn isn't fully type-safe, we can get close with tags. Those examples become:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// warning 213: tag mismatch: expected tag "Vehicle", but found "Object"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">new Object</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">object </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Object@</span><span class="token function" style="color:#d73a49">Create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">various</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> parameters</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> here</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">Player_PutInVehicle</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> object</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// warning 213: tag mismatch: expected tag "WeaponType", but found but found none ("_")</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">GivePlayerWeapon</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">20</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">200</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// This doesn't give a warning:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">GivePlayerWeapon</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> WEAPON_COLT45</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">200</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="naming-1">Naming<a href="https://open.mp/zh-CN/blog/scripting-api#naming-1" class="hash-link" aria-label="Naming的直接链接" title="Naming的直接链接">​</a></h3>
<p>Most new functions use a refinement of the naming scheme already adopted by many libraries and plugins - <code>Module_VerbNoun</code>. Some don't, when they are a one-off that doesn't fit in to any larger module, but for the most part you can possibly guess the name of a function you need. No more wondering if it was "Rot" or "Rotation" for this type of element, there's no abbreviations unless the function name is otherwise too long (32+ characters, the compiler won't accept them). Want to change the model of an object? <code>Object_SetModel</code>. Want to show text to a player? <code>Text_Show</code>.</p>
<p>There are a limited set of verbs - <code>Get</code>, <code>Set</code>, <code>Create</code>, <code>Destroy</code>, <code>Add</code>, <code>Remove</code>, <code>Show</code>, <code>Hide</code>, <code>Run</code>, <code>Move</code>, <code>Stop</code>, and <code>Count</code>. More may be added and may show up in special situations, but generally if one of these fits, it's probably that one. By far the most common are <code>Get</code> and <code>Set</code>, which unlike in SA<!-- -->:MP<!-- --> now always come in pairs - if you can set any parameter you can get it as well later. They are also the verbs that most commonly come with a noun - you need to specify what to get or set - <code>Health</code>, <code>Position</code>, <code>Model</code>, <code>Width</code>, etc.</p>
<p>Some examples:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">native bool</span><span class="token operator" style="color:#393A34">:</span><span class="token function" style="color:#d73a49">Menu_SetDisabled</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Menu</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">menuid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> bool</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">disabled</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">native bool</span><span class="token operator" style="color:#393A34">:</span><span class="token function" style="color:#d73a49">Menu_GetDisabled</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Menu</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">menuid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">native bool</span><span class="token operator" style="color:#393A34">:</span><span class="token function" style="color:#d73a49">Text_SetAlignment</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Text</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">text</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> alignment</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">native </span><span class="token function" style="color:#d73a49">Text_GetAlignment</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Text</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">text</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">native bool</span><span class="token operator" style="color:#393A34">:</span><span class="token function" style="color:#d73a49">Object_Move</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Object</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">objectid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Float</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">posX</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Float</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">posY</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Float</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">posZ</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Float</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">speed</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Float</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">rotX </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> FLOAT_NAN</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Float</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">rotY </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> FLOAT_NAN</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Float</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">rotZ </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> FLOAT_NAN</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">native </span><span class="token function" style="color:#d73a49">DBResult_CountRows</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">DBResult</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">dbresult</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">native </span><span class="token function" style="color:#d73a49">Player_Spawn</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Player</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p>Note that the module and tag names always match - <code>Vehicle</code>, <code>DB</code>, <code>Player</code> etc. <a href="https://github.com/pawn-lang/compiler/issues/234" target="_blank" rel="noopener noreferrer">There are reasons besides consistency for this</a> - it gives a more OO -like interface, and is easier to remember. However, you might have noticed in an earlier example the function <code>Object@Create</code>, not <code>Object_Create</code>. The reason for this is what is in the first parameter.</p>
<p>In all seven of the examples immediately above the first parameter is the entity (object, vehicle, player, etc) being operated on. You want to get the position of a specific entity. You want to move a specific entity. You want to get the remaining time of a specific entity. This again maps to the OO-like API - <code>Player_Spawn(playerid)</code> can be thought of as <code>player.Spawn()</code>. PAWN can't do that, but that doesn't mean other languages plugging in to this API can't. In C++ terms - <code>_</code> is <code>.</code> or <code>-&gt;</code> and always needs a valid ID given as the first parameter. However, the function <code>Dialog_IsValid(Dialog:id)</code> by definition may not have a valid ID as the first parameter (or what's the point of it<sup><a href="https://open.mp/zh-CN/blog/scripting-api#user-content-fn-1-1f30c3" id="user-content-fnref-1-1f30c3" data-footnote-ref="true" aria-describedby="footnote-label">1</a></sup>?), and <code>Icon_Create(image, Float:x, Float:y, Float:z)</code> doesn't even take an ID at all. These thus become <code>@</code> instead - <code>::</code> in C++ syntax. They might not take an ID at all, and absolutely don't need a valid one (@Destroy` also comes under this group of functions, as destroying an entity is an operation logically external to an entity, not an operation on the entity).</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="constants-1">Constants<a href="https://open.mp/zh-CN/blog/scripting-api#constants-1" class="hash-link" aria-label="Constants的直接链接" title="Constants的直接链接">​</a></h3>
<p>To start with, instead of <code>#define</code> for everything we use <code>const</code> and <code>enum</code> as much as possible, except where we expect things to be overridden (<code>MAX_PLAYERS</code>):</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">enum</span><span class="token plain"> </span><span class="token class-name">ObjectMaterialTextAlignment</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    MATERIAL_TEXT_ALIGN_LEFT</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    MATERIAL_TEXT_ALIGN_CENTRE</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    MATERIAL_TEXT_ALIGN_RIGHT</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p><code>Object_SetMaterialText</code> will now only accept one of those three values, and nothing else.</p>
<p>What about invalid IDs? We have made those consistent as well. All entities now use the same invalid value, well outside the range of possibly valid values - open.mp has removed almost all limits, so making a value like <code>65536</code> invalid just won't work. What is this new invalid value? We haven't decided... There are two main contenders both with pros and cons, and the decision isn't as easy as it might at first appear. But fortunately it doesn't make a big difference to the internal work as we can switch almost instantly.</p>
<p>The two choices are explained below, and we'd appreciate some feedback on this if possible:</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="0"><code>0</code><a href="https://open.mp/zh-CN/blog/scripting-api#0" class="hash-link" aria-label="0的直接链接" title="0的直接链接">​</a></h4>
<p>Using <code>0</code> as an invalid value has a few advantages:</p>
<ul>
<li>it isn't an invalid index, so when returned and not correctly checked your code won't crash. It might not work perfectly, but it will keep doing something at least.</li>
<li>It is very easy to check, and intent becomes obvious with it:</li>
</ul>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">new Object</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">object </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Object@</span><span class="token function" style="color:#d73a49">Create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">various</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> parameters</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> here</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">object</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">Object_SetMaterialText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">object</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Hello"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Couldn't create the object."</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<ul>
<li>A newly declared variable is by default an invalid value:</li>
</ul>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">new Dialog</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">d</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p>One of the most common bugs people get is their code only working for player 0, because they forgot to intialise a variable. If there's no player/object/vehicle 0, the code won't apply to anyone - it is better to have no player promoted to admin than the wrong player.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="-1"><code>-1</code><a href="https://open.mp/zh-CN/blog/scripting-api#-1" class="hash-link" aria-label="-1的直接链接" title="-1的直接链接">​</a></h4>
<p>Using <code>-1</code> as an invalid value has a few advantages:</p>
<ul>
<li>It IS an invalid index. Not being one was listed as an advantage for <code>0</code> because your code will often keep going instead of crashing, but with crashdetect that can be a good thing - there's a bug in your code and the crash will tell you exactly where it is, sometimes to the exact source code line. Which is better, silently continuing, or ending loudly?</li>
<li>People are used to <code>0</code> as a valid value most of the time. Programmers start counting at <code>0</code>, so it should be valid and something outside the realm of positive integers should be invalid.</li>
<li>In unsigned maths it is the largest possible integer - <code>0xFFFFFFFF</code>, <code>4294967295</code>. This means the internal hard limit for any entity type is the highest it can possibly be - <code>4,294,967,295</code> items before running out of IDs (and memory).</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="per-player-functions-1">Per-Player Functions<a href="https://open.mp/zh-CN/blog/scripting-api#per-player-functions-1" class="hash-link" aria-label="Per-Player Functions的直接链接" title="Per-Player Functions的直接链接">​</a></h3>
<p>In short, these are no more. Every <code>ForPlayer</code>, <code>ForAll</code>, <code>CreatePlayerX</code> etc. function has been replaced by one simple function - <code>X_Display</code> (where <code>X</code> is any entity), and <code>X_Has</code> for checking:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">Object_Display</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">objectid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> playerid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> true</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Show it.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">Object_Display</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">objectid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> playerid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> false</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Hide it.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">Text_Display</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">textid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> true</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Show it to everyone.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">Zone_Has</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">zoneid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> playerid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// The player is ALLOWED to see the gang zone.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>YSI used <code>X_SetPlayer</code>, but showing things to players is the most fundamental thing to do, so it deserves its own verb. Some libraries use <code>X_Show</code> and <code>X_Hide</code>, but that's two functions which just leads to excess code when checking which to do:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">var</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Checkpoint_Show</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cpid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> playerid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Checkpoint_Hide</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cpid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> playerid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p>vs</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">Checkpoint_Display</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cpid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> playerid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> var</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p>Note that just calling <code>X_Display</code> might not actually show the item. An object on the far side of the world still won't be visible. A checkpoint in a different virtual world won't be visible even if it is right next to you. For world entities this just says that the player is allowed to see it, not that they are currently able to. Conversely, for HUD elements such as menus and dialogs this does show them instantly, and may hide others when only one is allowed.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ids-1">IDs<a href="https://open.mp/zh-CN/blog/scripting-api#ids-1" class="hash-link" aria-label="IDs的直接链接" title="IDs的直接链接">​</a></h3>
<p>With the removal of per-player pools, and unification of invalid IDs, this is no longer an issue.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="smarter-functions">Smarter functions.<a href="https://open.mp/zh-CN/blog/scripting-api#smarter-functions" class="hash-link" aria-label="Smarter functions.的直接链接" title="Smarter functions.的直接链接">​</a></h2>
<p>The <code>X_Display</code> functions shown above can take two parameters - entity and display state, to enable every player to see them; or alternatively three parameters - entity, player, and display state. There are other functions that are smart about their parameters as well. One set of examples is the various rotation functions. As mentioned in the introduction, there are at least four different ways to get and set rotations on for different entities. Now there's one - <code>X_SetRotation</code> and <code>X_GetRotation</code>. For example:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// Just get `z`.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">z </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Player_GetRotation</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Get x, y, and z Euler angles.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">Object_GetRotation</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">objectid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> x</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> y</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> z</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Get w, x, y, and z quaternion angles.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">Vehicle_GetRotation</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">vehicleid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> w</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> x</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> y</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> z</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p>Which is used for which entity? All of them:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// Just get `z`.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">z </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Object_GetRotation</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">objectid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Get x, y, and z Euler angles.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">Object_GetRotation</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">objectid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> x</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> y</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> z</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Get w, x, y, and z quaternion angles.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">Object_GetRotation</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">objectid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> w</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> x</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> y</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> z</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p>The parameter and return meanings are determined by the number of parameters given. Also for Set:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// Just set `z`.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">Vehicle_SetRotation</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">vehicleid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> z</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Set x, y, and z Euler angles.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">Vehicle_SetRotation</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">vehicleid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> x</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> y</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> z</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Set w, x, y, and z quaternion angles.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">Vehicle_SetRotation</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">vehicleid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> w</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> x</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> y</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> z</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://open.mp/zh-CN/blog/scripting-api#conclusion" class="hash-link" aria-label="Conclusion的直接链接" title="Conclusion的直接链接">​</a></h2>
<p>We have tried very hard to make an API that's easy to use, easy to learn, but also backwards- compatibile. A lot of the success of SA<!-- -->:MP<!-- --> comes from it's ease of use, and we want to keep that, but are also aware that there are power users as well who want to get far more out of their code. Striking this balance is always hard, especially when the ones who comment the most are the most experienced - the ones who know the language inside and out and want to push it further. This creates a system that self-selects for advanced features at the expense of beginners. We don't want this, but we do still want to hear your thoughts. Which language and API features do you like, which do you not? What functions would help you get the most out of your code? Do you think the new design is simple, or too complicated? Are you fine with the haphazard names of the current functions? They serve their purpose, so why change them? Would you as a beginner have appreciated anything being done differently?</p>
<p>Please share any feedback you might have here in the burgershot topic below. We'd love to hear from you:</p>
<p><a href="https://forum.open.mp/showthread.php?tid=1036" target="_blank" rel="noopener noreferrer">https://forum.open.mp/showthread.php?tid=1036</a></p>
<!-- -->
<section data-footnotes="true" class="footnotes"><h2 class="anchor anchorWithStickyNavbar_LWe7 sr-only" id="footnote-label">Footnotes<a href="https://open.mp/zh-CN/blog/scripting-api#footnote-label" class="hash-link" aria-label="Footnotes的直接链接" title="Footnotes的直接链接">​</a></h2>
<ol>
<li id="user-content-fn-1-1f30c3">
<p>Interesting side note. Thanks to the way we've abstracted the scripting API code, Dialog_IsValid is implemented as:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">SCRIPT_API</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Dialog_IsValid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">bool</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Dialog_s</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> true</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>That's literally it. No actual implementation needed because for the function to be called the entity lookup must have succeeded, and thus we can return true instantly. <a href="https://open.mp/zh-CN/blog/scripting-api#user-content-fnref-1-1f30c3" data-footnote-backref="" aria-label="Back to reference 1" class="data-footnote-backref">↩</a></p>
</li>
</ol>
</section>]]></content>
        <author>
            <name>Y_Less</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Testing in open.mp]]></title>
        <id>https://open.mp/zh-CN/blog/debugging</id>
        <link href="https://open.mp/zh-CN/blog/debugging"/>
        <updated>2020-04-06T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Testing in SA:MP has always been challenging, but open.mp introduces new tools to make it easier and more efficient. With an open-source codebase, enhanced debugging tools, and a powerful new "mock" library for simulating player interactions, testing is now more automated and reliable than ever.]]></summary>
        <content type="html"><![CDATA[<p>Testing in SA<!-- -->:MP<!-- --> has always been challenging, but open.mp introduces new tools to make it easier and more efficient. With an open-source codebase, enhanced debugging tools, and a powerful new "mock" library for simulating player interactions, testing is now more automated and reliable than ever.</p>
<div class="theme-admonition theme-admonition-warning admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>注意</div><div class="admonitionContent_BuS1"><p>The content of the following post is out of date and has no reference to the current state of open.mp. The post is published here for archival purposes.</p></div></div>
<p>Testing in SA<!-- -->:MP<!-- --> is not very easy. For the most part it is just connecting to the server and placing prints everywhere. Libraries such as y_testing make writing unit tests much easier, but only for fairly "pure" code - that is, code that runs on the server without much player interaction. You can test a surprising amount of behaviour like this, but it is still limited and doesn't help narrow down issues when they do crop up.</p>
<p>So how does open.mp address this? Well to begin with, the code is open-source, so you have the full range of existing debugging tools such as GDB and Visual Studio available to you for stepping through and inspecting code. We also have plans to add similar tools for pawn scripts themselves.</p>
<p>But the biggest addition is the "mock" library. Very simply, this allows you to create fake players that act exactly like real players, but without any connected client. So any actions performed on them by a script can be read and analysed by another script. Let's take the most simple example possible for a first demonstration - showing a player a checkpoint, and confirming it was sent. With y_testing you do the action and then have to actually ask the player if it happened, which is slow, not repeatable, and just tedious:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">PTEST__ </span><span class="token function" style="color:#d73a49">SetPlayerCheckpoint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">SetPlayerCheckpoint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4.0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5.0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ASK</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Do you see a checkpoint in the middle of the world?"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>Using a library like "Pawn.RakNet" can remove the question, by automating the checking of outgoing packets, but still requires a connected player so can't be automated and repeated:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">static</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    gCheckpointPlayer</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Float</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">gX</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Float</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">gY</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Float</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">gZ</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Float</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">gS</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PTEST__ </span><span class="token function" style="color:#d73a49">SetPlayerCheckpoint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">SetPlayerCheckpoint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4.0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5.0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ASSERT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">gX </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ASSERT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">gY </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ASSERT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">gZ </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4.0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ASSERT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">gS </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5.0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ASSERT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">gCheckpointPlayer </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> playerid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OPacket</span><span class="token operator" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">107</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> BitStream</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">bs</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    gCheckpointPlayer </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> playerid</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">BS_IgnoreBits</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">bs</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">8</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">BS_ReadFloat</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">bs</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> gX</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">BS_ReadFloat</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">bs</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> gY</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">BS_ReadFloat</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">bs</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> gZ</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">BS_ReadFloat</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">bs</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> gS</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>With open.mp, we have an API similar to that of Pawn.RakNet, but with fake players. So you create a player, without a game instance, and use that exactly like a normal player:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">TEST__ </span><span class="token function" style="color:#d73a49">SetPlayerCheckpoint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    new playerid </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Mock_CreatePlayer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Mr Mock"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Clear all existing packets, for ease of searching.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">Mock_PurgeSent</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Show a checkpoint normally.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">SetPlayerCheckpoint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4.0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5.0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Check a "SetCheckpoint" packet was seen.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    new MockPacket</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">packet </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Mock_GetPacket</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"SetCheckpoint"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ASSERT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">packet</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">packet</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Check the packet has 4 components, each 32 bits.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ASSERT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">MockPacket_Components</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">packet</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ASSERT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">MockPacket_Bits</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">packet</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">32</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Check the various components.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    new Float</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">tmp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ASSERT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">MockPacket_ReadFloat</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">packet</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tmp</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ASSERT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">tmp </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ASSERT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">MockPacket_ReadFloat</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">packet</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tmp</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ASSERT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">tmp </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ASSERT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">MockPacket_ReadFloat</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">packet</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tmp</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ASSERT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">tmp </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4.0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ASSERT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">MockPacket_ReadFloat</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">packet</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tmp</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ASSERT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">tmp </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5.0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>This code is entirely repeatably testable, self-contained (no global variables and extra callbacks), and simple to expand upon.</p>
<p>But sometimes it isn't quite this simple. If you create an object you can't just check that it was instantly sent to a player, because they might not be anywhere near it and thus the in-built streamer hasn't sent them it yet. To solve this, we first need to go on a slight tangent to explain how basic sync works for things like <code>SetPlayerPos</code>. When you set a player's position with <code>SetPlayerPos</code> the server does NOT update their position internally and for all other players straight away. Instead a <code>SET POSITION</code> command is sent to that one player being moved, they are teleported to the new position, and then report the new position back to the server in their next sync packet. The reason why is basically lag - there may be one or more sync packets still in flight with the old position after setting the new position. So what does this mean for mock players? It means you can't actually set their position, at least not in the normal way. There's no real client, so there's nothing receiving packets (i.e. the set position command), and there's nothing syncing that data back to the server again.</p>
<p>We can generate any mock sync data for the server from mock players, so that is one way to update their position, but it can be a little cumbersome for just one common operation, so there is <code>Mock_SetPlayerPos</code> for exactly this one use-case. But this still isn't quite the whole story, because we need the streamer to run and update with their new position, which happens only periodically (every few milliseconds, depending on the server tick rate). For this we have another mock function - <code>Mock_Tick</code>, which jumps the server time forward by a given number of microseconds (NOT milliseconds). This should absolutely not be used on live servers as it can create all sorts of weirdness with timers and other time sensitive code, but can be used to fake time passing in tests. Note that <code>Mock_Tick(10000)</code> will not delay for 10ms, it will instead jump time forward by 10 milliseconds instantly.</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">TEST__ </span><span class="token function" style="color:#d73a49">SetPlayerCheckpoint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    new playerid </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Mock_CreatePlayer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Mr Mock"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Clear all existing packets, for ease of searching.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">Mock_PurgeSent</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Create an object.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">CreateObject</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1337</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100.0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100.0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4.0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Fake the mock player's position updating to the server, near the object.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">Mock_SetPlayerPos</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">105.0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">105.0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4.0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Now FAKE pass some time, so the streamer can run (50ms should do).</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">Mock_Tick</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">50000</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Check a "CreateObject" packet was seen.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    new MockPacket</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">packet </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Mock_GetPacket</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">playerid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"CreateObject"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ASSERT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">packet</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">packet</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Check the packet has 4 components, each 32 bits.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ASSERT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">MockPacket_Components</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">packet</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Check some of the packet components.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    new </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    new Float</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">tmp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ASSERT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">MockPacket_ReadInt32</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">packet</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ASSERT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1337</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ASSERT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">MockPacket_ReadFloat</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">packet</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tmp</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ASSERT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">tmp </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100.0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ASSERT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">MockPacket_ReadFloat</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">packet</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tmp</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ASSERT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">tmp </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100.0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ASSERT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">MockPacket_ReadFloat</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">packet</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tmp</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ASSERT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">tmp </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4.0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>An important note about <code>Mock_Tick</code>. If you call it as, say <code>Mock_Tick(100000)</code> and have a 1ms timer running, this will instantly trigger the timer to run, but the timer will think it missed its time by a long way (100ms) and will queue itself up again. During the call to <code>Mock_Tick</code> the timer will fire once, but after the current test ends the timer will be queued up a further 99 times, one per tick because it thinks it missed 100 invocation times.</p>
<p>Later we'll cover some higher-level debugging techniques so you can read and write fake packets more easily, instead of one component at a time as in that code, but this introduces the basics on which everything else is built. Hopefully it will make developing and testing code easier for everyone (and ensure the server is more stable as well).</p>
<p>We'll also go much more in to the API design for open.mp tomorrow. It is fully backwards- compatible with SA<!-- -->:MP<!-- -->, but that doesn't mean there isn't parallel room for improvement.</p>]]></content>
        <author>
            <name>Y_Less</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vehicle Sync]]></title>
        <id>https://open.mp/zh-CN/blog/vehicle-sync</id>
        <link href="https://open.mp/zh-CN/blog/vehicle-sync"/>
        <updated>2019-11-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A quick post demonstrating the evolution of vehicle sync.]]></summary>
        <content type="html"><![CDATA[<p>A quick post demonstrating the evolution of vehicle sync.</p>
<video loop="" width="100%" controls=""><source src="/zh-CN/assets/medias/vehicle_sync_01-115525d42cb827b58443f71baedf9b42.mp4" type="video/mp4"></video>
<video loop="" width="100%" controls=""><source src="/zh-CN/assets/medias/vehicle_sync_02-fe8141022639554363f8904dd1756227.mp4" type="video/mp4"></video>
<video loop="" width="100%" controls=""><source src="/zh-CN/assets/medias/vehicle_sync_03-34a6a71412eb7a6c7c9413023445bb04.mp4" type="video/mp4"></video>]]></content>
        <author>
            <name>Southclaws</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Turfs (formerly gangzones) module]]></title>
        <id>https://open.mp/zh-CN/blog/turfs-formerly-gangzones-module</id>
        <link href="https://open.mp/zh-CN/blog/turfs-formerly-gangzones-module"/>
        <updated>2019-10-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Hello! I have just finished our Turf implementation into the server and I thought of posting a overview of this module and to show we haven't quit or anything!]]></summary>
        <content type="html"><![CDATA[<p>Hello! I have just finished our Turf implementation into the server and I thought of posting a overview of this module and to show we haven't quit or anything!</p>
<div class="theme-admonition theme-admonition-warning admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>注意</div><div class="admonitionContent_BuS1"><p>The content of the following post is out of date and has no reference to the current state of open.mp. The post is published here for archival purposes.</p></div></div>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// Creates a Turf. A playerid can be passed in order to make it a player turf.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">native Turf</span><span class="token operator" style="color:#393A34">:</span><span class="token function" style="color:#d73a49">Turf_Create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Float</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">minx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Float</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">miny</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Float</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">maxx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Float</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">maxy</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Player</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">owner </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> INVALID_PLAYER_ID</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Destroys a turf.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">native </span><span class="token function" style="color:#d73a49">Turf_Destroy</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Turf</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">turf</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Shows a Turf to a player or players.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Will send to all players if playerid = INVALID_PLAYER_ID.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">native </span><span class="token function" style="color:#d73a49">Turf_Show</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Turf</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">turf</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> colour</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Player</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">playerid </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> INVALID_PLAYER_ID</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Hides a Turf from a player or players.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Will send to all players if playerid = INVALID_PLAYER_ID.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">native </span><span class="token function" style="color:#d73a49">Turf_Hide</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Turf</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">turf</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Player</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">playerid </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> INVALID_PLAYER_ID</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Flashes a Turf for a player or players.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Will send to all players if  playerid = INVALID_PLAYER_ID.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">native </span><span class="token function" style="color:#d73a49">Turf_Flash</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Turf</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">turf</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> colour</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Player</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">playerid </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> INVALID_PLAYER_ID</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Stops a Turf from flashing for player(s).</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Will send to all players if playerid = INVALID_PLAYER_ID.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">native </span><span class="token function" style="color:#d73a49">Turf_StopFlashing</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Turf</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">turf</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Player</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">playerid </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> INVALID_PLAYER_ID</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p>This is obviously different from the traditional API, but not to worry, there will be wrappers in place for this kind of stuff to make sure a normal script can be recompiled with no issues and without edits.</p>
<p>Another important fact that you may want to know is that every turf is in the same pool and there's a maximum of 4,294,967,295 turfs to be created from the script. However, the client can only handle 1024 turfs at one time.</p>]]></content>
        <author>
            <name>J0sh</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Timers module]]></title>
        <id>https://open.mp/zh-CN/blog/timers</id>
        <link href="https://open.mp/zh-CN/blog/timers"/>
        <updated>2019-05-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This sneak-peek showcases improvements to the timers module in open.mp, introducing a more flexible and efficient API while maintaining backward compatibility.]]></summary>
        <content type="html"><![CDATA[<p>This sneak-peek showcases improvements to the timers module in open.mp, introducing a more flexible and efficient API while maintaining backward compatibility.</p>
<div class="theme-admonition theme-admonition-warning admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>注意</div><div class="admonitionContent_BuS1"><p>The content of the following post is out of date and has no reference to the current state of open.mp. The post is published here for archival purposes.</p></div></div>
<p>This is a sneak-peek at one of the improved modules we've done, for timers in open.mp:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">native </span><span class="token function" style="color:#d73a49">SetTimer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> func</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> msInterval</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> bool</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">repeat</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> SetTimerEx</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">native </span><span class="token function" style="color:#d73a49">SetTimerEx</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> func</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> msInterval</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> bool</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">repeat</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> params</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> GLOBAL_TAG_TYPES</span><span class="token operator" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">native </span><span class="token function" style="color:#d73a49">KillTimer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">timer</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Timer_Kill</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// CreateTimer</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">native Timer</span><span class="token operator" style="color:#393A34">:</span><span class="token function" style="color:#d73a49">Timer_Create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> func</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> usDelay</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> usInterval</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> repeatCount</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> params</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> GLOBAL_TAG_TYPES</span><span class="token operator" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// KillTimer</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">native bool</span><span class="token operator" style="color:#393A34">:</span><span class="token function" style="color:#d73a49">Timer_Kill</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Timer</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">timer</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Return time till next call.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">native </span><span class="token function" style="color:#d73a49">Timer_GetTimeRemaining</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Timer</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">timer</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Get number of calls left to make (0 for unlimited).</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">native </span><span class="token function" style="color:#d73a49">Timer_GetCallsRemaining</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Timer</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">timer</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Get `repeatCount` parameter.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">native </span><span class="token function" style="color:#d73a49">Timer_GetTotalCalls</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Timer</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">timer</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//  Get `usInterval` parameter.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">native </span><span class="token function" style="color:#d73a49">Timer_GetInterval</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Timer</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">timer</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Reset time remaining till next call to `usInterval`.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">native bool</span><span class="token operator" style="color:#393A34">:</span><span class="token function" style="color:#d73a49">Timer_Restart</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Timer</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">timer</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p>The first two are just for backwards-compatibility, the rest are the improved API:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">native Timer</span><span class="token operator" style="color:#393A34">:</span><span class="token function" style="color:#d73a49">Timer_Create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> func</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> usDelay</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> usInterval</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> repeatCount</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> params</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> GLOBAL_TAG_TYPES</span><span class="token operator" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<ul>
<li><code>func</code> - Fairly obvious; what to call.</li>
<li><code>usDelay</code> - Again obvious, the delay before the call (in microseconds).</li>
<li><code>usInterval</code> - What to reset usDelay to after the first call. So if you wanted a timer on the hour every hour, but it was 8:47am right now, the call would be <code>Timer_Create("OnTheHour", 780 SECONDS, 3600 SECONDS, 0);</code></li>
<li><code>repeatCount</code> - Unlike the old functions, which are just "once" or "forever", this instead takes the number of times to call the function. "once" would be <code>1</code>, <code>500</code> would stop after 500 calls, and (backwards from the old API) <code>0</code> means "forever".</li>
<li><code>GLOBAL_TAG_TYPES</code> - Like <code>{Float, ...}</code>, but with more tags.</li>
</ul>]]></content>
        <author>
            <name>Y_Less</name>
        </author>
    </entry>
</feed>