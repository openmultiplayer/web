"use strict";(self.webpackChunkomp_web=self.webpackChunkomp_web||[]).push([["23922"],{63574:function(e,t,r){r.r(t),r.d(t,{frontMatter:()=>s,toc:()=>l,default:()=>h,metadata:()=>n,assets:()=>o,contentTitle:()=>a});var n=JSON.parse('{"id":"scripting/functions/CreateActor","title":"CreateActor","description":"Create a static \'actor\' in the world.","source":"@site/i18n/th/docusaurus-plugin-content-docs/current/scripting/functions/CreateActor.md","sourceDirName":"scripting/functions","slug":"/scripting/functions/CreateActor","permalink":"/th/docs/scripting/functions/CreateActor","draft":false,"unlisted":false,"editUrl":"https://github.com/openmultiplayer/web/edit/master/frontend/docs/scripting/functions/CreateActor.md","tags":[],"version":"current","frontMatter":{"title":"CreateActor","sidebar_label":"CreateActor","description":"Create a static \'actor\' in the world.","tags":[]},"sidebar":"docsSidebar","previous":{"title":"Create3DTextLabel","permalink":"/th/docs/scripting/functions/Create3DTextLabel"},"next":{"title":"CreateExplosion","permalink":"/th/docs/scripting/functions/CreateExplosion"}}'),i=r(85893),c=r(50065);let s={title:"CreateActor",sidebar_label:"CreateActor",description:"Create a static 'actor' in the world.",tags:[]},a=void 0,o={},l=[{value:"\u0E04\u0E33\u0E2D\u0E18\u0E34\u0E1A\u0E32\u0E22",id:"\u0E04\u0E33\u0E2D\u0E18\u0E34\u0E1A\u0E32\u0E22",level:2},{value:"\u0E2A\u0E48\u0E07\u0E04\u0E37\u0E19",id:"\u0E2A\u0E48\u0E07\u0E04\u0E37\u0E19",level:2},{value:"\u0E15\u0E31\u0E27\u0E2D\u0E22\u0E48\u0E32\u0E07",id:"\u0E15\u0E31\u0E27\u0E2D\u0E22\u0E48\u0E32\u0E07",level:2},{value:"\u0E1A\u0E31\u0E19\u0E17\u0E36\u0E01",id:"\u0E1A\u0E31\u0E19\u0E17\u0E36\u0E01",level:2},{value:"\u0E1F\u0E31\u0E07\u0E01\u0E4C\u0E0A\u0E31\u0E48\u0E19\u0E17\u0E35\u0E48\u0E40\u0E01\u0E35\u0E48\u0E22\u0E27\u0E02\u0E49\u0E2D\u0E07\u0E01\u0E31\u0E19",id:"\u0E1F\u0E31\u0E07\u0E01\u0E4C\u0E0A\u0E31\u0E48\u0E19\u0E17\u0E35\u0E48\u0E40\u0E01\u0E35\u0E48\u0E22\u0E27\u0E02\u0E49\u0E2D\u0E07\u0E01\u0E31\u0E19",level:2}];function d(e){let t={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.admonition,{type:"warning",children:(0,i.jsx)(t.p,{children:"\u0E1F\u0E31\u0E07\u0E01\u0E4C\u0E0A\u0E31\u0E48\u0E19\u0E19\u0E35\u0E49\u0E16\u0E39\u0E01\u0E40\u0E1E\u0E34\u0E48\u0E21\u0E43\u0E19 SA-MP 0.3.7 \u0E41\u0E25\u0E30\u0E08\u0E30\u0E44\u0E21\u0E48\u0E17\u0E33\u0E07\u0E32\u0E19\u0E43\u0E19\u0E40\u0E27\u0E2D\u0E23\u0E4C\u0E0A\u0E31\u0E48\u0E19\u0E01\u0E48\u0E2D\u0E19\u0E2B\u0E19\u0E49\u0E32\u0E19\u0E35\u0E49!"})}),"\n",(0,i.jsx)(t.h2,{id:"\u0E04\u0E33\u0E2D\u0E18\u0E34\u0E1A\u0E32\u0E22",children:"\u0E04\u0E33\u0E2D\u0E18\u0E34\u0E1A\u0E32\u0E22"}),"\n",(0,i.jsx)(t.p,{children:"Create a static 'actor' in the world. These 'actors' are like NPCs, however they have limited functionality. They do not take up server player slots."}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Name"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"modelid"}),(0,i.jsx)(t.td,{children:"The model ID (skin ID) the actor should have."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"x"}),(0,i.jsx)(t.td,{children:"The X coordinate to create the actor at."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"y"}),(0,i.jsx)(t.td,{children:"The Y coordinate to create the actor at."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"z"}),(0,i.jsx)(t.td,{children:"The Z coordinate to create the actor at."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Rotation"}),(0,i.jsx)(t.td,{children:"The facing angle (rotation) for the actor to have."})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"\u0E2A\u0E48\u0E07\u0E04\u0E37\u0E19",children:"\u0E2A\u0E48\u0E07\u0E04\u0E37\u0E19"}),"\n",(0,i.jsx)(t.p,{children:"The created Actor ID (start at 0)."}),"\n",(0,i.jsx)(t.p,{children:"INVALID_ACTOR_ID (65535) If the actor limit (1000) is reached."}),"\n",(0,i.jsx)(t.h2,{id:"\u0E15\u0E31\u0E27\u0E2D\u0E22\u0E48\u0E32\u0E07",children:"\u0E15\u0E31\u0E27\u0E2D\u0E22\u0E48\u0E32\u0E07"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-c",children:"new ActorCJ;\n\npublic OnGameModeInit()\n{\n    // Create an actor (CJ) at Blueberry Acres (Center of SA map)\n    ActorCJ = CreateActor(0, 0.0, 0.0, 3.0, 0.0);\n}\n"})}),"\n",(0,i.jsx)(t.h2,{id:"\u0E1A\u0E31\u0E19\u0E17\u0E36\u0E01",children:"\u0E1A\u0E31\u0E19\u0E17\u0E36\u0E01"}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsx)(t.p,{children:"Actors are designed to just stand somewhere, for example cashiers and bartenders. They can perform animations (once or looping) using ApplyActorAnimation."})}),"\n",(0,i.jsx)(t.admonition,{type:"warning",children:(0,i.jsx)(t.p,{children:"Actors are completely separate from NPCs. They do NOT use player IDs/slots on the server and CANNOT be handled like NPCs. Actors are limited to 1000 (MAX_ACTORS). Actors can be pushed by vehicles, use a timer to put them back at their positions. As of 0.3.7 R2 actors default to being invulnerable."})}),"\n",(0,i.jsx)(t.h2,{id:"\u0E1F\u0E31\u0E07\u0E01\u0E4C\u0E0A\u0E31\u0E48\u0E19\u0E17\u0E35\u0E48\u0E40\u0E01\u0E35\u0E48\u0E22\u0E27\u0E02\u0E49\u0E2D\u0E07\u0E01\u0E31\u0E19",children:"\u0E1F\u0E31\u0E07\u0E01\u0E4C\u0E0A\u0E31\u0E48\u0E19\u0E17\u0E35\u0E48\u0E40\u0E01\u0E35\u0E48\u0E22\u0E27\u0E02\u0E49\u0E2D\u0E07\u0E01\u0E31\u0E19"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/th/docs/scripting/functions/DestroyActor",children:"DestroyActor"}),": Destroy an actor."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/th/docs/scripting/functions/SetActorPos",children:"SetActorPos"}),": Set the position of an actor."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/th/docs/scripting/functions/GetActorPos",children:"GetActorPos"}),": Get the position of an actor."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/th/docs/scripting/functions/SetActorFacingAngle",children:"SetActorFacingAngle"}),": Set the facing angle of an actor."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/th/docs/scripting/functions/GetActorFacingAngle",children:"GetActorFacingAngle"}),": Get the facing angle of an actor."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/th/docs/scripting/functions/SetActorVirtualWorld",children:"SetActorVirtualWorld"}),": Set the virtual world of an actor."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/th/docs/scripting/functions/GetActorVirtualWorld",children:"GetActorVirtualWorld"}),": Get the virtual world of an actor."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/th/docs/scripting/functions/ApplyActorAnimation",children:"ApplyActorAnimation"}),": Apply an animation to an actor."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/th/docs/scripting/functions/ClearActorAnimations",children:"ClearActorAnimations"}),": Clear any animations that are applied to an actor."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/th/docs/scripting/functions/GetPlayerCameraTargetActor",children:"GetPlayerCameraTargetActor"}),": Get the ID of the actor (if any) a player is looking at."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/th/docs/scripting/functions/IsActorStreamedIn",children:"IsActorStreamedIn"}),": Checks if an actor is streamed in for a player."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/th/docs/scripting/functions/SetActorHealth",children:"SetActorHealth"}),": Set the health of an actor."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/th/docs/scripting/functions/GetActorHealth",children:"GetActorHealth"}),": Gets the health of an actor."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/th/docs/scripting/functions/SetActorInvulnerable",children:"SetActorInvulnerable"}),": Set actor invulnerable."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/th/docs/scripting/functions/IsActorInvulnerable",children:"IsActorInvulnerable"}),": Check if actor is invulnerable."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/th/docs/scripting/functions/IsValidActor",children:"IsValidActor"}),": Check if actor id is valid."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/th/docs/scripting/functions/GetActorPoolSize",children:"GetActorPoolSize"}),": Gets the highest actorid created on the server."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/th/docs/scripting/functions/GetPlayerTargetActor",children:"GetPlayerTargetActor"}),": Gets id of an actor which is aimed by certain player."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/th/docs/scripting/callbacks/OnActorStreamIn",children:"OnActorStreamIn"}),": Called when an actor is streamed in by a player."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/th/docs/scripting/callbacks/OnActorStreamOut",children:"OnActorStreamOut"}),": Called when an actor is streamed out by a player."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/th/docs/scripting/callbacks/OnPlayerGiveDamageActor",children:"OnPlayerGiveDamageActor"}),": This callback is called when a player gives damage to an actor."]}),"\n"]})]})}function h(e={}){let{wrapper:t}={...(0,c.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},50065:function(e,t,r){r.d(t,{Z:()=>a,a:()=>s});var n=r(67294);let i={},c=n.createContext(i);function s(e){let t=n.useContext(c);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),n.createElement(c.Provider,{value:t},e.children)}}}]);