"use strict";(self.webpackChunkomp_web=self.webpackChunkomp_web||[]).push([["80735"],{31042:function(e,t,n){n.r(t),n.d(t,{frontMatter:()=>a,toc:()=>c,default:()=>u,metadata:()=>r,assets:()=>o,contentTitle:()=>l});var r=JSON.parse('{"id":"scripting/functions/GetMaxPlayers","title":"GetMaxPlayers","description":"Returns the maximum number of players that can join the server, as set by the server variable \'maxplayers\' in server.","source":"@site/docs/scripting/functions/GetMaxPlayers.md","sourceDirName":"scripting/functions","slug":"/scripting/functions/GetMaxPlayers","permalink":"/tr/docs/scripting/functions/GetMaxPlayers","draft":false,"unlisted":false,"editUrl":"https://github.com/openmultiplayer/web/edit/master/frontend/docs/scripting/functions/GetMaxPlayers.md","tags":[{"inline":true,"label":"player","permalink":"/tr/docs/tags/player"}],"version":"current","frontMatter":{"title":"GetMaxPlayers","sidebar_label":"GetMaxPlayers","description":"Returns the maximum number of players that can join the server, as set by the server variable \'maxplayers\' in server.","tags":["player"]},"sidebar":"docsSidebar","previous":{"title":"GetGravity","permalink":"/tr/docs/scripting/functions/GetGravity"},"next":{"title":"GetMenuColumnHeader","permalink":"/tr/docs/scripting/functions/GetMenuColumnHeader"}}'),s=n(85893),i=n(50065);let a={title:"GetMaxPlayers",sidebar_label:"GetMaxPlayers",description:"Returns the maximum number of players that can join the server, as set by the server variable 'maxplayers' in server.",tags:["player"]},l=void 0,o={},c=[{value:"Description",id:"description",level:2},{value:"Examples",id:"examples",level:2},{value:"Notes",id:"notes",level:2},{value:"Related Functions",id:"related-functions",level:2}];function d(e){let t={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(t.p,{children:"Returns the maximum number of players that can join the server, as set by the server variable 'max_players' in config.json."}),"\n",(0,s.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-c",children:'new string[128];\nformat(string, sizeof(string), "There are %i slots on this server!", GetMaxPlayers());\nSendClientMessage(playerid, 0xFFFFFFFF, string);\n'})}),"\n",(0,s.jsx)(t.h2,{id:"notes",children:"Notes"}),"\n",(0,s.jsx)(t.admonition,{type:"warning",children:(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"This function can not be used in place of MAX_PLAYERS."}),"\n",(0,s.jsx)(t.li,{children:"It can not be used at compile time (e.g. for array sizes)."}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"MAX_PLAYERS"})," should always be re-defined to what the 'max_players' var will be, or higher."]}),"\n"]})}),"\n",(0,s.jsx)(t.h2,{id:"related-functions",children:"Related Functions"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"GetPlayerPoolSize",children:"GetPlayerPoolSize"}),": Gets the highest playerid connected to the server."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"IsPlayerConnected",children:"IsPlayerConnected"}),": Check if a player is connected to the server."]}),"\n"]})]})}function u(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},50065:function(e,t,n){n.d(t,{Z:()=>l,a:()=>a});var r=n(67294);let s={},i=r.createContext(s);function a(e){let t=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);