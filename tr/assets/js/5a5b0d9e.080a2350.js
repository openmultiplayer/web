"use strict";(self.webpackChunkomp_web=self.webpackChunkomp_web||[]).push([["32118"],{93473:function(e,t,n){n.r(t),n.d(t,{frontMatter:()=>r,toc:()=>c,default:()=>h,metadata:()=>s,assets:()=>a,contentTitle:()=>l});var s=JSON.parse('{"id":"scripting/functions/floatcos","title":"floatcos","description":"Get the cosine from a given angle.","source":"@site/docs/scripting/functions/floatcos.md","sourceDirName":"scripting/functions","slug":"/scripting/functions/floatcos","permalink":"/tr/docs/scripting/functions/floatcos","draft":false,"unlisted":false,"editUrl":"https://github.com/openmultiplayer/web/edit/master/frontend/docs/scripting/functions/floatcos.md","tags":[{"inline":true,"label":"math","permalink":"/tr/docs/tags/math"},{"inline":true,"label":"floating-point","permalink":"/tr/docs/tags/floating-point"}],"version":"current","frontMatter":{"title":"floatcos","sidebar_label":"floatcos","description":"Get the cosine from a given angle.","tags":["math","floating-point"]},"sidebar":"docsSidebar","previous":{"title":"floatcmp","permalink":"/tr/docs/scripting/functions/floatcmp"},"next":{"title":"floatdiv","permalink":"/tr/docs/scripting/functions/floatdiv"}}'),i=n(85893),o=n(50065);let r={title:"floatcos",sidebar_label:"floatcos",description:"Get the cosine from a given angle.",tags:["math","floating-point"]},l=void 0,a={},c=[{value:"Description",id:"description",level:2},{value:"Returns",id:"returns",level:2},{value:"Examples",id:"examples",level:2},{value:"Notes",id:"notes",level:2},{value:"Related Functions",id:"related-functions",level:2},{value:"Related Resources",id:"related-resources",level:2}];function d(e){let t={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.a)(),...e.components},{LowercaseNote:n}=t;return n||function(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("LowercaseNote",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n,{}),"\n",(0,i.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(t.p,{children:"Get the cosine from a given angle. The input angle may be in radians, degrees or grades."}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Name"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:["Float",":value"]}),(0,i.jsx)(t.td,{children:"The angle from which to get the cosine."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:["anglemode",":mode"]}),(0,i.jsxs)(t.td,{children:["The ",(0,i.jsx)(t.a,{href:"../resources/anglemodes",children:"angle mode"})," to use, depending on the value entered. (default: radian)"]})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)(t.p,{children:"The cosine of the value entered."}),"\n",(0,i.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-c",children:'public OnGameModeInit()\n{\n    printf("The cosine from 90\xb0 is %.0f", floatcos(90.0, degrees));\n    // Output: 0\n    return 1;\n}\n'})}),"\n",(0,i.jsx)(t.h2,{id:"notes",children:"Notes"}),"\n",(0,i.jsx)(t.admonition,{type:"warning",children:(0,i.jsxs)(t.p,{children:["GTA/SA-MP use degrees for angles in most circumstances, for example ",(0,i.jsx)(t.a,{href:"GetPlayerFacingAngle",children:"GetPlayerFacingAngle"}),". Therefore, it is most likely you'll want to use the 'degrees' angle mode, not radians. Also note that angles in GTA are counterclockwise; 270\xb0 is East and 90\xb0 is West. South is still 180\xb0 and North still 0\xb0/360\xb0."]})}),"\n",(0,i.jsx)(t.h2,{id:"related-functions",children:"Related Functions"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"floatsin",children:"floatsin"}),": Get the sine from a specific angle."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"floattan",children:"floattan"}),": Get the tangent from a specific angle."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"related-resources",children:"Related Resources"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"../resources/anglemodes",children:"Angle Modes"}),": SI unit constants for measuring angles."]}),"\n"]})]})}function h(e={}){let{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},50065:function(e,t,n){n.d(t,{Z:()=>l,a:()=>r});var s=n(67294);let i={},o=s.createContext(i);function r(e){let t=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);