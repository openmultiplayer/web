"use strict";(self.webpackChunkomp_web=self.webpackChunkomp_web||[]).push([["58551"],{18689:function(a,e,i){i.r(e),i.d(e,{frontMatter:()=>d,toc:()=>k,default:()=>o,metadata:()=>n,assets:()=>s,contentTitle:()=>t});var n=JSON.parse('{"id":"scripting/language/reference/A-tutorial-introduction","title":"\xd6\u011Fretici giri\u015Fi","description":"---","source":"@site/i18n/tr/docusaurus-plugin-content-docs/current/scripting/language/reference/02-A-tutorial-introduction.md","sourceDirName":"scripting/language/reference","slug":"/scripting/language/reference/A-tutorial-introduction","permalink":"/tr/docs/scripting/language/reference/A-tutorial-introduction","draft":false,"unlisted":false,"editUrl":"https://github.com/openmultiplayer/web/edit/master/frontend/docs/scripting/language/reference/02-A-tutorial-introduction.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Foreword","permalink":"/tr/docs/scripting/language/reference/Foreword"},"next":{"title":"Data-and-declarations","permalink":"/tr/docs/scripting/language/reference/Data-and-declarations"}}'),r=i(85893),l=i(50065);let d={},t="\xd6\u011Fretici giri\u015Fi",s={},k=[{value:"\u2217 Bu, &quot;state&quot; giri\u015F fonksiyonlar\u0131yla kar\u0131\u015Ft\u0131r\u0131lmamal\u0131d\u0131r, bunlar entry olarak \xe7a\u011Fr\u0131l\u0131r ancak farkl\u0131 bir ama\xe7 ta\u015F\u0131rlar \u2014 bkz. sayfa 42.",id:"-bu-state-giri\u015F-fonksiyonlar\u0131yla-kar\u0131\u015Ft\u0131r\u0131lmamal\u0131d\u0131r-bunlar-entry-olarak-\xe7a\u011Fr\u0131l\u0131r-ancak-farkl\u0131-bir-ama\xe7-ta\u015F\u0131rlar--bkz-sayfa-42",level:6},{value:"\u2217 Dil spesifikasyonunda, &quot;analizci&quot; terimi, uyumlu Pawn programlar\u0131n\u0131 i\u015Fleyen ve \xe7al\u0131\u015Ft\u0131ran herhangi bir uygulamay\u0131 ifade eder - hem yorumlay\u0131c\u0131lar hem de derleyiciler olabilir.",id:"-dil-spesifikasyonunda-analizci-terimi-uyumlu-pawn-programlar\u0131n\u0131-i\u015Fleyen-ve-\xe7al\u0131\u015Ft\u0131ran-herhangi-bir-uygulamay\u0131-ifade-eder---hem-yorumlay\u0131c\u0131lar-hem-de-derleyiciler-olabilir",level:6},{value:"\u2022 Aritmetik",id:"-aritmetik",level:3},{value:"\u2022 Diziler ve sabitler",id:"-diziler-ve-sabitler",level:3},{value:"\u2022 Fonksiyonlar",id:"-fonksiyonlar",level:3},{value:"\u2022 Referans ile \xc7a\u011F\u0131rma ve De\u011Fer ile \xc7a\u011F\u0131rma",id:"-referans-ile-\xe7a\u011F\u0131rma-ve-de\u011Fer-ile-\xe7a\u011F\u0131rma",level:3},{value:"\u2217 Alt\u0131n Oran&#39;\u0131n kesin de\u011Feri 1/2(\u221A5 + 1)&#39;dir. Fibonacci say\u0131lar\u0131 ile Alt\u0131n Oran aras\u0131ndaki ili\u015Fki, burada a\xe7\u0131klanan yinelemeli y\xf6ntemin yerine herhangi bir s\u0131ra numaras\u0131n\u0131n &quot;do\u011Frudan&quot; hesaplanmas\u0131na olanak tan\u0131r.",id:"-alt\u0131n-oran\u0131n-kesin-de\u011Feri-125--1dir-fibonacci-say\u0131lar\u0131-ile-alt\u0131n-oran-aras\u0131ndaki-ili\u015Fki-burada-a\xe7\u0131klanan-yinelemeli-y\xf6ntemin-yerine-herhangi-bir-s\u0131ra-numaras\u0131n\u0131n-do\u011Frudan-hesaplanmas\u0131na-olanak-tan\u0131r",level:6},{value:"\u2217 Josephus Scaliger&#39;in tam olarak ne buldu\u011Fu ve ona ne veya kim ad\u0131n\u0131 koydu\u011Fu konusunda baz\u0131 tart\u0131\u015Fmalar vard\u0131r.",id:"-josephus-scaligerin-tam-olarak-ne-buldu\u011Fu-ve-ona-ne-veya-kim-ad\u0131n\u0131-koydu\u011Fu-konusunda-baz\u0131-tart\u0131\u015Fmalar-vard\u0131r",level:6},{value:"\u2217 Gregoryen takvimi, Papa XIII. Gregory taraf\u0131ndan 15 Ekim 1582&#39;de ba\u015Flamas\u0131 i\xe7in emredildi, bu da daha \xf6nceki tarihlerin ger\xe7ekte Gregoryen takviminde var olmad\u0131\u011F\u0131 anlam\u0131na gelir. Gregoryen takvimini 15 Ekim 1582&#39;den \xf6nceki g\xfcnler i\xe7in geni\u015Fletirken, ona proleptik Gregoryen takvimi diyoruz.",id:"-gregoryen-takvimi-papa-xiii-gregory-taraf\u0131ndan-15-ekim-1582de-ba\u015Flamas\u0131-i\xe7in-emredildi-bu-da-daha-\xf6nceki-tarihlerin-ger\xe7ekte-gregoryen-takviminde-var-olmad\u0131\u011F\u0131-anlam\u0131na-gelir-gregoryen-takvimini-15-ekim-1582den-\xf6nceki-g\xfcnler-i\xe7in-geni\u015Fletirken-ona-proleptik-gregoryen-takvimi-diyoruz",level:6},{value:"\u2022 Rasyonel Say\u0131lar",id:"-rasyonel-say\u0131lar",level:3},{value:"\u2217 Asl\u0131nda, bu zaten bu k\u0131lavuzdaki \xf6rneklerde kullan\u0131lan t\xfcm yerel i\u015Flevler i\xe7in ge\xe7erlidir.",id:"-asl\u0131nda-bu-zaten-bu-k\u0131lavuzdaki-\xf6rneklerde-kullan\u0131lan-t\xfcm-yerel-i\u015Flevler-i\xe7in-ge\xe7erlidir",level:6},{value:"\u2022 Karakter Dizileri (Strings)",id:"-karakter-dizileri-strings",level:3},{value:"\u2022 Diziler ve Numaraland\u0131rmalar (Yap\u0131land\u0131r\u0131lm\u0131\u015F Veri)",id:"-diziler-ve-numaraland\u0131rmalar-yap\u0131land\u0131r\u0131lm\u0131\u015F-veri",level:3},{value:"\u2022 &quot;K\xfcme&quot; \u0130\u015Flemleri \u0130\xe7in Bit Operasyonlar\u0131",id:"-k\xfcme-i\u0307\u015Flemleri-i\u0307\xe7in-bit-operasyonlar\u0131",level:3},{value:"\u2022 Basit Bir Ters Leh\xe7e (RPN) Hesap Makinesi",id:"-basit-bir-ters-leh\xe7e-rpn-hesap-makinesi",level:3},{value:"\u2217 Bu kurallar genellikle \u201CL\xfctfen Sevgili Teyzem Affet\u201D gibi bir mnemonikle \xf6zetlenir (Parantezler, \xdcs Alma, \xc7arpma, B\xf6lme, Toplama, \xc7\u0131karma)",id:"-bu-kurallar-genellikle-l\xfctfen-sevgili-teyzem-affet-gibi-bir-mnemonikle-\xf6zetlenir-parantezler-\xfcs-alma-\xe7arpma-b\xf6lme-toplama-\xe7\u0131karma",level:6},{value:"* Leh\xe7e Notasyonu, sadece de\u011Fi\u015Fken veya fonksiyon isimlerine &quot;tip&quot; veya &quot;ama\xe7&quot; belirtme al\u0131\u015Fkanl\u0131\u011F\u0131 olan &quot;Macar Notasyonu&quot; ile tamamen ilgili de\u011Fildir.",id:"-leh\xe7e-notasyonu-sadece-de\u011Fi\u015Fken-veya-fonksiyon-isimlerine-tip-veya-ama\xe7-belirtme-al\u0131\u015Fkanl\u0131\u011F\u0131-olan-macar-notasyonu-ile-tamamen-ilgili-de\u011Fildir",level:6},{value:"\u2022 Olay Tabanl\u0131 Programlama",id:"-olay-tabanl\u0131-programlama",level:3},{value:"\u2022 \xc7oklu Olaylar",id:"-\xe7oklu-olaylar",level:3},{value:"\u2217 Bu betik, al\u0131nan iletileri yaz\u0131lan iletilerden (\xf6rne\u011Fin, iki farkl\u0131 kayd\u0131r\u0131labilir b\xf6lgede) ay\u0131rmaya \xe7al\u0131\u015Fmad\u0131\u011F\u0131ndan, terminal/pencere kar\u0131\u015F\u0131k g\xf6r\xfcnebilir. Daha geli\u015Fmi\u015F bir kullan\u0131c\u0131 aray\xfcz\xfc ile bu basit betik ger\xe7ekten g\xfczel bir mesaj tabanl\u0131 sohbet program\u0131 olabilir.",id:"-bu-betik-al\u0131nan-iletileri-yaz\u0131lan-iletilerden-\xf6rne\u011Fin-iki-farkl\u0131-kayd\u0131r\u0131labilir-b\xf6lgede-ay\u0131rmaya-\xe7al\u0131\u015Fmad\u0131\u011F\u0131ndan-terminalpencere-kar\u0131\u015F\u0131k-g\xf6r\xfcnebilir-daha-geli\u015Fmi\u015F-bir-kullan\u0131c\u0131-aray\xfcz\xfc-ile-bu-basit-betik-ger\xe7ekten-g\xfczel-bir-mesaj-tabanl\u0131-sohbet-program\u0131-olabilir",level:6},{value:"\u2217 &quot;Native functions&quot; ve kullan\u0131c\u0131 tan\u0131ml\u0131 operat\xf6rler hari\xe7.",id:"-native-functions-ve-kullan\u0131c\u0131-tan\u0131ml\u0131-operat\xf6rler-hari\xe7",level:3},{value:"\u2217 Giri\u015F fonksiyonlar\u0131 ve otomat teorisi",id:"-giri\u015F-fonksiyonlar\u0131-ve-otomat-teorisi",level:3},{value:"* Ayn\u0131 uygulamaya sahip bir fonksiyonun hi\xe7bir durum s\u0131n\u0131fland\u0131r\u0131c\u0131ya ihtiyac\u0131 yoktur - bkz. printchar.",id:"-ayn\u0131-uygulamaya-sahip-bir-fonksiyonun-hi\xe7bir-durum-s\u0131n\u0131fland\u0131r\u0131c\u0131ya-ihtiyac\u0131-yoktur---bkz-printchar",level:3},{value:"\u015Eekil 1: Yaya ge\xe7idi \u0131\u015F\u0131klar\u0131",id:"\u015Fekil-1-yaya-ge\xe7idi-\u0131\u015F\u0131klar\u0131",level:6},{value:"\u015Eekil 2: Kaynak kodundan olu\u015Fturulan belge",id:"\u015Fekil-2-kaynak-kodundan-olu\u015Fturulan-belge",level:6},{value:"\u2022 Uyar\u0131lar ve Hatalar",id:"-uyar\u0131lar-ve-hatalar",level:3},{value:"\u2022 Kapan\u0131\u015F",id:"-kapan\u0131\u015F",level:3},{value:"\u2217 Art\u0131k Pawn \xfczerine tek kitap de\u011Fil.",id:"-art\u0131k-pawn-\xfczerine-tek-kitap-de\u011Fil",level:6}];function m(a){let e={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",h6:"h6",header:"header",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.a)(),...a.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"\xf6\u011Fretici-giri\u015Fi",children:"\xd6\u011Fretici giri\u015Fi"})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:'Pawn, "C" programlama diline benzeyen bir s\xf6zdizimine sahip basit bir programlama dilidir. Bir pawn program\u0131, bir dizi fonksiyon ve bir dizi de\u011Fi\u015Fkenden olu\u015Fur. De\u011Fi\u015Fkenler veri nesneleridir ve fonksiyonlar, veri nesneleri \xfczerinde i\u015Flem yapan veya g\xf6revleri ger\xe7ekle\u015Ftiren komutlar\u0131 i\xe7erir.'}),"\n",(0,r.jsx)(e.p,{children:'Neredeyse her bilgisayar dilindeki ilk program, genellikle basit bir dize yazd\u0131ran bir programd\u0131r; "Hello world" yazd\u0131rmak klasik bir \xf6rnektir. pawn\'da, program \u015Fu \u015Fekilde g\xf6r\xfcnebilir:'}),"\n",(0,r.jsx)(e.p,{children:"Listeleme: hello.p"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:'\nmain()\n    printf  "Hello  world\\n"\n\n'})}),"\n",(0,r.jsx)(e.p,{children:"Bu k\u0131lavuz, bir pawn program\u0131n\u0131 nas\u0131l \xe7al\u0131\u015Ft\u0131raca\u011F\u0131n\u0131z\u0131 bildi\u011Finizi varsayar; e\u011Fer bilmiyorsan\u0131z, l\xfctfen uygulama k\u0131lavuzuna ba\u015Fvurun (daha fazla ipucu sayfa 168'de bulunmaktad\u0131r)."}),"\n",(0,r.jsx)(e.p,{children:'Bir pawn program\u0131, neredeyse bu k\u0131lavuzun t\xfcm \xf6rneklerinde oldu\u011Fu gibi, y\xfcr\xfctme i\u015Flemine "entry" fonksiyonunda\u2217 ba\u015Flar. Burada, main fonksiyonu yaln\u0131zca ba\u015Fl\u0131\u011F\u0131n hemen alt\u0131ndaki tek bir komut i\xe7erir. Sat\u0131r sonlar\u0131 ve girinti \xf6nemsizdir; print fonksiyonunun \xe7a\u011Fr\u0131s\u0131, main fonksiyonunun ba\u015Fl\u0131\u011F\u0131 ile ayn\u0131 sat\u0131rda da olabilir.'}),"\n",(0,r.jsx)(e.p,{children:"Bir fonksiyonun tan\u0131m\u0131, fonksiyon ad\u0131n\u0131 takip eden parantez \xe7iftinin gelmesini gerektirir. Bir fonksiyon parametre al\u0131yorsa, deklarasyonlar\u0131 parantezler aras\u0131nda g\xf6r\xfcn\xfcr. main fonksiyonu herhangi bir parantez almad\u0131\u011F\u0131ndan dolay\u0131. Fonksiyon \xe7a\u011Fr\u0131s\u0131 (veya fonksiyon \xe7a\u011Fr\u0131s\u0131) i\xe7in kurallar farkl\u0131d\u0131r; parantezler, print fonksiyonuna yap\u0131lan \xe7a\u011Fr\u0131da iste\u011Fe ba\u011Fl\u0131d\u0131r."}),"\n",(0,r.jsx)(e.p,{children:'Print fonksiyonunun tek arg\xfcman\u0131, \xe7ift t\u0131rnak i\xe7inde olmas\u0131 gereken bir dizedir. Dizedeki sona yak\u0131n \\n karakterleri, bu durumda "newline" sembol\xfcn\xfc g\xf6steren bir ka\xe7\u0131\u015F dizisi olu\u015Fturur. Print, newline ka\xe7\u0131\u015F dizisine rastlad\u0131\u011F\u0131nda, imleci bir sonraki sat\u0131r\u0131n ilk s\xfctununa ta\u015F\u0131r. Bir dizenin birden fazla sat\u0131ra yay\u0131lmas\u0131na izin verilmedi\u011Finden, "newline" eklemek i\xe7in \\n ka\xe7\u0131\u015F dizisini kullanmak gerekmektedir.'}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h6,{id:"-bu-state-giri\u015F-fonksiyonlar\u0131yla-kar\u0131\u015Ft\u0131r\u0131lmamal\u0131d\u0131r-bunlar-entry-olarak-\xe7a\u011Fr\u0131l\u0131r-ancak-farkl\u0131-bir-ama\xe7-ta\u015F\u0131rlar--bkz-sayfa-42",children:'\u2217 Bu, "state" giri\u015F fonksiyonlar\u0131yla kar\u0131\u015Ft\u0131r\u0131lmamal\u0131d\u0131r, bunlar entry olarak \xe7a\u011Fr\u0131l\u0131r ancak farkl\u0131 bir ama\xe7 ta\u015F\u0131rlar \u2014 bkz. sayfa 42.'}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"Derleme ve betik \xe7al\u0131\u015Ft\u0131rma: sayfa 168'e bak\u0131n"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"Dize sabitleri: 99 Ka\xe7\u0131\u015F dizisi: 99"})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:'pawn, "b\xfcy\xfck/k\xfc\xe7\xfck harfe duyarl\u0131" bir dilidir: b\xfcy\xfck ve k\xfc\xe7\xfck harfle yaz\u0131lm\u0131\u015F harfler farkl\u0131 harfler olarak kabul edilir. Yukar\u0131daki \xf6rnekte printf fonksiyonunu "PrintF" olarak yazmak bir hata olacakt\u0131r. Anahtar kelimeler ve \xf6nceden tan\u0131mlanm\u0131\u015F semboller, "main" fonksiyonunun ad\u0131 gibi, k\xfc\xe7\xfck harfle yaz\u0131lmal\u0131d\u0131r.'}),"\n",(0,r.jsx)(e.p,{children:"C dilini biliyorsan\u0131z, yukar\u0131daki \xf6rne\u011Fin C/C++'daki e\u015Fde\u011Feri gibi g\xf6r\xfcnmedi\u011Fini d\xfc\u015F\xfcnebilirsiniz. Ancak pawn da C'ye olduk\xe7a benzer olabilir. A\u015Fa\u011F\u0131daki \xf6rnek program\u0131 da ge\xe7erli pawn s\xf6zdizimine sahiptir (ve daha \xf6nceki \xf6rnekle ayn\u0131 anlam\u0131 ta\u015F\u0131r):"}),"\n",(0,r.jsx)(e.p,{children:"Listeleme: hello.p \u2014 C tarz\u0131"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:'main()\n{\n    printf("Hello world\\n");\n}\n'})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:'#include <console>\n\nmain()\n{\n    printf("Hello world\\n");\n}\n'})}),"\n",(0,r.jsx)(e.p,{children:"Bu ilk \xf6rnekler ayn\u0131 zamanda pawn ile C dili aras\u0131ndaki birka\xe7 fark\u0131 da ortaya koymaktad\u0131r:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:'Genellikle herhangi bir sistem tan\u0131ml\u0131 "header dosyas\u0131" eklemeye gerek yoktur;'}),"\n",(0,r.jsx)(e.li,{children:"Noktal\u0131 virg\xfcl opsiyoneldir (bir sat\u0131rda birden fazla ifade yaz\u0131lmad\u0131\u011F\u0131 s\xfcrece);"}),"\n",(0,r.jsx)(e.li,{children:"Bir fonksiyonun g\xf6vdesi tek bir talimat ise, s\xfcsl\xfc parantezler (bir bile\u015Fik talimat i\xe7in) opsiyoneldir;"}),"\n",(0,r.jsx)(e.li,{children:"Bir fonksiyonun sonucunu bir ifadede veya atamada kullanmad\u0131\u011F\u0131n\u0131zda, fonksiyon arg\xfcman\u0131n\u0131n etraf\u0131ndaki parantezler opsiyoneldir."}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:'Bir not olarak, yukar\u0131daki noktalar opsiyonel s\xf6zdizimlere i\u015Faret eder. Hangi s\xf6zdizimini kullanmak istedi\u011Finiz size ba\u011Fl\u0131d\u0131r: Her iki stil de "kullan\u0131lmayan" veya "zararl\u0131 kabul edilen" bir stil de\u011Fildir. Bu k\u0131lavuzdaki \xf6rnekler s\xfcsl\xfc parantezleri konumland\u0131r\u0131r ve "Whitesmith tarz\u0131" olarak bilinen bir girinti kullan\u0131r, ancak pawn serbest bi\xe7im bir dil oldu\u011Fu i\xe7in di\u011Fer girinti stilleri de ayn\u0131 derecede uygundur.'}),"\n",(0,r.jsx)(e.p,{children:'Pawn, uygulamalar i\xe7in bir uzant\u0131 dili olacak \u015Fekilde tasarland\u0131\u011F\u0131ndan, bir pawn program\u0131n\u0131n sahip oldu\u011Fu i\u015Flev k\xfcmesi/host uygulamas\u0131na ba\u011Fl\u0131d\u0131r. Bu nedenle, pawn dilinin herhangi bir i\u015Flev hakk\u0131nda i\xe7selle\u015Ftirilmi\u015F bir bilgisi yoktur. Bu ilk \xf6rnekte kullan\u0131lan print i\u015Flevi, host uygulamas\u0131 taraf\u0131ndan kullan\u0131labilir hale getirilmeli ve pawn \xe7\xf6z\xfcmleyicisine "bildirilmelidir".'}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h6,{id:"-dil-spesifikasyonunda-analizci-terimi-uyumlu-pawn-programlar\u0131n\u0131-i\u015Fleyen-ve-\xe7al\u0131\u015Ft\u0131ran-herhangi-bir-uygulamay\u0131-ifade-eder---hem-yorumlay\u0131c\u0131lar-hem-de-derleyiciler-olabilir",children:'\u2217 Dil spesifikasyonunda, "analizci" terimi, uyumlu Pawn programlar\u0131n\u0131 i\u015Fleyen ve \xe7al\u0131\u015Ft\u0131ran herhangi bir uygulamay\u0131 ifade eder - hem yorumlay\u0131c\u0131lar hem de derleyiciler olabilir.'}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"Daha fazla fonksiyon a\xe7\u0131klamas\u0131 124. sayfada"})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:"Bu arada, bir\xe7ok host uygulamas\u0131n\u0131n print ve printf gibi ortak i\u015Flevleri sa\u011Flad\u0131\u011F\u0131 varsay\u0131lmaktad\u0131r."}),"\n",(0,r.jsx)(e.p,{children:'Baz\u0131 ortamlarda metin \xe7\u0131kt\u0131s\u0131 almadan \xf6nce ekran veya terminalin etkinle\u015Ftirilmesi gerekebilir. Bu durumda, print veya printf i\u015Flevine ilk \xe7a\u011Fr\u0131dan \xf6nce "console" i\u015Flevini eklemeniz gerekir. console i\u015Flevi ayr\u0131ca g\xf6r\xfcnt\xfcn\xfcn sat\u0131r ve s\xfctun say\u0131s\u0131 gibi cihaz \xf6zelliklerini belirtmenize olanak tan\u0131r. Bu k\u0131lavuzdaki \xf6rnek programlar, bir\xe7o\u011Fu bu i\u015Flemi gerektirmedi\u011Fi veya sa\u011Flamad\u0131\u011F\u0131 i\xe7in console i\u015Flevlerini kullanmaz.'}),"\n",(0,r.jsx)(e.h3,{id:"-aritmetik",children:"\u2022 Aritmetik"}),"\n",(0,r.jsx)(e.p,{children:"\xc7o\u011Fu program\u0131n temel \xf6\u011Feleri hesaplamalar, kararlar (ko\u015Fullu y\xfcr\xfctme), yinelemeler (d\xf6ng\xfcler) ve giri\u015F verilerini, \xe7\u0131k\u0131\u015F verilerini ve ara sonu\xe7lar\u0131 depolamak i\xe7in de\u011Fi\u015Fkenlerdir. A\u015Fa\u011F\u0131daki program \xf6rne\u011Fi, bu konseptlerin bir\xe7o\u011Funu g\xf6stermektedir. Program, Euclides taraf\u0131ndan icat edilen bir algoritmay\u0131 kullanarak iki de\u011Ferin en b\xfcy\xfck ortak b\xf6lenini hesaplar."}),"\n",(0,r.jsx)(e.p,{children:"Listeleme: gcd.p"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:'\n/* iki de\u011Ferin en b\xfcy\xfck ortak b\xf6lenini Euclides\'in algoritmas\u0131 kullanarak hesaplar */\n\nmain()\n{\n    print "\u0130ki de\u011Fer girin\\n"\n    new a = getvalue()\n    new b = getvalue()\n    while (a != b)\n        if (a > b)\n            a = a - b\n        else\n            b = b - a\n    printf "En b\xfcy\xfck ortak b\xf6len: %d\\n", a\n}\n\n'})}),"\n",(0,r.jsxs)(e.p,{children:['Fonksiyon main art\u0131k sadece tek bir "print" ifadesi i\xe7ermiyor. Bir fonksiyonun g\xf6vdesi bir ifadeden daha fazla ifade i\xe7eriyorsa, bu ifadelerin s\xfcsl\xfc parantez i\xe7ine al\u0131nmas\u0131 gerekmektedir \u2014"'," ve ",'" karakterleri. Bu, talimatlar\u0131 tek bir bile\u015Fik ifadeye gruplar. If\u2013else ve d\xf6ng\xfc talimatlar\u0131n\u0131n g\xf6vdelerine de ayn\u0131 \u015Fekilde ifadeleri gruplama kavram\u0131 uygulan\u0131r.']}),"\n",(0,r.jsx)(e.p,{children:"Yeni anahtar kelimesi bir de\u011Fi\u015Fken olu\u015Fturur. Yeni'nin ard\u0131ndan de\u011Fi\u015Fkenin ad\u0131 gelir. Veri bildirimleri, de\u011Fi\u015Fkenin olu\u015Fturulma an\u0131nda de\u011Fer atamak yayg\u0131n, ancak zorunlu de\u011Fildir."}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"Bile\u015Fik ifade: 112"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"Veri deklarasyonlar\u0131, detayl\u0131 bir \u015Fekilde 62. sayfadan itibaren ele al\u0131nmaktad\u0131r"})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:"De\u011Fi\u015Fkenler, bir ifadede kullan\u0131lmadan \xf6nce bildirilmelidir. Getvalue i\u015Flevi (ayr\u0131ca yayg\u0131n bir \xf6nceden tan\u0131ml\u0131 i\u015Flev) klavyeden bir de\u011Fer okur ve sonucu d\xf6nd\xfcr\xfcr. Pawn tipi olmayan bir dil oldu\u011Fundan, t\xfcm de\u011Fi\u015Fkenler i\u015Faretleme olabilen bir tamsay\u0131 de\u011Ferini i\xe7eren say\u0131sal h\xfccrelerdir."}),"\n",(0,r.jsx)(e.p,{children:"Getvalue fonksiyon ad\u0131n\u0131n ard\u0131ndan bir \xe7ift parantez gelir. Bu, getvalue'nun d\xf6nd\xfcrd\xfc\u011F\xfc de\u011Ferin bir de\u011Fi\u015Fkende sakland\u0131\u011F\u0131 i\xe7in gereklidir. Genellikle, fonksiyonun arg\xfcmanlar\u0131 (veya parametreleri) parantezler aras\u0131nda g\xf6r\xfcnmelidir, ancak bu programda kullan\u0131lan getvalue (bu programda kullan\u0131lan) a\xe7\u0131k bir arg\xfcman almaz. Bir fonksiyonun sonucunu bir de\u011Fi\u015Fkene atamaz veya ba\u015Fka bir \u015Fekilde bir ifadede kullanmazsan\u0131z, parantezler opsiyoneldir. \xd6rne\u011Fin, print ve printf ifadelerinin sonu\xe7lar\u0131 kullan\u0131lmaz. Parantezleri hala arg\xfcmanlar\u0131n etraf\u0131na koyabilirsiniz, ancak bu zorunlu de\u011Fildir."}),"\n",(0,r.jsx)(e.p,{children:'"While" d\xf6ng\xfcs\xfc gibi d\xf6ng\xfc talimatlar\u0131, parantezler aras\u0131ndaki ifade "true" oldu\u011Fu s\xfcrece tek bir talimat\u0131 tekrarlar. Bir d\xf6ng\xfcde birden fazla talimat\u0131 y\xfcr\xfctmek i\xe7in bunlar\u0131 bir bile\u015Fik ifade i\xe7inde grupland\u0131rabilirsiniz. If\u2013else talimat\u0131n\u0131n "true" ve "false" i\xe7in birer talimat\u0131 vard\u0131r.'}),"\n",(0,r.jsx)(e.p,{children:"Baz\u0131 ifadelerin, while ve if\u2013else gibi, ba\u015Fka bir talimat\u0131 i\xe7erdi\u011Fine dikkat edin. If\u2013else i\xe7in alt\u0131nda iki talimat bile var. Tam paket yine tek bir talimatt\u0131r. Yani:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:'if\'in alt\u0131nda olan "a = a - b" ve else\'nin alt\u0131nda olan "b = b - a" atama ifadeleri;'}),"\n",(0,r.jsx)(e.li,{children:"if\u2013else ifadesi bu iki atama ifadesinin etraf\u0131nda katlan\u0131r ve kendi ba\u015F\u0131na tek bir ifade olu\u015Fturur;"}),"\n",(0,r.jsx)(e.li,{children:"while ifadesi if\u2013else ifadesinin etraf\u0131nda katlan\u0131r ve yine tek bir ifade olu\u015Fturur."}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:'Ayn\u0131 seviyeye ait ifadelerin girintisini kaynak metin i\xe7inde belirtmek yayg\u0131nd\u0131r. "En B\xfcy\xfck Ortak B\xf6len" \xf6rne\u011Finde, while ifadesinden sonra sol kenar girintisi d\xf6rt bo\u015Fluk karakteri artar ve if ve else anahtar kelimelerinden sonra tekrar artar. Ayn\u0131 seviyede olan ifadeler, printf \xe7a\u011Fr\u0131lar\u0131n\u0131n her ikisi ve while d\xf6ng\xfcs\xfc gibi, ayn\u0131 girintiyi payla\u015F\u0131rlar.'}),"\n",(0,r.jsx)(e.p,{children:'While d\xf6ng\xfcs\xfc i\xe7in while d\xf6ng\xfc \u015Fart\u0131 "(a != b)"; != sembol\xfc "e\u015Fit de\u011Fil" operat\xf6r\xfcd\xfcr. Yani, if\u2013else talimat\u0131 "a" e\u015Fit "b" oldu\u011Funda tekrarlan\u0131r. Bir ifadenin kontrol\xfc alt\u0131nda \xe7al\u0131\u015Fan talimatlar\u0131 girintilemenin iyi bir uygulama oldu\u011Funa dikkat edin.'}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:'\xd6rne\u011Fin en alt\u0131ndaki printf \xe7a\u011Fr\u0131s\u0131, a\xe7\u0131l\u0131 parantezin hemen alt\u0131ndaki print \xe7a\u011Fr\u0131s\u0131ndan farkl\u0131d\u0131r. Printf\'deki "f" "formatl\u0131" i\xe7in durur, bu da fonksiyonun say\u0131sal de\u011Ferleri ve di\u011Fer verileri (kullan\u0131c\u0131 taraf\u0131ndan belirtilen bir formatta) bi\xe7imlendirebilece\u011Fi ve yazd\u0131rabilece\u011Fi anlam\u0131na gelir, ayn\u0131 zamanda literal metni de. Dizideki %d sembol\xfc, printf fonksiyonuna ait ikinci arg\xfcman\u0131n yazd\u0131r\u0131lmas\u0131 gereken konumu ve format\u0131 belirten bir belirte\xe7tir. \xc7al\u0131\u015Fma zaman\u0131nda, %d belirteci printf fonksiyonuna ait "a" de\u011Fi\u015Fkeninin de\u011Feri ile de\u011Fi\u015Ftirilir.'}),"\n",(0,r.jsx)(e.p,{children:"Print fonksiyonu sadece metin yazd\u0131rabilir; printf'ten daha h\u0131zl\u0131d\u0131r. Ekrana literal \"%\" yazd\u0131rmak istiyorsan\u0131z, print'i kullanmal\u0131s\u0131n\u0131z veya printf'e verdi\u011Finiz dizide \xe7ift kullanmal\u0131s\u0131n\u0131z. Yani:"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"print \"Personelin %20'si maliyetin %80'ini olu\u015Fturuyor\\n\""})}),"\n",(0,r.jsx)(e.p,{children:"ve"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"printf \"Personelin %%20'si maliyetin %%80'ini olu\u015Fturuyor\\n\""})}),"\n",(0,r.jsx)(e.p,{children:"ayn\u0131 diziyi yazd\u0131r\u0131r."}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:'"while" d\xf6ng\xfcs\xfc: 116'})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:'"if else": 114'})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"\u0130li\u015Fkisel operat\xf6rler: 107"})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h3,{id:"-diziler-ve-sabitler",children:"\u2022 Diziler ve sabitler"}),"\n",(0,r.jsx)(e.p,{children:'Pawn, tek bir h\xfccre boyutunda basit de\u011Fi\u015Fkenlerin yan\u0131 s\u0131ra bir\xe7ok h\xfccre/de\u011Fer i\xe7eren "dizi de\u011Fi\u015Fkenlerini" destekler. A\u015Fa\u011F\u0131daki \xf6rnek program, bilinen "Eratosthenes\'in s\xfczgeci"ni kullanarak bir dizi asal say\u0131y\u0131 g\xf6r\xfcnt\xfcler. Program ayr\u0131ca ba\u015Fka bir yeni kavram\u0131 tan\u0131t\u0131r: sembolik sabitler. Sembolik sabitler, de\u011Fi\u015Ftirilemeyen de\u011Fi\u015Fkenlere benzerler.'}),"\n",(0,r.jsx)(e.p,{children:"Listeleme: sieve.p"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:'\n/* "Eratosthenes" s\xfczgeci kullanarak 100\'den k\xfc\xe7\xfck t\xfcm asal say\u0131lar\u0131 yazd\u0131r\u0131r */\n\nmain()\n{\n    const max_primes = 100\n    new series[max_primes] = {true, ...}\n    for (new i = 2; i < max_primes; ++i)\n        if (series[i])\n        {\n            printf "%d ", i\n            /* bu "asal" \u0131n listedeki t\xfcm katlar\u0131n\u0131 filtrele */\n            for (new j = 2 * i; j < max_primes; j += i)\n                series[j] = false\n        }\n}\n\n'})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:"Bir program veya alt program\u0131n i\xe7inde bir sabit s\u0131n\u0131rl\u0131 bir de\u011Feri varsa, bu de\u011Fer i\xe7in sembolik bir sabit olu\u015Fturmak iyi bir uygulamad\u0131r. \xd6nceki \xf6rnekte, max_primes sembol\xfc de\u011Feri 100 olan bir sabittir. Program, max_primes sembol\xfcn\xfc tan\u0131m\u0131ndan sonra \xfc\xe7 kez kullan\u0131r: de\u011Fi\u015Fken serisinin bildiriminde ve iki for d\xf6ng\xfcs\xfcnde. Program\u0131 500'den k\xfc\xe7\xfck t\xfcm asal say\u0131lar\u0131 yazd\u0131racak \u015Fekilde uyarlamak istersek, de\u011Fi\u015Ftirmemiz gereken sadece bir sat\u0131r olacakt\u0131r."}),"\n",(0,r.jsx)(e.p,{children:'Basit de\u011Fi\u015Fkenler gibi, diziler de olu\u015Fturulurken ba\u015Flang\u0131\xe7 de\u011Ferleri atanabilir. Pawn, t\xfcm elemanlar\u0131 sabit bir de\u011Fere ba\u015Flatmak i\xe7in pratik bir k\u0131saltma sunar: "series" dizisinin t\xfcm y\xfcz eleman\u0131 "true" de\u011Ferine ayarlan\u0131r \u2014programc\u0131n\u0131n "true" kelimesini y\xfcz kez yazmas\u0131n\u0131 gerektirmez. true ve false sembolleri \xf6nceden tan\u0131mlanm\u0131\u015F sabitlerdir.'}),"\n",(0,r.jsx)(e.p,{children:"Primes sieve \xf6rne\u011Findeki i ve j gibi basit de\u011Fi\u015Fkenler, bir for d\xf6ng\xfcs\xfcn\xfcn ilk ifadesinde deklare edildi\u011Finde, de\u011Fi\u015Fken sadece d\xf6ng\xfc i\xe7inde ge\xe7erlidir. De\u011Fi\u015Fken bildirimi kendi kurallar\u0131na sahiptir; bir ifade de\u011Fildir - bunun gibi g\xf6r\xfcnse de. Bu kurallardan biri de for d\xf6ng\xfcs\xfcn\xfcn ilk ifadesinin bir de\u011Fi\u015Fken bildirimi i\xe7erebilece\u011Fidir."}),"\n",(0,r.jsx)(e.p,{children:"Her iki for d\xf6ng\xfcs\xfc de \xfc\xe7\xfcnc\xfc ifadede yeni operat\xf6rleri tan\u0131t\u0131r. ++ operat\xf6r\xfc, operand\u0131n\u0131 bir art\u0131r\u0131r; yani, ++i i = i + 1'e e\u015Fittir. += operat\xf6r\xfc, sa\u011Fdaki ifadeyi solundaki de\u011Fi\u015Fkene ekler; yani, j += i j = j + i'ye e\u015Fittir."}),"\n",(0,r.jsx)(e.p,{children:"Dizilerle \xe7al\u0131\u015F\u0131rken dikkat etmeniz gereken bir \"bir eksik\" durumu vard\u0131r. series dizisinin ilk eleman\u0131 series[0]'d\u0131r, bu nedenle dizi max_primes eleman\u0131n\u0131 tutuyorsa, dizinin son eleman\u0131 series[max_primes-1]'dir. E\u011Fer max_primes 100 ise, o zaman son eleman series[99]'dur. series[100]'e eri\u015Fmek ge\xe7ersizdir."}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"Sabit bildirimi: 101"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"Progressive initiallers: 65"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:'"for" d\xf6ng\xfcs\xfc: 113'})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"T\xfcm operat\xf6rlerin genel bir bak\u0131\u015F\u0131: 104"})}),"\n",(0,r.jsx)(e.h3,{id:"-fonksiyonlar",children:"\u2022 Fonksiyonlar"}),"\n",(0,r.jsx)(e.p,{children:"Daha b\xfcy\xfck programlar g\xf6revleri ve i\u015Flemleri fonksiyonlara ay\u0131r\u0131r. Fonksiyonlar\u0131 kullanmak, programlar\u0131n mod\xfclerli\u011Fini art\u0131r\u0131r ve iyi yaz\u0131lm\u0131\u015F fonksiyonlar, ba\u015Fka programlara ta\u015F\u0131nabilir. A\u015Fa\u011F\u0131daki \xf6rnek, Fibonacci serisinden say\u0131lar\u0131 hesaplamak i\xe7in bir fonksiyonu uygular."}),"\n",(0,r.jsx)(e.p,{children:'Fibonacci dizisi, Pisa\'l\u0131 Leonardo "Fibonacci" taraf\u0131ndan bulunan, 13. y\xfczy\u0131l \u0130talyan bir matematik\xe7isi taraf\u0131ndan bulunmu\u015Ftur - en b\xfcy\xfck ba\u015Far\u0131s\u0131 Hindu-Arap say\u0131lar\u0131n\u0131 Bat\u0131 d\xfcnyas\u0131 i\xe7in pop\xfcler hale getirmektir. Dizinin amac\u0131, (idealle\u015Ftirilmi\u015F) tav\u015Fanlar\u0131n bir populasyonunun b\xfcy\xfcmesini a\xe7\u0131klamakt\u0131;'}),"\n",(0,r.jsx)(e.p,{children:"ve dizi \u015Fu \u015Fekildedir: 1, 1, 2, 3, 5, 8, 13, 21, ...\n(her bir sonraki de\u011Fer, iki \xf6nceki de\u011Ferin toplam\u0131d\u0131r)."}),"\n",(0,r.jsx)(e.p,{children:"Listeleme: fib.p"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:'\n/*  Fibonacci  say\u0131lar\u0131n\u0131  iterasyonla  hesaplama  */\n\nmain()\n{\n    print "Bir de\u011Fer girin: "\n    new v = getvalue()\n    if (v > 0)\n        printf "Fibonacci say\u0131s\u0131 %d\'nin de\u011Feri %d\'dir\\n", v, fibonacci(v)\n    else\n        printf "%d Fibonacci say\u0131s\u0131 mevcut de\u011Fil\\n", v\n}\nfibonacci(n)\n{\n    assert n > 0\n    new a = 0, b = 1\n    for (new i = 2; i < n; i++)\n    {\n        new c = a + b\n        a = b\n        b = c\n    }\n    return a + b\n}\n\n'})}),"\n",(0,r.jsx)(e.p,{children:'Fibonacci fonksiyonundaki assert talimat\u0131 a\xe7\u0131k bir \u015Fekilde bahsedilmeyi hak ediyor; bu, "imkans\u0131z" veya ge\xe7ersiz ko\u015Fullara kar\u015F\u0131 koruma sa\u011Flar. Negatif Fibonacci say\u0131s\u0131 ge\xe7ersizdir ve assert ifadesi, bu durumun hi\xe7bir zaman meydana gelmemesi gereken bir programc\u0131 hatas\u0131 olarak i\u015Faretlenmesini sa\u011Flar. Assert ifadeleri yaln\u0131zca programc\u0131 hatalar\u0131n\u0131 i\u015Faret etmelidir, kullan\u0131c\u0131 giri\u015Fi hatalar\u0131 asla.'}),"\n",(0,r.jsx)(e.p,{children:'Kullan\u0131c\u0131 tan\u0131ml\u0131 bir fonksiyonun uygulanmas\u0131, main fonksiyonununkinden \xe7ok farkl\u0131 de\u011Fildir. Ancak fibonacci fonksiyonu, iki yeni konsepti g\xf6sterir: bir parametre arac\u0131l\u0131\u011F\u0131yla bir giri\u015F de\u011Feri al\u0131r ve bir de\u011Fer d\xf6nd\xfcr\xfcr ("sonu\xe7" vard\u0131r).'}),"\n",(0,r.jsx)(e.p,{children:'Fonksiyon parametreleri fonksiyon ba\u015Fl\u0131\u011F\u0131nda bildirilir; bu \xf6rnekteki tek parametre "n" dir. Fonksiyon i\xe7inde, bir parametre, de\u011Feri fonksiyona \xe7a\u011Fr\u0131da d\u0131\u015Far\u0131dan iletilen ancak bir yerel de\u011Fi\u015Fken gibi davranan bir de\u011Fi\u015Fkendir.'}),"\n",(0,r.jsx)(e.p,{children:"return ifadesi bir fonksiyonu sonland\u0131r\u0131r ve fonksiyonun sonucunu ayarlar. Bu, fonksiyonun tamamen sonunda g\xf6r\xfcnmek zorunda de\u011Fildir; erken \xe7\u0131k\u0131\u015Flar m\xfcsade edilir."}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:'"assert" ifadesi: 112'})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"Fonksiyonlar: \xf6zellikler ve \xf6zellikler: 70"})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:'Fibonacci \xf6rne\u011Finin main fonksiyonu, \xf6nceden tan\u0131mlanm\u0131\u015F "yerel" fonksiyonlar\u0131 \xe7a\u011F\u0131r\u0131r, getvalue ve printf, ayr\u0131ca kullan\u0131c\u0131 tan\u0131ml\u0131 fonksiyon fibonacci. Bir fonksiyonu \xe7a\u011F\u0131rma perspektifinden (fonksiyon main i\xe7inde), kullan\u0131c\u0131 tan\u0131ml\u0131 ve yerel fonksiyonlar aras\u0131nda fark yoktur.'}),"\n",(0,r.jsx)(e.p,{children:"Fibonacci say\u0131lar\u0131 dizisi, \xe7e\u015Fitli do\u011Fal olaylar\u0131 \u015Fa\u015F\u0131rt\u0131c\u0131 bir \u015Fekilde a\xe7\u0131klar. \xd6rne\u011Fin, ananastaki, \xe7am kozalar\u0131ndaki ve ay\xe7i\xe7e\u011Findeki iki veya \xfc\xe7 set spiralin \xe7o\u011Fu genellikle 5 ile 89 aras\u0131ndaki ard\u0131\u015F\u0131k Fibonacci say\u0131lar\u0131na sahiptir. Bitki dallanma desenlerinde do\u011Fal olarak meydana gelen say\u0131lar ger\xe7ekten Fibonacci say\u0131lar\u0131d\u0131r. Son olarak, Fibonacci dizisi bir geometrik dizi olmasa da, dizi ne kadar uzat\u0131l\u0131rsa, ard\u0131\u015F\u0131k terimler aras\u0131ndaki oran\u0131n Alt\u0131n Oran'a, 1.618'e ne kadar yakla\u015Ft\u0131\u011F\u0131 o kadar \xe7oktur. . . \u2217 ki sanat ve mimaride s\u0131k\xe7a g\xf6r\xfclen."}),"\n",(0,r.jsx)(e.h3,{id:"-referans-ile-\xe7a\u011F\u0131rma-ve-de\u011Fer-ile-\xe7a\u011F\u0131rma",children:"\u2022 Referans ile \xc7a\u011F\u0131rma ve De\u011Fer ile \xc7a\u011F\u0131rma"}),"\n",(0,r.jsx)(e.p,{children:"Tarihler, \xe7e\u015Fitli algoritmalar ve d\xf6n\xfc\u015F\xfcm rutinleri i\xe7in \xf6zellikle zengin bir kaynakt\u0131r, \xe7\xfcnk\xfc bir tarihin at\u0131fta bulundu\u011Fu takvimler, zaman i\xe7inde ve d\xfcnya \xe7ap\u0131nda \xe7e\u015Fitlilik g\xf6stermi\u015Ftir."}),"\n",(0,r.jsx)(e.p,{children:"\"Julian G\xfcn Say\u0131s\u0131\", Josephus Scaliger'e\u2020 atfedilir ve 4714 M.\xd6. 24 Kas\u0131m'dan bu yana ge\xe7en g\xfcn say\u0131s\u0131n\u0131 sayar (proleptik Gregoryen takvimi\u2021). Scaliger, bu tarihi, \xfc\xe7 iyi kurulmu\u015F d\xf6ng\xfcn\xfcn - eski Julian takviminin 28 y\u0131ll\u0131k G\xfcne\u015F D\xf6ng\xfcs\xfc, 19 y\u0131ll\u0131k Meton D\xf6ng\xfcs\xfc ve 15 y\u0131ll\u0131k Indiction D\xf6ng\xfcs\xfc (antik Roma'da vergilerin veya h\xfck\xfcmet gereksinimlerinin periyodik) - ayn\u0131 zamana gelmesini i\u015Faretledi\u011Fi ve uzak ge\xe7mi\u015Fte bu \xf6zel tarihten \xf6nce hi\xe7bir edebiyat\u0131n veya kaydedilmi\u015F tarihin bilinmedi\u011Fi tarih olarak se\xe7ti. Scaliger, bu konsepti tarih belgelerindeki tarihleri uzla\u015Ft\u0131rmak i\xe7in kulland\u0131,"}),"\n",(0,r.jsx)(e.p,{children:"daha sonraki astronomlar, iki olay aras\u0131ndaki aral\u0131klar\u0131 daha kolay hesaplamak i\xe7in bunu benimsedi."}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h6,{id:"-alt\u0131n-oran\u0131n-kesin-de\u011Feri-125--1dir-fibonacci-say\u0131lar\u0131-ile-alt\u0131n-oran-aras\u0131ndaki-ili\u015Fki-burada-a\xe7\u0131klanan-yinelemeli-y\xf6ntemin-yerine-herhangi-bir-s\u0131ra-numaras\u0131n\u0131n-do\u011Frudan-hesaplanmas\u0131na-olanak-tan\u0131r",children:"\u2217 Alt\u0131n Oran'\u0131n kesin de\u011Feri 1/2(\u221A5 + 1)'dir. Fibonacci say\u0131lar\u0131 ile Alt\u0131n Oran aras\u0131ndaki ili\u015Fki, burada a\xe7\u0131klanan yinelemeli y\xf6ntemin yerine herhangi bir s\u0131ra numaras\u0131n\u0131n \"do\u011Frudan\" hesaplanmas\u0131na olanak tan\u0131r."}),"\n",(0,r.jsx)(e.h6,{id:"-josephus-scaligerin-tam-olarak-ne-buldu\u011Fu-ve-ona-ne-veya-kim-ad\u0131n\u0131-koydu\u011Fu-konusunda-baz\u0131-tart\u0131\u015Fmalar-vard\u0131r",children:"\u2217 Josephus Scaliger'in tam olarak ne buldu\u011Fu ve ona ne veya kim ad\u0131n\u0131 koydu\u011Fu konusunda baz\u0131 tart\u0131\u015Fmalar vard\u0131r."}),"\n",(0,r.jsx)(e.h6,{id:"-gregoryen-takvimi-papa-xiii-gregory-taraf\u0131ndan-15-ekim-1582de-ba\u015Flamas\u0131-i\xe7in-emredildi-bu-da-daha-\xf6nceki-tarihlerin-ger\xe7ekte-gregoryen-takviminde-var-olmad\u0131\u011F\u0131-anlam\u0131na-gelir-gregoryen-takvimini-15-ekim-1582den-\xf6nceki-g\xfcnler-i\xe7in-geni\u015Fletirken-ona-proleptik-gregoryen-takvimi-diyoruz",children:"\u2217 Gregoryen takvimi, Papa XIII. Gregory taraf\u0131ndan 15 Ekim 1582'de ba\u015Flamas\u0131 i\xe7in emredildi, bu da daha \xf6nceki tarihlerin ger\xe7ekte Gregoryen takviminde var olmad\u0131\u011F\u0131 anlam\u0131na gelir. Gregoryen takvimini 15 Ekim 1582'den \xf6nceki g\xfcnler i\xe7in geni\u015Fletirken, ona proleptik Gregoryen takvimi diyoruz."}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"Yerel fonksiyon aray\xfcz\xfc: 85"})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:'Julian G\xfcn numaralar\u0131 (bazen birim "jd" ile g\xf6sterilir) Julian Tarihlerinden (ayn\u0131 y\u0131l\u0131n ba\u015Flang\u0131c\u0131ndan itibaren ge\xe7en g\xfcn say\u0131s\u0131) veya J\xfcl tarihini (J\xfcl Sezar taraf\u0131ndan tan\u0131t\u0131lan takvim) ile kar\u0131\u015Ft\u0131r\u0131lmamal\u0131d\u0131r.'}),"\n",(0,r.jsx)(e.p,{children:"A\u015Fa\u011F\u0131da, (proleptik) Gregoryen takvimindeki bir tarihten Julian G\xfcn numaras\u0131n\u0131 ve tersini hesaplayan bir program bulunmaktad\u0131r. Unutmay\u0131n ki proleptik Gregoryen takviminde ilk y\u0131l 1 M.\xd6. (Anno Domini) ve bundan \xf6nceki y\u0131l 1 M.\xd6. (Milattan \xd6nce) 'dir: s\u0131f\u0131r y\u0131l\u0131 yoktur! Program, BC y\u0131llar\u0131 i\xe7in negatif y\u0131l de\u011Ferleri ve AD y\u0131llar\u0131 i\xe7in pozitif (s\u0131f\u0131r olmayan) de\u011Ferleri kullan\u0131r."}),"\n",(0,r.jsx)(e.p,{children:"Listeleme: julian.p"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:'\n/* Bir tarihten Julian G\xfcn numaras\u0131n\u0131 ve tersini hesaplar */\n\nmain()\n{\n    new d, m, y, jdn\n    print "Bir tarih girin (gg-aa-yyyy): "\n\n    d = getvalue(_, \u2019-\u2019, \u2019/\u2019)\n    m = getvalue(_, \u2019-\u2019, \u2019/\u2019)\n    y = getvalue()\n    jdn = DateToJulian(d, m, y)\n\n    printf("Tarih %d/%d/%d = %d JD\\n", d, m, y, jdn)\n    print "Bir Julian G\xfcn Numaras\u0131 girin: "\n\n    jdn = getvalue()\n    JulianToDate jdn, d, m, y\n\n    printf "%d JD = %d/%d/%d\\n", jdn, d, m, y\n}\n\nDateToJulian(day, month, year)\n{\n    /* \u0130lk y\u0131l 1\'dir. 0. Y\u0131l mevcut de\u011Fildir: Bu 1 M.\xd6. (veya -1) \'dir */\n\n    assert year != 0\n    if (year < 0)\n        year++\n\n    /* Ocak ve \u015Eubat\'\u0131 \xf6nceki y\u0131l\u0131n sonuna ta\u015F\u0131 */\n\n    if (month <= 2)\n        year--, month += 12\n    new jdn = 365 * year + year / 4 - year / 100 + year / 400\n        + (153 * month - 457) / 5\n        + day + 1721119\n\n    return jdn\n}\n\nJulianToDate(jdn, &day, &month, &year)\n{\n    jdn -= 1721119\n\n    /* Yakla\u015F\u0131k y\u0131l\u0131 belirle, sonra d\xf6ng\xfc i\xe7inde ayarla */\n\n    year = (400 * jdn) / 146097\n    while (365 * year + year / 4 - year / 100 + year / 400 < jdn)\n        year++\n    year--\n    /* Ay\u0131 belirle */\n\n    jdn -= 365 * year + year / 4 - year / 100 + year / 400\n    month = (5 * jdn + 457) / 153\n\n    /* G\xfcn\xfc belirle */\n\n    day = jdn - (153 * month - 457) / 5\n\n    /* Ocak ve \u015Eubat\'\u0131 y\u0131l\u0131n ba\u015F\u0131na ta\u015F\u0131 */\n\n    if (month > 12)\n        month -= 12, year++\n\n    /* Negatif y\u0131llar\u0131 ayarla (0 y\u0131l\u0131 1 M.\xd6. veya -1 olmal\u0131) */\n\n    if (year <= 0)\n        year--\n}\n\n'})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:"Main fonksiyonu, g\xfcn, ay ve y\u0131l\u0131 tutacak de\u011Fi\u015Fkenleri ve hesaplanm\u0131\u015F Julian G\xfcn numaras\u0131n\u0131 olu\u015Fturarak ba\u015Flar. Ard\u0131ndan bir tarih okur - \xfc\xe7 kez getvalue \xe7a\u011Fr\u0131s\u0131 - ve DateToJulian fonksiyonunu \xe7a\u011F\u0131rarak g\xfcn numaras\u0131n\u0131 hesaplar. Sonucu hesaplad\u0131ktan sonra main, girdi\u011Finiz tarihi ve bu tarihe kar\u015F\u0131l\u0131k gelen Julian G\xfcn numaras\u0131n\u0131 yazd\u0131r\u0131r. \u015Eimdi, DateToJulian fonksiyonuna odaklanal\u0131m. . ."}),"\n",(0,r.jsx)(e.p,{children:"DateToJulian fonksiyonunun ba\u015F\u0131nda, y\u0131l de\u011Ferini negatifse artt\u0131r\u0131r; bunu, proleptik Gregoryen takviminde \"s\u0131f\u0131r\" y\u0131l\u0131n\u0131n olmamas\u0131 ile ba\u015Fa \xe7\u0131kmak i\xe7in yapar. Ba\u015Fka bir deyi\u015Fle, DateToJulian fonksiyonu, y\u0131l ve daha sonra month'u de\u011Fi\u015Ftirmek \xfczere modifiye eder. Fonksiyon i\xe7inde, bir arg\xfcman, fonksiyona \xe7a\u011Fr\u0131da bulunan d\u0131\u015Far\u0131dan iletilen ancak bir yerel de\u011Fi\u015Fken gibi davranan bir de\u011Fi\u015Fkendir. Bu de\u011Fi\u015Fiklikler, ancak fonksiyon DateToJulian i\xe7inde yerel kal\u0131r. DateToJulian fonksiyonu, d\u0131\u015Far\u0131dan gelen d, m ve y de\u011Ferlerini DateToJulian fonksiyonuna \xe7a\u011Fr\u0131da bulunan de\u011Fi\u015Fkenlere e\u015Fler. DateToJulian, year ve month'u de\u011Fi\u015Ftirir, ancak main fonksiyonundaki y ve m'yi de\u011Fi\u015Ftirmez; sadece y ve m'nin yerel kopyalar\u0131n\u0131 de\u011Fi\u015Ftirir. Bu kavram, \"de\u011Ferle \xe7a\u011F\u0131rma\" olarak adland\u0131r\u0131l\u0131r."}),"\n",(0,r.jsx)(e.p,{children:"\xd6rnek, a\xe7\u0131klamay\u0131 daha kolay hale getirmek i\xe7in main'in de\u011Fi\u015Fkenlerini day, month ve year olarak yeniden adland\u0131rarak ayn\u0131 isimleri kullanarak farkl\u0131 isimler kullanarak yapar. Ancak bu, day, month ve year'\u0131n iki\u015Fer tane, ge\xe7erli bir pawn'da tamamen ge\xe7erli olan iki\u015Fer tane ve 2 tane y\u0131la sahip iki\u015Fer tane de\u011Fi\u015Fken oldu\u011Fu anlam\u0131na gelir."}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:'"De\u011Ferle \xc7a\u011F\u0131rma" ile "Referans ile \xc7a\u011F\u0131rma": 71'})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:"DateToJulian fonksiyonunun geri kalan\u0131, pawn diline g\xf6re ilgin\xe7 olmayan aritmetiktir."}),"\n",(0,r.jsx)(e.p,{children:"JulianToDate fonksiyonuna geri d\xf6nersek, bu fonksiyonun bir giri\u015F de\u011Feri (Julian G\xfcn numaras\u0131) oldu\u011Funu ve \xfc\xe7 \xe7\u0131k\u0131\u015F de\u011Ferini (g\xfcn, ay ve y\u0131l) hesaplamas\u0131 gerekti\u011Fini g\xf6r\xfcr\xfcz. Ne yaz\u0131k ki bir fonksiyonun yaln\u0131zca tek bir return de\u011Feri olabilir - yani bir fonksiyondaki return ifadesi yaln\u0131zca tek bir ifade i\xe7erebilir. Bu sorunu \xe7\xf6zmek i\xe7in JulianToDate, \xf6zellikle birka\xe7 de\u011Fi\u015Fkenini \xe7a\u011Fr\u0131c\u0131n\u0131n de\u011Fi\u015Fkenlerine geri kopyalanmak \xfczere i\u015Faretledi\u011Fini \xf6zel olarak talep eder. Daha sonra main'deki JulianToDate'un sonu\xe7lar\u0131n\u0131 tutmas\u0131 gereken de\u011Fi\u015Fkenler, JulianToDate'a arg\xfcman olarak ge\xe7irilir."}),"\n",(0,r.jsx)(e.p,{children:'JulianToDate fonksiyonu, geri kopyalanacak de\u011Fi\u015Fkenlere "&" simgesi ekleyerek bu de\u011Fi\u015Fkenleri "\xe7a\u011Fr\u0131c\u0131ya geri kopyalanacak" olarak i\u015Faretler. "&" i\xe7eren arg\xfcmanlar geri kopyalan\u0131r, "&" i\xe7ermeyen arg\xfcmanlar geri kopyalanmaz. "Ger\xe7ekten geri kopyalama" ifadesi do\u011Fru terim de\u011Fil. "&" ile etiketlenmi\u015F bir arg\xfcman, fonksiyonun orijinal de\u011Fi\u015Fkeni do\u011Frudan de\u011Fi\u015Ftirmesine izin veren \xf6zel bir \u015Fekilde fonksiyona ge\xe7irilir. Bu, "referansla \xe7a\u011F\u0131rma" olarak adland\u0131r\u0131l\u0131r ve bu t\xfcr bir arg\xfcman "referans arg\xfcman\u0131" olarak adland\u0131r\u0131l\u0131r.'}),"\n",(0,r.jsx)(e.p,{children:'De\u011Ferle \xe7a\u011F\u0131rma ve referansla \xe7a\u011F\u0131rma kullan\u0131m\u0131n\u0131 \xf6zetlemek gerekirse: Bir fonksiyonun tek bir \xe7\u0131k\u0131\u015F de\u011Feri varsa, genellikle bir return ifadesi kullan\u0131rs\u0131n\u0131z; bir fonksiyonun daha fazla \xe7\u0131k\u0131\u015F de\u011Feri varsa referans arg\xfcmanlar\u0131 kullan\u0131rs\u0131n\u0131z. Ayn\u0131 fonksiyon i\xe7inde ikisini birle\u015Ftirebilirsiniz, \xf6rne\u011Fin "normal" \xe7\u0131k\u0131\u015F\u0131n\u0131 referans bir arg\xfcman arac\u0131l\u0131\u011F\u0131yla ve return de\u011Feri i\xe7inde hata koduyla d\xf6nen bir fonksiyonda.'}),"\n",(0,r.jsx)(e.p,{children:"Ayr\u0131ca, bir\xe7ok masa\xfcst\xfc uygulamas\u0131, iki tarih aras\u0131ndaki g\xfcn say\u0131s\u0131n\u0131 veya \u015Fu andan 90 g\xfcn sonra olan tarihi hesaplamak i\xe7in Julian G\xfcn numaralar\u0131na (veya onun \xe7e\u015Fitlerine) d\xf6n\xfc\u015F\xfcmleri kullan\u0131r."}),"\n",(0,r.jsx)(e.h3,{id:"-rasyonel-say\u0131lar",children:"\u2022 Rasyonel Say\u0131lar"}),"\n",(0,r.jsx)(e.p,{children:'Bu zamana kadar yap\u0131lan t\xfcm hesaplamalar yaln\u0131zca tam say\u0131larla ilgiliydi - yani tamsay\u0131 de\u011Ferleri. Pawn, kesirli de\u011Ferleri i\xe7erebilen say\u0131lar\u0131 destekler ve bunlara "rasyonel say\u0131lar" denir. Ancak, bu deste\u011Fin etkin olup olmad\u0131\u011F\u0131, bar\u0131nd\u0131ran uygulamaya ba\u011Fl\u0131d\u0131r.'}),"\n",(0,r.jsx)(e.p,{children:"Rasyonel say\u0131lar, ya kayan noktal\u0131 ya da sabit noktal\u0131 say\u0131lar olarak uygulanabilir. Kayan noktal\u0131 aritmetik genel ama\xe7l\u0131 ve bilimsel hesaplamalarda yayg\u0131n olarak kullan\u0131l\u0131rken, sabit noktal\u0131 aritmetik, finansal i\u015Flemler ve yuvarlama hatalar\u0131n\u0131n (en az\u0131ndan \xf6ng\xf6r\xfclebilir olmas\u0131 gereken durumlarda) ortaya \xe7\u0131kmamas\u0131 gereken uygulamalar i\xe7in daha uygundur. Pawn ara\xe7 tak\u0131m\u0131 hem kayan noktal\u0131 hem de sabit noktal\u0131 bir mod\xfcl i\xe7erir ve bu mod\xfcllerin belgelerinde ayr\u0131nt\u0131lar (ve takaslar) bulunmaktad\u0131r. Ancak \u015Fu an i\xe7in, bir uygulaman\u0131n kayan noktal\u0131y\u0131, sabit noktal\u0131y\u0131, her ikisini veya hi\xe7birini uygulay\u0131p uygulamad\u0131\u011F\u0131 \xf6nemli bir noktad\u0131r.\u2217 A\u015Fa\u011F\u0131daki program, en az\u0131ndan rasyonel say\u0131 deste\u011Finin mevcut olmas\u0131n\u0131 bekler; e\u011Fer bar\u0131nd\u0131ran uygulama hi\xe7 rasyonel say\u0131y\u0131 desteklemiyorsa \xe7al\u0131\u015Fma hatas\u0131 verecektir."}),"\n",(0,r.jsx)(e.p,{children:"Listeleme: c2f.p"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:'\nmain()\n{\n    new  Rational:  Celsius\n    new  Rational:  Fahrenheit\n    print  "Celsius\\t  Fahrenheit\\n"\n    for  (Celsius  =  5;  Celsius  <=  25;  Celsius++)\n    {\n        Fahrenheit  =  (Celsius  *  1.8)  +  32\n        printf  "%r  \\t  %r\\n",  Celsius,  Fahrenheit\n    }\n}\n\n'})}),"\n",(0,r.jsx)(e.p,{children:'Bu \xf6rnek program, Celsius derecelerini Fahrenheit derecelerine d\xf6n\xfc\u015Ft\xfcr\xfcr. Program\u0131n ilk direktifi, bir include dosyas\u0131ndan rasyonel say\u0131 deste\u011Fini i\xe7eren tan\u0131mlamalar\u0131 i\xe7e aktarmakt\u0131r. "rational" dosyas\u0131, bulunan destek t\xfcr\xfcne ba\u011Fl\u0131 olarak hem kayan noktal\u0131 hem de sabit noktal\u0131 say\u0131lar\u0131 i\xe7erebilir.'}),"\n",(0,r.jsx)(e.p,{children:'Celsius ve Fahrenheit de\u011Fi\u015Fkenleri, yeni kelimesinden ve de\u011Fi\u015Fken ad\u0131ndan \xf6nceki "Rational:" etiketi ile bildirilmi\u015Ftir. Bir etiket ad\u0131, de\u011Fi\u015Fkenin amac\u0131n\u0131, izin verilen kullan\u0131m\u0131n\u0131 ve \xf6zellikle rasyonel say\u0131lar i\xe7in haf\u0131za d\xfczenini belirtir.'}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h6,{id:"-asl\u0131nda-bu-zaten-bu-k\u0131lavuzdaki-\xf6rneklerde-kullan\u0131lan-t\xfcm-yerel-i\u015Flevler-i\xe7in-ge\xe7erlidir",children:"\u2217 Asl\u0131nda, bu zaten bu k\u0131lavuzdaki \xf6rneklerde kullan\u0131lan t\xfcm yerel i\u015Flevler i\xe7in ge\xe7erlidir."}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"Etiket adlar\u0131: 68"})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:"Rational: etiketi, pawn ayr\u0131\u015Ft\u0131r\u0131c\u0131s\u0131na Celsius ve Fahrenheit de\u011Fi\u015Fkenlerinin tam say\u0131lar yerine kesirli de\u011Ferler i\xe7erdi\u011Fini s\xf6yler."}),"\n",(0,r.jsx)(e.p,{children:"Celsius derecesinden Fahrenheit derecesine ula\u015Fmak i\xe7in \u015Fu denklem kullan\u0131l\u0131r:"}),"\n",(0,r.jsx)(e.p,{children:"\xb0F = \u2079\u2044\u2085 + 32 \xb0C"}),"\n",(0,r.jsx)(e.p,{children:"Program, 9/\u2085 k\u0131sm\u0131 i\xe7in 1.8 de\u011Ferini kullan\u0131r. Rasyonel say\u0131 deste\u011Fi etkinle\u015Ftirildi\u011Finde, pawn ondal\u0131k noktan\u0131n ard\u0131ndaki kesirli de\u011Ferleri destekler."}),"\n",(0,r.jsx)(e.p,{children:'\xd6nceki programlardan tek farkl\u0131 de\u011Fi\u015Fiklik, printf fonksiyonu i\xe7in format dizesinin " %d" yerine " %r" kullan\u0131lmas\u0131d\u0131r. %r yer tutucu, konumda bir rasyonel say\u0131 yazd\u0131r\u0131rken; %d yaln\u0131zca tam say\u0131lar i\xe7indir.'}),"\n",(0,r.jsx)(e.p,{children:'\xd6rnek program\u0131 ta\u015F\u0131nabilir hale getirmek i\xe7in "float" veya "fixed" yerine "rational" dosyas\u0131n\u0131 kullanmay\u0131 tercih ettim. E\u011Fer bar\u0131nd\u0131ran uygulaman\u0131n kayan nokta aritmeti\u011Fini destekledi\u011Fini biliyorsan\u0131z, "float" dosyas\u0131ndan tan\u0131mlamalar\u0131 i\xe7e aktarmak ve Rational yerine Float: etiketini kullanmak daha uygun olabilir. Bu durumda, printf \xe7a\u011Fr\u0131s\u0131ndaki %r\'yi %f ile de\u011Fi\u015Ftirmelisiniz. Sabit nokta ve kayan nokta deste\u011Fi hakk\u0131nda ayr\u0131nt\u0131l\u0131 bilgiler i\xe7in l\xfctfen ayr\u0131ca bulunan "Sabit Nokta Destek K\xfct\xfcphanesi" ve "Kayan Nokta Destek K\xfct\xfcphanesi" uygulama notlar\u0131na bak\u0131n\u0131z.'}),"\n",(0,r.jsx)(e.h3,{id:"-karakter-dizileri-strings",children:"\u2022 Karakter Dizileri (Strings)"}),"\n",(0,r.jsx)(e.p,{children:'Pawn\'un i\xe7sel bir "string" t\xfcr\xfc yoktur; karakter dizileri, dizilerde depolan\u0131r ve dizinin son ge\xe7erli karakterinin arkas\u0131ndaki eleman\u0131n s\u0131f\u0131r oldu\u011Fu bir d\xfczenle saklan\u0131r. Bu nedenle, string \xfczerinde \xe7al\u0131\u015Fmak, dizilerle \xe7al\u0131\u015Fmakla e\u015Fde\u011Ferdir.'}),"\n",(0,r.jsx)(e.p,{children:'En basit \u015Fifreleme \u015Femalar\u0131ndan biri "ROT13" olarak adland\u0131r\u0131l\u0131r - asl\u0131nda algoritma, kriptografik a\xe7\u0131dan olduk\xe7a "zay\u0131f"t\u0131r. Genellikle halka a\xe7\u0131k elektronik forumlarda (BBS\'ler, Usenet) metinleri gizlemek i\xe7in kullan\u0131l\u0131r, \xf6rne\u011Fin bulmaca veya bilmecelerin \xe7\xf6z\xfcmlerini. ROT13, alfabe \xfczerinde 13 karakterlik bir d\xf6n\xfc\u015F yapar. Bu, simetrik bir i\u015Flemdir: ayn\u0131 metin \xfczerinde iki kez uygulan\u0131rsa, orijinal metni g\xf6sterir.'}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:"Listeleme: rot13.p"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"\n/* Basit \u015Fifreleme, ROT13 kullan\u0131larak */\n\nmain()\n{\n    printf \"L\xfctfen kar\u0131\u015Ft\u0131r\u0131lacak dizeyi yaz\u0131n: \"\n\n    new str[100]\n    getstring str, sizeof str\n    rot13 str\n\n    printf \"Kar\u0131\u015Ft\u0131r\u0131ld\u0131ktan sonra\n\n dize: \\\"%s\\\"\\n\", str\n}\n\nrot13(string[])\n{\n    for (new index = 0; string[index]; index++)\n    if ('a' <= string[index] <= 'z')\n        string[index] = (string[index] - 'a' + 13) % 26 + 'a'\n    else if ('A' <= string[index] <= 'Z')\n        string[index] = (string[index] - 'A' + 13) % 26 + 'A'\n}\n\n"})}),"\n",(0,r.jsx)(e.p,{children:'rot13\'\xfcn fonksiyon ba\u015Fl\u0131\u011F\u0131nda, "string" parametresi bir dizi olarak bildirilir, ancak dizinin boyutu belirtilmez - burada k\xf6\u015Feli parantezler aras\u0131nda bir de\u011Fer yoktur. Bir dizi i\xe7in bir boyut belirtti\u011Finizde, fonksiyon \xe7a\u011Fr\u0131s\u0131ndaki ger\xe7ek parametrenin boyutuyla e\u015Fle\u015Fmelidir. Dizi boyutu belirtmenin fonksiyon ba\u015Fl\u0131\u011F\u0131nda atlanmas\u0131, bu k\u0131s\u0131tlamay\u0131 kald\u0131r\u0131r ve fonksiyonun herhangi bir boyuttaki dizilerle \xe7a\u011Fr\u0131lmas\u0131na izin verir. Ard\u0131ndan dizinin (maksimum) boyutunu belirlemenin ba\u015Fka bir yolunun olmas\u0131 gerekir. Bir dize parametresi i\xe7in, dizinin s\u0131f\u0131r terminat\xf6r\xfcn\xfc basit\xe7e arayabilirsiniz.'}),"\n",(0,r.jsx)(e.p,{children:'Diziyi ge\xe7en for d\xf6ng\xfcs\xfc, dize i\u015Fleme fonksiyonlar\u0131 i\xe7in tipiktir. D\xf6ng\xfc ko\u015Fulu "string[index]" olarak belirlenmi\u015Ftir. Pawn\'da do\u011Fru/yanl\u0131\u015F ko\u015Fullar\u0131 i\xe7in kural, herhangi bir de\u011Ferin s\u0131f\u0131r hari\xe7 "true" oldu\u011Fudur. Yani, string[index] h\xfccresi s\u0131f\u0131r oldu\u011Funda, bu "false" olur ve d\xf6ng\xfc sona erer.'}),"\n",(0,r.jsx)(e.p,{children:"ROT13 algoritmas\u0131 yaln\u0131zca harfleri d\xf6nd\xfcr\xfcr; rakamlar, noktalama i\u015Faretleri ve \xf6zel karakterler de\u011Fi\u015Ftirilmez. Ayr\u0131ca, b\xfcy\xfck ve k\xfc\xe7\xfck harfler ayr\u0131 ayr\u0131 ele al\u0131nmal\u0131d\u0131r. For d\xf6ng\xfcs\xfc i\xe7indeki iki if ifadesi, ilgilenilen karakterleri filtreler. \u0130kinci if'in, birinci if'in \"else\" \u015Fart\u0131na zincirlendi\u011Fi \u015Fekilde kullan\u0131lmas\u0131, birden fazla \xf6rt\xfc\u015Fmeyen ko\u015Fulu test etmenin tipik bir y\xf6ntemidir."}),"\n",(0,r.jsx)(e.p,{children:'Bu b\xf6l\xfcmde daha \xf6nce, "de\u011Ferle \xe7a\u011Fr\u0131" ve "referansla \xe7a\u011Fr\u0131" kavramlar\u0131 tart\u0131\u015F\u0131ld\u0131. Dizilerle \xe7al\u0131\u015F\u0131rken veya genel olarak dizilerle \xe7al\u0131\u015F\u0131rken, pawn her zaman dizileri referansla ge\xe7er. Bunun nedeni, belle\u011Fi korumak ve performans\u0131 art\u0131rmakt\u0131r - diziler b\xfcy\xfck veri yap\u0131lar\u0131 olabilir ve onlar\u0131 de\u011Ferle ge\xe7mek, bu veri yap\u0131s\u0131n\u0131n bir kopyas\u0131n\u0131n yap\u0131lmas\u0131n\u0131 gerektirir, bu da hem bellek hem de zaman al\u0131r.'}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:'Dizi \xfczerinde de\u011Fi\u015Fiklik yapmayan bir dizi alan bir i\u015Flev, parametreyi "const" olarak i\u015Faretleyebilir; bkz. sayfa 72'})}),"\n",(0,r.jsx)(e.p,{children:'Bu kural nedeniyle, rot13 i\u015Flevi, fonksiyon parametresini (\xf6rnekte "string" olarak adland\u0131r\u0131lan\u0131) referans arg\xfcman\u0131 olarak bildirmeye gerek duymadan, i\u015Flev parametresini de\u011Fi\u015Ftirebilir.'}),"\n",(0,r.jsxs)(e.p,{children:["\u0130ki if ifadesindeki ko\u015Fullar da ilgi \xe7ekici bir noktad\u0131r. \xd6rne\u011Fin, birinci if'in ko\u015Fulu \" ",(0,r.jsx)(e.code,{children:"'a' <= string[index] <= 'z'"}),' " ifadesini ta\u015F\u0131r, bu da demektir ki, ifade sadece ',(0,r.jsx)(e.code,{children:"'a' <= string[index]"})," ve ",(0,r.jsx)(e.code,{children:"string[index] <= 'z'"}),' her ikisi de do\u011Fruysa "true" olur. Birle\u015Fik ifadede, ili\u015Fkisel operat\xf6rler "zincirlenmi\u015F" olarak adland\u0131r\u0131l\u0131r, \xe7\xfcnk\xfc birden fazla kar\u015F\u0131la\u015Ft\u0131rmay\u0131 tek bir ko\u015Fulda zincirlerler.']}),"\n",(0,r.jsx)(e.p,{children:'Son olarak, main fonksiyonundaki son printf\'in nas\u0131l \xe7al\u0131\u015Ft\u0131\u011F\u0131na dikkat edin. Normalde bir \xe7ift t\u0131rnak, kelimeyi bitirir; ancak " " " ka\xe7\u0131\u015F dizisi, bir \xe7ift t\u0131rna\u011F\u0131 dizeye ekler.'}),"\n",(0,r.jsx)(e.p,{children:"Dize ve dizilerle ilgili olarak, a\u015Fa\u011F\u0131da bir dizeyi ayr\u0131 kelimelere b\xf6len ve sayan basit bir program bulunmaktad\u0131r. Bu, pawn dilinin birka\xe7 yeni \xf6zelli\u011Fini g\xf6steren basit bir programd\u0131r."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:'\n/*  kelime sayac\u0131: kullan\u0131c\u0131n\u0131n girdi\u011Fi bir dizideki kelimeleri say */\n\nmain()\n{\n    printf("L\xfctfen bir dize yaz\u0131n: ");\n    new string[100];\n    getstring(string, sizeof string);\n\n    new count = 0;\n\n    new word[20];\n    new index;\n    for (;;)\n    {\n        word = strtok(string, index);\n        if (strlen(word) == 0)\n            break;\n        count++;\n        printf("Kelime %d: \u2019%s\u2019\\n", count, word);\n    }\n    printf("\\nKelime say\u0131s\u0131: %d\\n", count);\n}\n\nstrtok(const string[], &index)\n{\n    new length = strlen(string);\n\n    /* ba\u015Ftaki bo\u015Fluklar\u0131 atla */\n    while (index < length && string[index] <= \' \')\n        index++;\n    /* kelimeyi harf harf sakla */\n    new offset = index; /* belirteci sakla */\n    new result[20];     /* kelimeyi saklamak i\xe7in dize */\n    while (index < length && string[index] > \' \' && index - offset < sizeof result - 1)\n    {\n        result[index - offset] = string[index];\n        index++;\n    }\n    result[index - offset] = 0; /* diziyi s\u0131f\u0131r ile sonland\u0131r */\n    return result;\n}\n\n'})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"\u0130li\u015Fkisel operat\xf6rler: 107"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"Ka\xe7\u0131\u015F dizisi: 99"})}),"\n",(0,r.jsx)(e.p,{children:'main fonksiyonu \xf6nce bir mesaj\u0131 g\xf6r\xfcnt\xfcler ve kullan\u0131c\u0131n\u0131n yazmas\u0131 gereken bir dizeyi al\u0131r. Daha sonra bir d\xf6ng\xfcye girer: "for (;;)" yazmak, ba\u015Flatma, art\u0131rma ve test olmadan bir d\xf6ng\xfc olu\u015Fturur - bu, "while (true)" ile e\u015Fde\u011Ferdir. Ancak, pawn analiz\xf6r\xfc "while (true)" yazarsan\u0131z bir uyar\u0131 verecektir ("gereksiz test ifadesi; her zaman do\u011Fru"), "for (;;)" ise uyar\u0131 vermeden ge\xe7er.'}),"\n",(0,r.jsx)(e.p,{children:"Sonsuz bir d\xf6ng\xfc i\xe7in tipik bir kullan\u0131m, ortada bir teste ihtiya\xe7 duyulan bir d\xf6ng\xfcd\xfcr - bir nevi while ve do... while d\xf6ng\xfcs\xfc aras\u0131nda bir melez. pawn, do\u011Frudan ortada bir testle d\xf6ng\xfcleri desteklemez, ancak ko\u015Fullu bir break ile sonsuz bir d\xf6ng\xfc kodlayarak bir tane taklit edebilirsiniz. Bu \xf6rnek programda d\xf6ng\xfc:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"diziden bir kelime al\u0131r - testten \xf6nce kod;"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"yeni bir kelimenin kullan\u0131labilir olup olmad\u0131\u011F\u0131n\u0131 test eder ve de\u011Filse d\xf6ng\xfcden \xe7\u0131kar - ortada test;"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"kelimeyi ve s\u0131ra numaras\u0131n\u0131 yazd\u0131r\u0131r - testten sonraki kod."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:'"word = strtok(string, index)" sat\u0131r\u0131ndan da anla\u015F\u0131laca\u011F\u0131 gibi (ve word de\u011Fi\u015Fkeninin bildiriminden), pawn dizi atama ve dizileri d\xf6nd\xfcren fonksiyonlar\u0131 destekler. pawn analiz\xf6r\xfc, strtok\'\u0131n d\xf6nd\xfcrd\xfc\u011F\xfc dizinin, atand\u0131\u011F\u0131 de\u011Fi\u015Fkenle ayn\u0131 boyuta ve boyutlara sahip oldu\u011Funu do\u011Frular.'}),"\n",(0,r.jsx)(e.p,{children:"strlen fonksiyonu \xf6nceden tan\u0131mlanm\u0131\u015F (native) bir fonksiyon olsa da, strtok \xf6yle de\u011Fildir: kendimiz taraf\u0131ndan uygulanmal\u0131d\u0131r. Strtok fonksiyonu, ad\u0131n\u0131 ald\u0131\u011F\u0131 C/C++ dilindeki fonksiyondan esinlenmi\u015Ftir, ancak kaynak dizesini de\u011Fi\u015Ftirmez. Bunun yerine, kaynak dizesinden kelime kelime karakterleri kopyalar ve ard\u0131ndan bunu geri d\xf6nd\xfcr\xfcr."}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h3,{id:"-diziler-ve-numaraland\u0131rmalar-yap\u0131land\u0131r\u0131lm\u0131\u015F-veri",children:"\u2022 Diziler ve Numaraland\u0131rmalar (Yap\u0131land\u0131r\u0131lm\u0131\u015F Veri)"}),"\n",(0,r.jsx)(e.p,{children:'Tip belirtilmemi\u015F bir dilde, ayn\u0131 dizideki baz\u0131 \xf6\u011Felere di\u011Fer \xf6\u011Felerden farkl\u0131 bir ama\xe7 atayabiliriz. pawn, "yap\u0131lar" veya "kay\u0131tlar" ile di\u011Fer dillerin uygulad\u0131\u011F\u0131 baz\u0131 i\u015Flevselli\u011Fi taklit etmesine izin veren bir uzant\u0131yla numaraland\u0131r\u0131lm\u0131\u015F sabitleri destekler.'}),"\n",(0,r.jsx)(e.p,{children:"Numaraland\u0131rmalar\u0131 ve dizileri g\xf6steren \xf6rnek, \xf6nceki pawn programlar\u0131ndan daha uzundur ve ayr\u0131ca k\xfcresel de\u011Fi\u015Fkenler ve adland\u0131r\u0131lm\u0131\u015F parametreler gibi di\u011Fer baz\u0131 \xf6zellikleri de g\xf6sterir.\nListeleme: queue.p"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:'\n/* \xd6ncelikli s\u0131ra (basit metin dizileri i\xe7in) */\n\nenum message\n{\n    text[40],\n    priority\n}\n\nmain()\n{\n    new msg[message]\n\n    /* Birka\xe7 \xf6\u011Fe ekleyin (konsol giri\u015Finden okunan) */\n\n    printf "L\xfctfen birka\xe7 mesaj ve \xf6nceliklerini ekleyin; bo\u015F bir dizeyle sonland\u0131r\u0131n\\n"\n    for (;;)\n    {\n        printf "Mesaj: "\n        getstring .string = msg[text], .maxlength = 40, .pack = true\n        if (strlen(msg[text]) == 0)\n            break\n        printf "\xd6ncelik: "\n        msg[priority] = getvalue()\n        if (!insert(msg))\n        {\n            printf "S\u0131ra dolu, daha fazla \xf6\u011Fe eklenemez\\n"\n            break\n        }\n    }\n    /* \u015Eimdi s\u0131radan \xe7\u0131kar\u0131lan mesajlar\u0131 yazd\u0131r\u0131n */\n    printf "\\nS\u0131ran\u0131n \u0130\xe7eri\u011Fi:\\n"\n    while (extract(msg))\n        printf "[%d] %s\\n", msg[priority], msg[text]\n}\n\nconst queuesize = 10\nnew queue[queuesize][message]\nnew queueitems = 0\ninsert(const item[message])\n{\n    /* S\u0131ran\u0131n bir daha mesaj al\u0131p alamayaca\u011F\u0131n\u0131 kontrol et */\n    if (queueitems == queuesize)\n        return false /* s\u0131ra dolu */\n\n    /* Eklemek i\xe7in konumu bul */\n    new pos = queueitems /* en altta ba\u015Fla */\n    while (pos > 0 && item[priority] > queue[pos-1][priority])\n        --pos /* daha y\xfcksek \xf6ncelik: bir pozisyon yukar\u0131 ta\u015F\u0131 */\n\n    /* Ekleme noktas\u0131nda \xf6\u011Fe i\xe7in yer yap\u0131n */\n    for (new i = queueitems; i > pos; --i)\n        queue[i] = queue[i-1]\n\n    /* Mesaj\u0131 do\u011Fru yere ekleyin */\n    queue[pos] = item\n    queueitems++\n\n    return true\n}\n\nextract(item[message])\n{\n    /* S\u0131ran\u0131n bir daha mesaj i\xe7erip i\xe7ermedi\u011Fini kontrol et */\n    if (queueitems == 0)\n        return false /* s\u0131ra bo\u015F */\n\n    /* En \xfcstteki \xf6\u011Feyi kopyala */\n    item = queue[0]\n    --queueitems\n\n    /* S\u0131ray\u0131 bir pozisyon yukar\u0131 ta\u015F\u0131 */\n    for (new i = 0; i < queueitems; ++i)\n        queue[i] = queue[i+1]\n\n    return true\n}\n\n'})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:'"for" d\xf6ng\xfcs\xfc: 113'})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:'"enum" ifadesi: 101'})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:'"char" operat\xf6r\xfc: 110'})}),"\n",(0,r.jsx)(e.p,{children:"Program listesinin en \xfcst\xfcnde, mesaj numaraland\u0131rmas\u0131n\u0131n bildirimi bulunmaktad\u0131r. Bu numaraland\u0131rma, iki sabiti tan\u0131mlar: text, s\u0131f\u0131rd\u0131r ve priority, 11'dir (32 bit h\xfccre varsay\u0131larak). Bir numaraland\u0131rman\u0131n ard\u0131ndaki fikir, tekrars\u0131z sembolik sabitlerin bir listesini h\u0131zl\u0131 bir \u015Fekilde tan\u0131mlamakt\u0131r. Varsay\u0131lan olarak, listedeki her sabit, \xf6nceki sabitinden 1 daha y\xfcksektir ve liste i\xe7indeki ilk sabit s\u0131f\u0131rd\u0131r. Ancak, bir sabit i\xe7in ek bir art\u0131\u015F belirtilebilir, b\xf6ylece halef, o ek art\u0131\u015F\u0131n bir fazlas\u0131na sahip olur. text sabiti, 40 char'l\u0131k ek bir art\u0131\u015F\u0131 belirtir. pawn'da char bir operat\xf6rd\xfcr, belirli bir karakter say\u0131s\u0131n\u0131 i\xe7eren paketlenmi\u015F bir dizi i\xe7in gereken h\xfccre say\u0131s\u0131n\u0131 d\xf6nd\xfcr\xfcr. 32 bit h\xfccre ve 8 bit karakter varsay\u0131ld\u0131\u011F\u0131nda, 10 h\xfccre 40 paketlenmi\u015F karakteri i\xe7erebilir."}),"\n",(0,r.jsx)(e.p,{children:"Main fonksiyonunun hemen \xfcst\xfcnde, boyutu message olan yeni bir dizi deklare edilir. message sembol\xfc, numaraland\u0131rman\u0131n ad\u0131d\u0131r. Bu ayn\u0131 zamanda numaraland\u0131rmadaki son sabitin de\u011Ferine, o son \xf6\u011Fe i\xe7in iste\u011Fe ba\u011Fl\u0131 ek art\u0131\u015Fa sahip olan bir sabittir. Bu \xf6rnekte message, 12'dir. Yani, dizi msg'nin 12 h\xfccreyi i\xe7erecek \u015Fekilde bildirilmi\u015Ftir."}),"\n",(0,r.jsx)(e.p,{children:"Main fonksiyonunda daha fazla d\xf6ng\xfc bulunmaktad\u0131r. for d\xf6ng\xfcs\xfc, konsoldan dizeleri ve \xf6ncelik de\u011Ferlerini okur ve bunlar\u0131 bir s\u0131raya ekler. Alt\u0131ndaki while d\xf6ng\xfcs\xfc, s\u0131radan eleman eleman \xe7\u0131kart\u0131r ve bilgileri ekrana yazd\u0131r\u0131r. Dikkat edilmesi gereken nokta, for d\xf6ng\xfcs\xfcn\xfcn dizeyi ve \xf6ncelik numaras\u0131n\u0131 (bir tamsay\u0131) ayn\u0131 de\u011Fi\u015Fken olan msg'de depolamas\u0131d\u0131r; asl\u0131nda, main fonksiyonu sadece tek bir de\u011Fi\u015Fken bildirir. Getstring fonksiyonu, msg[text] dizisinde yazd\u0131\u011F\u0131n\u0131z mesaj metnini depolar, \xf6ncelik de\u011Feri ise (birka\xe7 sat\u0131r alt\u0131ndaki bir atama ile) msg[priority] i\xe7inde depolan\u0131r. While d\xf6ng\xfcs\xfcndeki printf fonksiyonu, bu pozisyonlardan dizeyi ve de\u011Feri okur."}),"\n",(0,r.jsx)(e.p,{children:'Ayn\u0131 zamanda, msg dizisi kendi ba\u015F\u0131na bir varl\u0131kt\u0131r: t\xfcm\xfcn\xfc insert fonksiyonuna aynen iletilir. Bu fonksiyon, neredeyse sonunda "queue[queueitems] = item" dedi\u011Fi yerde, item message boyutunda bir dizi ve queue, message boyutunda queuesize eleman i\xe7eren iki boyutlu bir dizidir. queue ve queuesize deklarasyonlar\u0131, insert fonksiyonunun hemen \xfcst\xfcndedir.'}),"\n",(0,r.jsx)(e.p,{children:"\xd6rnek, bir \"\xf6ncelikli s\u0131ra\" uygular. Belirli bir maksimum ad\u0131mdan bir noktaya ula\u015F\u0131labilen noktalar\u0131 d\xf6nd\xfcren bir algoritma tasarlamak istiyoruz. \xd6rne\u011Fin, B'den ba\u015Flayarak iki ad\u0131mda ula\u015F\u0131labilecek noktalar\u0131 d\xf6nd\xfcrmesini istiyorsak, algoritma C, D, E ve F'yi d\xf6nd\xfcrmelidir, \xe7\xfcnk\xfc G, B'den \xfc\xe7 ad\u0131m uzaktad\u0131r."}),"\n",(0,r.jsx)(e.p,{children:'Yakla\u015F\u0131m\u0131m\u0131z, grafi\u011Fin her noktas\u0131 i\xe7in, bir ad\u0131mda ula\u015Fabilece\u011Fi di\u011Fer noktalar\u0131n k\xfcmesini - bu "next_step" k\xfcmesini - tutmakt\u0131r. Ayr\u0131ca, \u015Fimdiye kadar buldu\u011Fumuz t\xfcm noktalar\u0131 tutan bir "result" k\xfcmesimiz var. Ba\u015Flang\u0131\xe7 noktas\u0131 i\xe7in result k\xfcmesini next_step k\xfcmesine e\u015Fitleriz. \u015Eimdi result k\xfcmesinde bir ad\u0131mda ula\u015F\u0131labilen t\xfcm noktalara sahibiz. Ard\u0131ndan, result k\xfcmesindeki her nokta i\xe7in result k\xfcmesi ile next_step k\xfcmesini birle\u015Ftiririz. Bu i\u015Flem, belirli bir say\u0131da d\xf6ng\xfc i\xe7in yinelendi.'}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h3,{id:"-k\xfcme-i\u0307\u015Flemleri-i\u0307\xe7in-bit-operasyonlar\u0131",children:'\u2022 "K\xfcme" \u0130\u015Flemleri \u0130\xe7in Bit Operasyonlar\u0131'}),"\n",(0,r.jsx)(e.p,{children:"Yukar\u0131da a\xe7\u0131klanan prosed\xfcr\xfc netle\u015Ftirmek i\xe7in bir \xf6rnek yard\u0131mc\u0131 olabilir. Ba\u015Flang\u0131\xe7 noktas\u0131 B oldu\u011Funda, ilk olarak result k\xfcmesini D ve E'ye ayarlar\u0131z - bunlar, B'den bir ad\u0131mda ula\u015F\u0131labilecek noktalard\u0131r. Ard\u0131ndan, result k\xfcmesinde y\xfcr\xfcr\xfcz. K\xfcmede kar\u015F\u0131la\u015Ft\u0131\u011F\u0131m\u0131z ilk nokta D'dir ve D'den bir ad\u0131mda ula\u015F\u0131labilecek noktalar\u0131 kontrol ederiz: bunlar C ve F'dir. Bu nedenle C ve F'yi result k\xfcmesine ekleriz. D'den bir ad\u0131mda ula\u015F\u0131labilecek noktalar\u0131n C ve F oldu\u011Funu biliyorduk, \xe7\xfcnk\xfc C ve F, D i\xe7in next_step k\xfcmesindedir. Bu nedenle, D noktas\u0131 i\xe7in next_step k\xfcmesini result k\xfcmesine birle\u015Ftiririz. Bu birle\u015Fme, k\xfcme teorisinde \"birle\u015Fim\" olarak adland\u0131r\u0131l\u0131r. Bu, D'yi ele al\u0131r. Orijinal result k\xfcmesi ayr\u0131ca E noktas\u0131n\u0131 i\xe7eriyordu, ancak E i\xe7in next_step k\xfcmesi bo\u015F, bu nedenle ba\u015Fka bir nokta eklenmez. Yeni result k\xfcmesi art\u0131k C, D, E ve F'yi i\xe7erir."}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://i.ibb.co/m9Dq7x2/image.png",alt:"img"})}),"\n",(0,r.jsx)(e.p,{children:'Bir k\xfcme, elemanlar i\xe7in genel ama\xe7l\u0131 bir konteynerdir. Bir k\xfcmenin bir eleman hakk\u0131ndaki tek bilgisi, eleman\u0131n k\xfcmede bulunup bulunmad\u0131\u011F\u0131d\u0131r. Bir k\xfcmedeki elemanlar\u0131n s\u0131ras\u0131 \xf6nemsizdir ve bir k\xfcme ayn\u0131 eleman\u0131 birden fazla kez i\xe7eremez. pawn dili, bir "k\xfcme" veri t\xfcr\xfcn\xfc veya k\xfcme \xfczerinde \xe7al\u0131\u015Fan operat\xf6rleri sa\u011Flamaz. Ancak, 32 elemana kadar olan k\xfcme bit i\u015Flemleriyle taklit edilebilir. Bir "var/yo\u011Fun" durumu depolamak i\xe7in yaln\u0131zca bir bit gerekir ve bu nedenle bir 32 bit h\xfccre, her biri benzersiz bir bit pozisyonu atanm\u0131\u015F 32 k\xfcme eleman\u0131n\u0131n durumunu koruyabilir.'}),"\n",(0,r.jsx)(e.p,{children:"K\xfcme i\u015Flemleri ile bit i\u015Flemleri aras\u0131ndaki ili\u015Fki a\u015Fa\u011F\u0131daki tabloda \xf6zetlenmi\u015Ftir. Tabloda, b\xfcy\xfck harf bir k\xfcme i\xe7in ve k\xfc\xe7\xfck harf bir k\xfcmeden bir eleman i\xe7in temsil eder."}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"Kavram"}),(0,r.jsx)(e.th,{children:"Matematiksel G\xf6sterim"}),(0,r.jsx)(e.th,{children:"Pawn \u0130fadesi"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"Kesi\u015Fim"}),(0,r.jsx)(e.td,{children:"A \u2229 B"}),(0,r.jsx)(e.td,{children:"A & B"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"Birle\u015Fim"}),(0,r.jsx)(e.td,{children:"A \u222A B"}),(0,r.jsx)(e.td,{children:"A I B"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"Tamamlay\u0131c\u0131"}),(0,r.jsx)(e.td,{children:"A"}),(0,r.jsx)(e.td,{children:"~A"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"Bo\u015F k\xfcme"}),(0,r.jsx)(e.td,{children:"\u03B5"}),(0,r.jsx)(e.td,{children:"0"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"\xdcyelik"}),(0,r.jsx)(e.td,{children:"x \u2208 A"}),(0,r.jsxs)(e.td,{children:["(1 ","<<"," x ) & A"]})]})]})]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsxs)(e.p,{children:["\xdcyelik testi yapmak i\xe7in - yani, bir k\xfcmenin belirli bir eleman\u0131 i\xe7erip i\xe7ermedi\u011Fini sorgulamak i\xe7in, yaln\u0131zca bir eleman i\xe7eren bir k\xfcme olu\u015Fturun ve kesi\u015Fimi al\u0131n. Sonu\xe7 0 (bo\u015F k\xfcme) ise, eleman k\xfcmede bulunmamaktad\u0131r. Bit numaraland\u0131rma genellikle s\u0131f\u0131rdan ba\u015Flar; en d\xfc\u015F\xfck bit bit 0'd\u0131r ve bir 32 bit h\xfccredeki en y\xfcksek bit bit 31'dir. Yaln\u0131zca 7. bitin ayarl\u0131 oldu\u011Fu bir h\xfccre yapmak i\xe7in de\u011Feri 1'i yedi bit sola kayd\u0131r\u0131n - veya bir pawn ifadesinde: \"1 ","<<",' 7".']}),"\n",(0,r.jsx)(e.p,{children:"A\u015Fa\u011F\u0131da, belirli bir ba\u015Flang\u0131\xe7 noktas\u0131ndan belirli bir say\u0131da ad\u0131mda ula\u015F\u0131labilecek t\xfcm noktalar\u0131 bulmak i\xe7in daha \xf6nce a\xe7\u0131klanan algoritmay\u0131 uygulayan program bulunmaktad\u0131r. Algoritma tamamen findtargets fonksiyonunda bulunmaktad\u0131r."}),"\n",(0,r.jsx)(e.p,{children:"Listeleme: set.p"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:'\n/* Bit i\u015Flemlerini kullanarak k\xfcme i\u015Flemleri */\n\nmain()\n{\n    enum (<<= 1) { A = 1, B, C, D, E, F, G }\n    new nextstep[] =\n\n        { C | E,       /* A C ve E\'ye ula\u015Fabilir */\n           D | E,       /* B    "        "      D ve E  */\n           G,           /* C    "        "      G  */\n           C | F,       /* D    "        "      C ve F  */\n           0,           /* E    "        "      yok  */\n           0,           /* F    "        "      yok  */\n           E | F,       /* G    "        "      E ve F  */\n        }\n    #pragma unused A, B\n\n    print "Ba\u015Flang\u0131\xe7 noktas\u0131: "\n    new source = clamp(.value = toupper(getchar()) - \'A\',\n                .min = 0,\n                .max = sizeof nextstep - 1\n                 )\n    print "\\nAd\u0131m say\u0131s\u0131: "\n    new steps = getvalue()\n\n    /* K\xfcmeyi olu\u015Ftur */\n    new result = findtargets(source, steps, nextstep)\n    printf "%c noktas\u0131ndan %d ad\u0131mda ula\u015F\u0131labilen noktalar: ", source+\'A\',\n    steps\n    for (new i = 0; i < sizeof nextstep; i++)\n        if (result & 1 << i)\n            printf "%c ", i + \'A\'\n}\n\nfindtargets(source, steps, nextstep[], numpoints = sizeof nextstep)\n{\n    new result = 0\n    new addedpoints = nextstep[source]\n    while (steps-- > 0 && result != addedpoints)\n    {\n        result = addedpoints\n        for (new i = 0; i < numpoints; i++)\n            if (result & 1 << i)\n                addedpoints |= nextstep[i]\n    }\n    return result\n}\n\n'})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:"Main fonksiyonunun ba\u015Fl\u0131k k\u0131sm\u0131n\u0131n hemen alt\u0131ndaki enum ifadesi, A'dan G'ye olan d\xfc\u011F\xfcm sabitlerini bildirir, ancak bir s\xfcrprizle. Genellikle enum s\u0131f\u0131rdan ba\u015Flar; burada, A'n\u0131n ilk sabitinin de\u011Feri a\xe7\u0131k\xe7a 1 olarak ayarlanm\u0131\u015Ft\u0131r."}),"\n",(0,r.jsxs)(e.p,{children:["Daha dikkat \xe7ekici olan, enum anahtar kelimesi ve sabit listesini ba\u015Flatan a\xe7\u0131l\u0131 parantez aras\u0131ndaki ",(0,r.jsx)(e.code,{children:"(<<= 1)"}),' ifadesidir: bu, bir "bit kayd\u0131rma" art\u0131\u015F\u0131n\u0131 belirtir. Varsay\u0131lan olarak, bir enum listesindeki her sabit, \xf6nc\xfcl\xfcnden 1 daha fazla bir de\u011Fere sahip olur, ancak her bir ard\u0131\u015F\u0131k sabitin de\u011Ferini belirtebilirsiniz.']}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["\xf6nc\xfcl\xfcnden herhangi bir de\u011Ferle art\u0131r\u0131lm\u0131\u015F \u2014\xf6rne\u011Fin, ",(0,r.jsx)(e.code,{children:"(+= 5)"}),";-"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["\xf6nc\xfcl\xfcn\xfcn herhangi bir de\u011Ferle \xe7arp\u0131lm\u0131\u015F \u2014\xf6rne\u011Fin, ",(0,r.jsx)(e.code,{children:"(_= 3)"}),";-"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["\xf6nc\xfcl\xfcn\xfcn belirli bir de\u011Fere sola kayd\u0131r\u0131lmas\u0131 \u2014\xf6rne\u011Fin, ",(0,r.jsx)(e.code,{children:"(<<= 1)"}),";-"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.p,{children:["Unutmay\u0131n ki ikili aritmetikte, bir bitin bir konum sola kayd\u0131r\u0131lmas\u0131, iki ile \xe7arp\u0131lmas\u0131 anlam\u0131na gelir, bu da ",(0,r.jsx)(e.code,{children:"(/*= 2)"})," ve ",(0,r.jsx)(e.code,{children:"(<<= 1)"}),"'in ayn\u0131 \u015Feyi yapt\u0131\u011F\u0131 anlam\u0131na gelir."]}),"\n",(0,r.jsx)(e.p,{children:"K\xfcmelerle \xe7al\u0131\u015F\u0131rken kar\u015F\u0131m\u0131za \xe7\u0131kan tipik bir g\xf6rev, k\xfcmedeki elemanlar\u0131n say\u0131s\u0131n\u0131 belirlemektir. Bu i\u015Flemi yapan basit bir i\u015Flev a\u015Fa\u011F\u0131da g\xf6sterilmi\u015Ftir:"}),"\n",(0,r.jsx)(e.p,{children:"Bit sayma i\u015Flevi i\xe7in basit bir i\u015Flev"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"\nbitcount(set)\n{\n    new count = 0\n    for (new i = 0; i < cellbits; i++)\n        if (set & (1 << i))\n            count++\n    return count\n}\n\n"})}),"\n",(0,r.jsx)(e.p,{children:'32 bitlik bir h\xfccre boyutuyla bu i\u015Flemin d\xf6ng\xfcs\xfc, her iterasyonda bir bit kontrol etmek i\xe7in 32 kez d\xf6ner. Binlerce aritmetik sihirbazl\u0131\u011F\u0131 ile bunu, "set" de\u011Ferinde yaln\u0131zca bir bit ayarland\u0131\u011F\u0131nda yaln\u0131zca bir kez d\xf6nen bir d\xf6ng\xfcye indirebiliriz.'}),"\n",(0,r.jsx)(e.p,{children:"\u0130yile\u015Ftirilmi\u015F bit sayma i\u015Flevi i\xe7in liste"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"\nbitcount(set)\n{\n    new count = 0\n    if (set)\n        do\n            count++\n        while ((set = set & (set - 1)))\n    return count\n}\n\n"})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:'"enum" ifadesi: 101'})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:'"cellbits" sabiti: 102'})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h3,{id:"-basit-bir-ters-leh\xe7e-rpn-hesap-makinesi",children:"\u2022 Basit Bir Ters Leh\xe7e (RPN) Hesap Makinesi"}),"\n",(0,r.jsx)(e.p,{children:'"26 3 (5 + 2)" gibi ifadelerle bilinen yayg\u0131n matematikselg\xf6sterim, cebir g\xf6sterimi olarak bilinir. Bu, \xf6zg\xfcl bir g\xf6sterimdir ve al\u0131\u015Fk\u0131n\u0131z. Pawn ve \xe7o\u011Fu di\u011Fer programlama dilleri, programlama ifadeleri i\xe7in cebir g\xf6sterimini kullan\u0131r. Cebir g\xf6sterimi, zaman zaman i\u015Flemlerin s\u0131ras\u0131n\u0131 parantez i\xe7inde bir b\xf6l\xfcm\xfc katlayarak a\xe7\u0131klamak gerektirir. Bu paragraftaki \xfcstteki ifade, parantezleri ortadan kald\u0131rmak i\xe7in yeniden yaz\u0131labilir, ancak uzunlu\u011Funu neredeyse iki kat\u0131na \xe7\u0131kararak bir maliyetle. Pratikte, cebir g\xf6sterimi, \xf6rne\u011Fin \xe7arpma toplamadan \xf6nce gider, eksiden \xf6nce.\u2217 \xd6ncelik seviyeleri, parantez ihtiyac\u0131n\u0131 b\xfcy\xfck \xf6l\xe7\xfcde azalt\u0131r, ancak tamamen \xf6nler. \xd6zellikle i\u015Flem say\u0131s\u0131 b\xfcy\xfcd\xfck\xe7e, \xf6ncelik seviyelerinin hiyerar\u015Fisi ve her operat\xf6r i\xe7in belirli \xf6ncelik seviyesi, ezberlemesi zor hale gelir. Bu, APL gibi operat\xf6r a\xe7\u0131s\u0131ndan zengin bir dilin \xf6ncelik seviyelerini tamamen ortadan kald\u0131rmas\u0131n\u0131n nedenidir.'}),"\n",(0,r.jsx)(e.p,{children:'Yakla\u015F\u0131k 1920 civar\u0131nda, Polonyal\u0131 matematik\xe7i Jan \xb4Lukasiewicz, operat\xf6rleri operandolar\u0131n\u0131n \xf6n\xfcne yerle\u015Ftirerek, aralar\u0131na koymak yerine, \xf6ncelik seviyelerinin gereksiz hale geldi\u011Fini ve parantezlere hi\xe7 gerek olmad\u0131\u011F\u0131n\u0131 g\xf6sterdi. Bu g\xf6sterim "Polonya Notasyonu" olarak bilindi.\u2020 Charles Hamblin daha sonra operat\xf6rleri operandolar\u0131n\u0131n arkas\u0131na koymay\u0131 \xf6nerdi ve buna "Ters Leh\xe7e Notasyonu" ad\u0131n\u0131 verdi.'}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h6,{id:"-bu-kurallar-genellikle-l\xfctfen-sevgili-teyzem-affet-gibi-bir-mnemonikle-\xf6zetlenir-parantezler-\xfcs-alma-\xe7arpma-b\xf6lme-toplama-\xe7\u0131karma",children:"\u2217 Bu kurallar genellikle \u201CL\xfctfen Sevgili Teyzem Affet\u201D gibi bir mnemonikle \xf6zetlenir (Parantezler, \xdcs Alma, \xc7arpma, B\xf6lme, Toplama, \xc7\u0131karma)"}),"\n",(0,r.jsx)(e.h6,{id:"-leh\xe7e-notasyonu-sadece-de\u011Fi\u015Fken-veya-fonksiyon-isimlerine-tip-veya-ama\xe7-belirtme-al\u0131\u015Fkanl\u0131\u011F\u0131-olan-macar-notasyonu-ile-tamamen-ilgili-de\u011Fildir",children:'* Leh\xe7e Notasyonu, sadece de\u011Fi\u015Fken veya fonksiyon isimlerine "tip" veya "ama\xe7" belirtme al\u0131\u015Fkanl\u0131\u011F\u0131 olan "Macar Notasyonu" ile tamamen ilgili de\u011Fildir.'}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:'Cebirsel notasyon ayn\u0131 zamanda "infix" notasyon olarak adland\u0131r\u0131l\u0131r'})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:'Ters Leh\xe7e Notasyonu ayn\u0131 zamanda "postfix" notasyon olarak adland\u0131r\u0131l\u0131r'})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:"S\u0131ran\u0131n tersine \xe7evrilmesinin avantaj\u0131, operat\xf6rlerin\ny\xfcr\xfct\xfclmeleri gerekti\u011Fi s\u0131ra ile listelendi\u011Fi yerdir: operat\xf6rleri\nsoldan sa\u011Fa okurken, ayn\u0131 zamanda ger\xe7ekle\u015Ftirmeniz gereken i\u015Flemleri de s\u0131ral\u0131 bir \u015Fekilde elde edersiniz. Bu b\xf6l\xfcmden ba\u015Flayan cebirsel ifadeyi tersten leh\xe7e olarak okursak:"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"26 3 5 2 + \xd7 \u2212"})}),"\n",(0,r.jsx)(e.p,{children:"Sadece operat\xf6rlere bakt\u0131\u011F\u0131m\u0131zda: \xf6nce bir toplama, sonra bir \xe7arpma ve son olarak bir \xe7\u0131karma var. Her operat\xf6r\xfcn operandlar\u0131 sa\u011Fdan sola okunur: + operat\xf6r\xfcn\xfcn operandlar\u0131 5 ve 2'nin de\u011Ferleri, \xd7 operat\xf6r\xfcn\xfcn operandlar\u0131 \xf6nceki toplam\u0131n sonucu ve 3'\xfcn de\u011Feri ve b\xf6yle devam eder."}),"\n",(0,r.jsx)(e.p,{children:'De\u011Ferlerin bir y\u0131\u011F\u0131n \xfczerine yerle\u015Ftirildi\u011Fini d\xfc\u015F\xfcnmek yararl\u0131d\u0131r, burada operat\xf6rler y\u0131\u011F\u0131n\u0131n en \xfcst\xfcnden bir veya daha fazla operat\xf6r al\u0131r ve bir sonucu y\u0131\u011F\u0131n\u0131n \xfcst\xfcne koyar. Ters leh\xe7e ifadesi \xfczerinde okuma yaparken, de\u011Ferler 26, 3, 5 ve 2 s\u0131ras\u0131nda "y\u0131\u011F\u0131lm\u0131\u015F" durumda. + operat\xf6r\xfc, y\u0131\u011F\u0131ndan (5 ve 2) en \xfcstteki iki \xf6\u011Feyi al\u0131r ve bu de\u011Ferlerin toplam\u0131n\u0131 geri iter - y\u0131\u011F\u0131n \u015Fimdi "26 3 7" okunur. Ard\u0131ndan, operat\xf6r 3\'\xfc ve 7\'yi kald\u0131r\u0131r ve de\u011Ferlerin \xe7arp\u0131m\u0131n\u0131 y\u0131\u011F\u0131na iter - y\u0131\u011F\u0131n "26 21" olur. Son olarak, operat\xf6r 21\'i 26\'dan \xe7\u0131kar\u0131r ve tek bir de\u011Feri, yani ifadenin sonucu olan 5\'i y\u0131\u011F\u0131na geri saklar.'}),"\n",(0,r.jsx)(e.p,{children:"Ters Leh\xe7e Notasyonu, (erken) hesap makinelerinde anla\u015F\u0131lmas\u0131 ve uygulanmas\u0131 kolay oldu\u011Fu i\xe7in pop\xfcler hale geldi. Ayr\u0131ca, iki operandl\u0131 daha fazla operat\xf6r i\xe7eren (\xf6rne\u011Fin, entegrasyon) veya birden fazla sonu\xe7 \xfcreten (\xf6rne\u011Fin, kutup ve kartez koordinatlar aras\u0131ndaki d\xf6n\xfc\u015F\xfcm) operat\xf6rlere olanak tan\u0131r."}),"\n",(0,r.jsx)(e.p,{children:"Ters Leh\xe7e Notasyonu hesap makinesi i\xe7in ana program a\u015Fa\u011F\u0131da:"}),"\n",(0,r.jsx)(e.p,{children:"Listeleme: rpn.p"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:'\n/* basit bir Ters Leh\xe7e Notasyonu hesap makinesi */\n#include strtok\n#include stack\n#include rpnparse\n\nmain()\n{\n    print "Ters Leh\xe7e Notasyonunda bir ifade yaz\u0131n: "\n    new string[100]\n    getstring string, sizeof string\n    rpncalc string\n}\n\n'})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:"Ana program kendisi \xe7ok az kod i\xe7erir; bunun yerine, birka\xe7 i\u015Flevi uygulayan \xfc\xe7 di\u011Fer dosyadan gerekli kodu i\xe7erir, bir araya gelerek ters leh\xe7e hesap makinesini olu\u015Fturur. Programlar veya betikler daha b\xfcy\xfck hale geldi\u011Finde, bak\u0131m\u0131 daha kolay hale getirmek i\xe7in uygulamay\u0131 birka\xe7 dosyaya yaymak genellikle \xf6nerilir."}),"\n",(0,r.jsx)(e.p,{children:"Main fonksiyonu \xf6nce bir mesaj kutusu olu\u015Fturur ve kullan\u0131c\u0131n\u0131n girdi\u011Fi bir ifadeyi okumak i\xe7in yerel fonksiyonu getstring'i \xe7a\u011F\u0131r\u0131r. Ard\u0131ndan ger\xe7ek i\u015Fi yapmas\u0131 i\xe7in \xf6zel fonksiyon rpncalc'\u0131 \xe7a\u011F\u0131r\u0131r. rpncalc fonksiyonu rpnparse dosyas\u0131nda uygulanm\u0131\u015Ft\u0131r, a\u015Fa\u011F\u0131da yeniden \xfcretilmi\u015Ftir:"}),"\n",(0,r.jsx)(e.p,{children:"Listeleme: rpnparse.inc"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:'\n/* ana rpn ayr\u0131\u015Ft\u0131r\u0131c\u0131 ve leksikal analiz, Ters Leh\xe7e Notasyonu hesap makinesinin bir par\xe7as\u0131 */\n#include <rational>\n#include <string>\n\nenum token\n{\n    t_type,                      /* operat\xf6r veya belirte\xe7 t\xfcr\xfc */\n    Rational: t_value,           /* t_type "Number" ise de\u011Fer */\n    t_word[20],                  /* ham dize */\n\n}\n\nconst Number = \'0\'\nconst EndOfExpr = \'#\'\n\nrpncalc(const string[])\n{\n    new index\n    new field[token]\n    for (;;)\n    {\n        field = gettoken(string, index)\n        switch (field[t_type])\n        {\n            case Number:\n                push field[t_value]\n            case \'+\':\n                push pop() + pop()\n            case \'-\':\n                push -pop() + pop()\n            case \'*\':\n                push pop() * pop()\n            case \'/\', \':\':\n                push 1.0 / pop() * pop()\n            case EndOfExpr:\n                break /* "for" d\xf6ng\xfcs\xfcnden \xe7\u0131k */\n            default:\n                printf "Bilinmeyen operat\xf6r \u2019%s\u2019\\n", field[t_word]\n        }\n    }\n    printf "Sonu\xe7 = %r\\n", pop()\n    if (clearstack())\n        print "Y\u0131\u011F\u0131n bo\u015F de\u011Fil\\n", red\n}\n\ngettoken(const string[], &index)\n{\n    /* sonra stringten bir sonraki "kelimeyi" al\u0131n */\n    new word[20]\n    word = strtok(string, index)\n\n    /* ard\u0131ndan ayr\u0131\u015Ft\u0131r\u0131n */\n    new field[token]\n    field[t_word] = word\n    if (strlen(word) == 0)\n    {\n        field[t_type] = EndOfExpr /* \xf6zel "durdur" simgesi */\n        field[t_value] = 0\n    }\n    else\n\n if (\'0\' <= word[0] <= \'9\')\n    {\n        field[t_type] = Number\n        field[t_value] = rationalstr(word)\n    }\n    else\n    {\n        field[t_type] = word[0]\n        field[t_value] = 0\n    }\n    return field\n\n}\n\n```***\n\nRPN hesaplay\u0131c\u0131s\u0131, rasyonel say\u0131 deste\u011Fi kullan\u0131r ve rpnparse.inc dosyas\u0131 bu amac\u0131 ta\u015F\u0131yan "rational" dosyas\u0131n\u0131 i\xe7erir. Rasyonel say\u0131lar \xfczerindeki neredeyse t\xfcm i\u015Flemler aritmetikte gizlidir. Rasyonel say\u0131lara do\u011Frudan referanslar, rpncalc fonksiyonunun en alt\u0131nda bulunan printf ifadesindeki "%r" format kodu ve gettoken fonksiyonunun ortas\u0131ndaki rationalstr fonksiyonu \xe7a\u011Fr\u0131s\u0131d\u0131r.\n\nDosya rpnparse.inc\'deki ilk dikkat \xe7eken \xf6\u011Fe, enum bildirimidir. Bu bildiride bir \xf6\u011Fe bir etiket i\xe7erir (t_field) ve di\u011Fer \xf6\u011Fe bir boyut i\xe7erir (t_word). Fonksiyon rpncalc, de\u011Fi\u015Fken field\'\u0131, boyutunu numaraland\u0131rma sembol\xfc olarak kullanarak bir dizi olarak bildirir. Ekran\u0131n arkas\u0131nda, bu bildiri sadece 22 h\xfccreli bir dizi olu\u015Fturmaktan daha fazlas\u0131n\u0131 yapar:\n\n/*Dizinin endeks etiketi, "token:" etiket ad\u0131na ayarlan\u0131r. Bu, diziyi numaraland\u0131rman\u0131n herhangi bir eleman\u0131 ile indeksleyebilece\u011Finiz, ancak farkl\u0131 bir etikete sahip de\u011Ferlerle indeksleyemeyece\u011Finiz anlam\u0131na gelir. Ba\u015Fka bir deyi\u015Fle, field[t_type] uygun olsa da, field[1] bir ayr\u0131\u015Ft\u0131r\u0131c\u0131 hata verir.\n\n/*Numaraland\u0131rman\u0131n etiket ad\u0131, varl\u0131k dizisinin etiket ad\u0131n\u0131 ezerse, field de\u011Fi\u015Fkeni etiketsizdir, ancak field[t_value] etiketi Rational: etiketine sahiptir, \xe7\xfcnk\xfc numaraland\u0131rma \xf6\u011Fesi t_value bu \u015Fekilde bildirilmi\u015Ftir. Bu nedenle, farkl\u0131 etiket adlar\u0131na sahip \xf6\u011Feler i\xe7eren bir dizi olu\u015Fturman\u0131za izin verir.\n\n/*E\u011Fer numaraland\u0131rma \xf6\u011Fesi bir boyuta sahipse, o \xf6\u011Feyi belirten dizi \xf6\u011Fesi bazen bir alt dizi olarak i\u015Flenir. Rpncalc\'ta "field[t_type]" ifadesi tek bir h\xfccredir, "field[t_value]" tek bir h\xfccredir, ancak "field[t_word]" 20 h\xfccrelik bir tek boyutlu dizi olarak kabul edilir. Bu \xf6zellikle \u015Fu sat\u0131rda g\xf6r\xfcl\xfcr:\n\n    printf  "Bilinmeyen operat\xf6r \u2019%s\u2019\\n",  field[t_word]\n\nburada %s format kodu bir dize bekler - yineleme ile sona eren bir dizi.\n\nRasyonel say\u0131lar, bkz. ayr\u0131ca 16. sayfadaki "Celsius to Fahrenheit" \xf6rne\u011Fi\n\n"enum" ifadesi: 101\n\nBa\u015Fka bir indeks etiketi \xf6rne\u011Fi: 68. sayfa\n\n// buraya kadar geldi\n\n***\n\nE\u011Fer C/C++ veya Java biliyorsan\u0131z, switch ifadesine bakman\u0131z\u0131 \xf6nerebilirim. Switch ifadesi, sa\u011Flad\u0131\u011F\u0131 di\u011Fer dillerden birka\xe7 a\xe7\u0131dan farkl\u0131d\u0131r. \xd6rne\u011Fin, durumlar birbirine d\xfc\u015Fmez, bu da EndOfExpr durumu i\xe7in break ifadesinin, switchten \xe7\u0131k\u0131\u015F yapmak yerine i\xe7 i\xe7e ge\xe7mi\u015F d\xf6ng\xfcden \xe7\u0131k\u0131\u015F yapmas\u0131na neden olur.\n\nFonksiyon rpncalc\'daki for d\xf6ng\xfcs\xfcn\xfcn ba\u015F\u0131nda, "field = gettoken(string, index)" ifadesini bulacaks\u0131n\u0131z. Zaten 19. sayfadaki wcount.p ("kelime say\u0131m\u0131") program\u0131nda \xf6rneklenmi\u015F oldu\u011Fu gibi, fonksiyonlar dizileri d\xf6nd\xfcrebilir. Benzer bir sat\u0131r i\xe7in gettoken fonksiyonunda daha ilgin\xe7 hale gelir:\n\nfield[t_word] = word\n\nburada word 20 h\xfccrelik bir dizi ve field 22 h\xfccrelik bir dizidir. Ancak t_word numaraland\u0131rma alan\u0131 20 h\xfccre boyutunda bildirildi\u011Finden, "field[t_word]" 20 h\xfccrelik bir alt dizi olarak kabul edilir ve tam olarak word dizisinin boyutuna uyar.\n\nListeleme: strtok.inc\n\n```c\n\n/* bir dizeden kelimeleri \xe7\u0131kart (kelimeler bo\u015Fluklarla ayr\u0131lmal\u0131d\u0131r) */\n#include <string>\n\nstrtok(const string[], &index)\n{\n    new length = strlen(string)\n\n    /* ba\u015Ftaki bo\u015Fluklar\u0131 atla */\n    while (index < length && string[index] <= \u2019 \u2019)\n        index++\n\n    /* harfi harfe kelimeyi depola */\n    new offset = index     /* belirtecin ba\u015Flang\u0131\xe7 pozisyonunu kaydet */\n    new result[20]         /* kelimenin depolanaca\u011F\u0131 dizi */\n    while (index < length\n        && string[index] > \u2019 \u2019\n        && index - offset < sizeof result - 1)\n        {\n            result[index - offset] = string[index]\n            index++\n        }\n    result[index - offset] = EOS /* diziyi s\u0131f\u0131r ile sonland\u0131r */\n\n    return result\n}\n\n'})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:'"switch" ifadesi: sayfa 115'}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:"strtok fonksiyonu, wcount.p \xf6rne\u011Finde kullan\u0131lan ile ayn\u0131d\u0131r. Rpn hesap makinesi program\u0131 i\xe7in ayr\u0131 bir dosyada uygulanm\u0131\u015Ft\u0131r. Unutulmamal\u0131d\u0131r ki, burada uygulanan strtok fonksiyonu sadece 19 karaktere kadar olan kelimelerle ba\u015Fa \xe7\u0131kabilir \u2013 20. karakter s\u0131f\u0131r terminatorudur. Ger\xe7ekten genel ama\xe7l\u0131 ve tekrar kullan\u0131labilir bir strtok fonksiyonu, hedef diziyi bir parametre olarak almal\u0131d\u0131r, b\xf6ylece herhangi bir boyuttaki kelimelerle ba\u015Fa \xe7\u0131kabilir. Paketli ve paketlenmemi\u015F dizileri desteklemek de genel ama\xe7l\u0131 bir fonksiyonun faydal\u0131 bir \xf6zelli\u011Fi olacakt\u0131r."}),"\n",(0,r.jsx)(e.p,{children:'Ters Leh\xe7e Notasyonunun avantajlar\u0131ndan bahsederken, bir y\u0131\u011F\u0131n algoritmay\u0131 "g\xf6rselle\u015Ftirmede" ve bir rpn ayr\u0131\u015Ft\u0131r\u0131c\u0131s\u0131n\u0131 uygulamada kullan\u0131\u015Fl\u0131 bir y\xf6ntem oldu\u011Funu belirttim. Bu \xf6rnek rpn hesap makinesi, yayg\u0131n olarak kullan\u0131lan push ve pop i\u015Flevleri ile bir y\u0131\u011F\u0131n kullan\u0131r. Hata kontrol\xfc ve y\u0131\u011F\u0131n\u0131 s\u0131f\u0131rlama i\xe7in y\u0131\u011F\u0131n\u0131 temizleyen \xfc\xe7\xfcnc\xfc bir i\u015Flev de bulunmaktad\u0131r.'}),"\n",(0,r.jsx)(e.p,{children:"Listeleme: stack.inc"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"\n/* stack functions, part of the RPN calculator */\n#include <rational>\n\nstatic Rational: stack[50]\nstatic stackidx = 0\n\npush(Rational: value)\n{\n    assert stackidx < sizeof stack\n    stack[stackidx++] = value\n}\n\nRational: pop()\n{\n    assert stackidx > 0\n    return stack[--stackidx]\n}\n\nclearstack()\n{\n    assert stackidx >= 0\n    if (stackidx == 0)\n        return false\n    stackidx = 0\n    return true\n}\n\n"})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"wcount.p: sayfa 19"})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:"stack.inc dosyas\u0131 tekrar rational dosyas\u0131n\u0131 i\xe7erir. Bu teknik olarak gerekli de\u011Fildir (rpnparse.inc zaten rasyonel say\u0131 deste\u011Fi tan\u0131mlamalar\u0131n\u0131 i\xe7eriyordu), ancak zarar vermez ve kodun tekrar kullan\u0131m\u0131 a\xe7\u0131s\u0131ndan, bir dosyan\u0131n ba\u011F\u0131ml\u0131 oldu\u011Fu k\xfct\xfcphanelerin tan\u0131mlamalar\u0131n\u0131 i\xe7ermesi daha iyidir."}),"\n",(0,r.jsx)(e.p,{children:'\u0130ki global de\u011Fi\u015Fken stack ve stackidx\'in "static" de\u011Fi\u015Fkenler olarak nas\u0131l tan\u0131mland\u0131\u011F\u0131na dikkat edin; new yerine static anahtar kelimesini kullanmak. Bunu yapmak, global de\u011Fi\u015Fkenleri yaln\u0131zca o dosyada "g\xf6r\xfcn\xfcr" yapar. Daha b\xfcy\xfck bir projedeki di\u011Fer dosyalar i\xe7in, stack ve stackidx sembolleri g\xf6r\xfcnmez ve de\u011Fi\u015Fkenleri (kazara) de\u011Fi\u015Ftiremez. Ayr\u0131ca di\u011Fer mod\xfcllerin bu isimlerle kendi \xf6zel de\u011Fi\u015Fkenlerini bildirmelerine izin verir, bu da isim \xe7ak\u0131\u015Fmas\u0131n\u0131 \xf6nler.'}),"\n",(0,r.jsx)(e.p,{children:"Asl\u0131nda, rpn hesap makinesi h\xe2l\xe2 olduk\xe7a k\xfc\xe7\xfck bir programd\u0131r, ancak daha b\xfcy\xfck bir program gibi kurulmu\u015Ftur. Ayr\u0131ca, pawn dilinin bir dizi \xf6\u011Fesini g\xf6stermek i\xe7in tasarlanm\u0131\u015Ft\u0131r ve \xf6rnek program daha kompakt bir \u015Fekilde uygulanabilirdi."}),"\n",(0,r.jsx)(e.h3,{id:"-olay-tabanl\u0131-programlama",children:"\u2022 Olay Tabanl\u0131 Programlama"}),"\n",(0,r.jsx)(e.p,{children:'Bu b\xf6l\xfcmde \u015Fimdiye kadar geli\u015Ftirilen t\xfcm \xf6rnek programlar, "lineer" bir programlama modeli kullanm\u0131\u015Ft\u0131r: main fonksiyonu ile ba\u015Flarlar ve kod, ne yap\u0131laca\u011F\u0131n\u0131 ve ne zaman giri\u015F istenece\u011Fini belirler. Bu programlama modeli anlamak kolayd\u0131r ve \xe7o\u011Fu programlama diline g\xfczel bir \u015Fekilde uyar, ancak bir\xe7ok "ger\xe7ek hayat" durumuna uymaz. \xc7o\u011Fu zaman, bir program veri i\u015Fleyemez ve kullan\u0131c\u0131n\u0131n sadece haz\u0131r oldu\u011Funda giri\u015F yapmas\u0131n\u0131 isteyemez. Bunun yerine, giri\u015F sa\u011Flamak kullan\u0131c\u0131n\u0131n karar\u0131d\u0131r ve program veya komut dosyas\u0131, ne yapt\u0131\u011F\u0131na bak\u0131lmaks\u0131z\u0131n kabul edilebilir bir s\xfcre i\xe7inde i\u015Flem yapmaya haz\u0131r olmal\u0131d\u0131r.'}),"\n",(0,r.jsx)(e.p,{children:'Yukar\u0131daki a\xe7\u0131klama, bir program\u0131n bu nedenle \xe7al\u0131\u015Fmas\u0131n\u0131 kesip orijinal g\xf6revi almadan \xf6nce ba\u015Fka \u015Feyler yapabilmesi gerekti\u011Fini d\xfc\u015F\xfcnd\xfcrmektedir. Erken uygulamalarda, bu ger\xe7ekten de b\xf6yle bir i\u015Flevselli\u011Fin nas\u0131l uyguland\u0131\u011F\u0131yd\u0131: bir g\xf6revin (veya i\u015F par\xe7ac\u0131\u011F\u0131n\u0131n) arka plan g\xf6revleri y\xf6netti\u011Fi \xe7ok g\xf6revli bir sistem ve kullan\u0131c\u0131 giri\u015Fi s\xfcrekli olarak talep eden ikinci bir g\xf6rev/i\u015F par\xe7ac\u0131\u011F\u0131. Ancak bu a\u011F\u0131r bir \xe7\xf6z\xfcmd\xfcr. Daha hafif bir uygulama, "olay tabanl\u0131" programlama modeli olarak adland\u0131r\u0131lan \u015Feydir.'}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:"Olay tabanl\u0131 programlama modelinde, bir program veya komut dosyas\u0131 herhangi bir uzun (arka plan) g\xf6revi k\u0131sa y\xf6netilebilir bloklara ay\u0131r\u0131r ve bunlar aras\u0131nda giri\u015Fe haz\u0131r olur. Ancak program\u0131n giri\u015Fi i\xe7in sorgu yapmas\u0131n\u0131n yerine, ana uygulama (veya ba\u015Fka bir alt sistem) bir olaya ba\u011Fl\u0131 bir i\u015Flevi \xe7a\u011F\u0131r\u0131r, ancak yaln\u0131zca olay ger\xe7ekle\u015Firse."}),"\n",(0,r.jsx)(e.p,{children:'Tipik bir olay "giri\u015F"tir. Giri\u015F sadece insan operat\xf6rlerden gelmez. Giri\u015F paketleri seri kablolar, a\u011F y\u0131\u011F\u0131nlar\u0131, zamanlay\u0131c\u0131lar ve saatler gibi i\xe7 alt sistemlerden ve sistemine ba\u011Fl\u0131 di\u011Fer t\xfcm ekipmanlardan gelebilir. Bir\xe7ok giri\u015F \xfcreten cihaz, giri\u015Fi sadece g\xf6nderir. Bu t\xfcr bir giri\u015Fin varl\u0131\u011F\u0131, bir tu\u015Fa basman\u0131n oldu\u011Fu gibi bir olayd\u0131r. E\u011Fer olay\u0131 yakalamazsan\u0131z, birka\xe7 tanesi i\xe7 bir sistem s\u0131ras\u0131nda saklanabilir, ancak s\u0131ra doydu\u011Funda olaylar basit\xe7e at\u0131l\u0131r.'}),"\n",(0,r.jsx)(e.p,{children:'Pawn, \xe7oklu giri\u015F noktalar\u0131n\u0131 destekledi\u011Fi i\xe7in olay tabanl\u0131 modeli do\u011Frudan destekler. Lineer bir program\u0131n tek giri\u015F noktas\u0131 main fonksiyonudur; olay tabanl\u0131 bir program, yakalad\u0131\u011F\u0131 her olay i\xe7in bir giri\u015F noktas\u0131na sahiptir. Lineer modelle kar\u015F\u0131la\u015Ft\u0131r\u0131ld\u0131\u011F\u0131nda, olay tabanl\u0131 programlar genellikle "alttan yukar\u0131ya" gibi g\xf6r\xfcn\xfcr: ana uygulamaya \xe7a\u011Fr\u0131 yapmak ve bir sonraki ad\u0131m\u0131 belirlemek yerine, program\u0131n\u0131z d\u0131\u015Far\u0131dan \xe7a\u011Fr\u0131l\u0131r ve uygun ve h\u0131zl\u0131 bir \u015Fekilde yan\u0131t vermesi gerekir.'}),"\n",(0,r.jsx)(e.p,{children:"Pawn, standart bir k\xfct\xfcphane belirtmez, bu nedenle bir uygulamada printf ve getvalue gibi i\u015Flevlerin olup olmad\u0131\u011F\u0131na dair bir garanti yoktur. Her uygulaman\u0131n bu i\u015Flevlere sahip bir minimal konsol/terminal arabirimi sa\u011Flamas\u0131n\u0131n \xf6nerildi\u011Fi gibi, bunlar\u0131n kullan\u0131labilirli\u011Fi nihayetinde uygulamaya ba\u011Fl\u0131d\u0131r. Ayn\u0131s\u0131, bir komut dosyas\u0131n\u0131n genel i\u015Flevleri i\xe7in ge\xe7erlidir - bir betik i\xe7in giri\u015F noktalar\u0131. Bir uygulaman\u0131n hangi genel i\u015Flevleri destekledi\u011Fi uygulamaya ba\u011Fl\u0131d\u0131r. Bu b\xf6l\xfcmdeki komut dosyas\u0131n\u0131n bu nedenle platformunuzda \xe7al\u0131\u015Fmayabilece\u011Fini unutmay\u0131n (\xf6nceki t\xfcm komut dosyalar\u0131 sorunsuz \xe7al\u0131\u015Fsa bile). Pawn sisteminin standart da\u011F\u0131t\u0131m\u0131ndaki ara\xe7lar, terminal fonksiyonlar\u0131n\u0131 ayarlama gibi standart terminal fonksiyonlar\u0131n\u0131 destekleyen i\u015Fletim sisteminiz veya ortam\u0131n\u0131z\u0131 destekliyorsa, bu k\u0131lavuzda geli\u015Ftirilen t\xfcm komut dosyalar\u0131n\u0131 destekler."}),"\n",(0,r.jsx)(e.p,{children:'\xc7ocuklara programlama kavramlar\u0131n\u0131 \xf6\u011Fretmek i\xe7in yaln\u0131zca geli\u015Ftirilen erken bir programlama dilinin ad\u0131 "Logo" idi. Bu LISP diyalekti\u011Fi, k\xfc\xe7\xfck bir robot olan "turtle" ile kontrol alt\u0131nda bir program taraf\u0131ndan zemin \xfczerinde s\xfcr\xfclen bir robot taraf\u0131ndan programlamay\u0131 g\xf6rsel hale getirdi. Bu konsept daha sonra bilgisayar ekran\u0131ndaki bir (genellikle \xfc\xe7gen) imlecin tekrar bir programa kontrol alt\u0131nda hareket etmesiyle kopyaland\u0131. Yeni bir \xf6zellik, turtle \u015Fimdi arkas\u0131nda bir iz b\u0131rak\u0131yordu, bu da turtle\'\u0131 do\u011Fru bir \u015Fekilde programlayarak \xe7izimler olu\u015Fturman\u0131za olanak tan\u0131d\u0131 - bu turtle grafik olarak bilinir hale geldi.'}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"Genel i\u015Flevler: 83"})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:'"Turtle grafikleri" terimi, klavyedeki ok tu\u015Flar\u0131 ve mevcut konumu i\xe7in bir "turtle" kullanarak etkile\u015Fimli olarak \xe7izim yapmak i\xe7in de kullan\u0131ld\u0131. Bu y\xf6ntem, farelerin ortaya \xe7\u0131kmas\u0131ndan \xf6nce bilgisayar \xfczerinde resim \xe7izmenin k\u0131sa bir s\xfcre pop\xfcler olmas\u0131ndan \xf6nce kulland\u0131.'}),"\n",(0,r.jsx)(e.p,{children:"Listeleme: turtle.p"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"\n@keypressed(key)\n{\n    /_ mevcut konumu al */\n    yeni x, y\n    wherexy x, y\n\n    /_ mevcut konumu nas\u0131l g\xfcncelleyece\u011Fini belirle */\n    switch (key)\n    {\n        case 'u': y-- /_ yukar\u0131 */\n        case 'd': y++ /_ a\u015Fa\u011F\u0131 */\n        case 'l': x-- /_ sola */\n        case 'r': x++ /_ sa\u011Fa */\n        case '\\e': exit /_ Escape = \xe7\u0131k\u0131\u015F */\n    }\n\n    /_ imle\xe7 konumunu ayarla ve bir \u015Feyler \xe7iz */\n    moveturtle x, y\n}\n\nmoveturtle(x, y)\n{\n    gotoxy x, y\n    print '/*'\n    gotoxy x, y\n}\n\n"})}),"\n",(0,r.jsx)(e.p,{children:"Yukar\u0131daki program\u0131n giri\u015F noktas\u0131 @keypressed'dir - bir tu\u015Fa bas\u0131ld\u0131\u011F\u0131nda \xe7a\u011Fr\u0131l\u0131r. Program\u0131 \xe7al\u0131\u015Ft\u0131r\u0131rsan\u0131z ve herhangi bir tu\u015Fa basmazsan\u0131z, @keypressed i\u015Flevi hi\xe7 \xe7al\u0131\u015Fmaz; on tu\u015Fa basarsan\u0131z, @keypressed on kez \xe7al\u0131\u015F\u0131r. Bu davran\u0131\u015F\u0131 main fonksiyonu ile kar\u015F\u0131la\u015Ft\u0131r\u0131n: main fonksiyonu, beti\u011Fi ba\u015Flatt\u0131ktan hemen sonra \xe7al\u0131\u015F\u0131r ve yaln\u0131zca bir kez \xe7al\u0131\u015F\u0131r."}),"\n",(0,r.jsx)(e.p,{children:'Olay tabanl\u0131 bir programa main fonksiyonu eklemek h\xe2l\xe2 m\xfcmk\xfcnd\xfcr: main fonksiyonu yaln\u0131zca bir kez ba\u015Flatma i\xe7in hizmet eder. Bu \xf6rnek programa bir main fonksiyonu eklemek, konsol/terminal penceresini giri\u015Fte temizlemek ve belki de "turtle"\u0131n ba\u015Flang\u0131\xe7 konumunu merkeze ayarlamak i\xe7in basit bir eklemeyi i\xe7erir.'}),"\n",(0,r.jsx)(e.p,{children:'Fonksiyon tu\u015Flar\u0131 ve di\u011Fer \xf6zel tu\u015Flar\u0131n (\xf6rne\u011Fin, ok tu\u015Flar\u0131) desteklenmesi b\xfcy\xfck \xf6l\xe7\xfcde sistem ba\u011F\u0131ml\u0131d\u0131r. ANSI terminallerinde, bu tu\u015Flar Windows "DOS kutusu" ndakinden farkl\u0131 kodlar \xfcretir.'}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:'Example program\u0131n ta\u015F\u0131nabilir olma ruhuyla, yayg\u0131n harfleri ("u" yukar\u0131, "l" sola, vb.) kullanm\u0131\u015F olabilirim. Ancak bu, \xf6zel tu\u015Flar\u0131n pawn\'un yeteneklerinin \xf6tesinde oldu\u011Fu anlam\u0131na gelmez.'}),"\n",(0,r.jsx)(e.p,{children:'"Turtle" beti\u011Finde "Escape" tu\u015Fu, komutu exit arac\u0131l\u0131\u011F\u0131yla ana uygulamay\u0131 sonland\u0131r\u0131r. Basit bir pawn \xe7al\u0131\u015Fma zaman\u0131 ana bilgisayar\u0131 i\xe7in bu ger\xe7ekten i\u015Fe yarayacakt\u0131r. Beti\u011Fin bir eklenti oldu\u011Fu veya cihaz\u0131n i\xe7ine g\xf6m\xfcl\xfc oldu\u011Fu ana uygulamalarda, betik genellikle ana uygulamay\u0131 sonland\u0131ramaz.'}),"\n",(0,r.jsx)(e.h3,{id:"-\xe7oklu-olaylar",children:"\u2022 \xc7oklu Olaylar"}),"\n",(0,r.jsx)(e.p,{children:'Reaktif programlar olu\u015Fturmak i\xe7in olay tabanl\u0131 programlama modelinin avantajlar\u0131, birden \xe7ok olay\u0131n varl\u0131\u011F\u0131nda ortaya \xe7\u0131kar. Asl\u0131nda, olay tabanl\u0131 model, yaln\u0131zca bir giri\u015F noktas\u0131na sahipseniz yararl\u0131d\u0131r; e\u011Fer beti\u011Finiz yaln\u0131zca tek bir olay\u0131 i\u015Fliyorsa, o tek olay i\xe7in bir sorgulama d\xf6ng\xfcs\xfcne girebilir. \u0130\u015Fte a\u015Fa\u011F\u0131daki betik, yaln\u0131zca iki olay\u0131 kullanarak basit bir "sohbet" program\u0131n\u0131 uygular: bir tane g\xf6nderme ve bir tane alma olay\u0131. Betik, a\u011Fdaki kullan\u0131c\u0131lara (veya ba\u015Fka bir ba\u011Flant\u0131 \xfczerinden) tek sat\u0131rl\u0131k iletileri de\u011Fi\u015Ftirmelerine izin verir.'}),"\n",(0,r.jsx)(e.p,{children:'Beti\u011Fin, "datagram" g\xf6nderme ve alma i\xe7in yerel ve genel i\u015Flevleri sa\u011Flamak i\xe7in ana uygulamaya ba\u011Fl\u0131 oldu\u011Funa dikkat edin. Ana uygulaman\u0131n iletilerini nas\u0131l g\xf6nderdi\u011Fi, seri bir hat \xfczerinden mi yoksa TCP/IP kullanarak m\u0131, ana uygulama kendisi karar verebilir. Standart pawn da\u011F\u0131t\u0131m\u0131ndaki ara\xe7lar, iletileri TCP/IP a\u011F\u0131 \xfczerinden ileti\u015Fim kurarak g\xf6nderir ve daha fazla ki\u015Finin birbirleriyle sohbet edebilmesi i\xe7in bir "yay\u0131n" moduna izin verir.'}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:"Listeleme: chat.p"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"\n#include <datagram>\n\n@receivestring(const message[], const source[])\nprintf \"[%s] says: %s\\n\", source, message\n\n@keypressed(key)\n{\n    static string[100 char]\n    static index\n\n    if (key == \u2019\\e\u2019)\n        exit /* 'Esc' tu\u015Fu ile \xe7\u0131k */\n\n    echo key\n\n    if (key == \u2019\\r\u2019 || key == \u2019\\n\u2019 || index char == sizeof string)\n    {\n        string{index} = \u2019\\0\u2019 /* diziyi sonland\u0131r */\n        sendstring string\n\n        index = 0\n        string[index] = \u2019\\0\u2019\n    }\n    else\n        string{index++} = key\n}\n\necho(key)\n{\n    new string[2 char] = { 0 }\n    string{0} = key == \u2019\\r\u2019 ? \u2019\\n\u2019 : key\n    printf string\n}\n\n"})}),"\n",(0,r.jsx)(e.p,{children:'Yukar\u0131daki beti\u011Fin \xe7o\u011Fu, al\u0131nan tu\u015F vuru\u015Flar\u0131n\u0131 bir dizeye toplamak ve bu dizeyi enter tu\u015Funu g\xf6rd\xfckten sonra g\xf6ndermekle ilgilenir. "Escape" tu\u015Fu program\u0131 sonland\u0131r\u0131r. echo fonksiyonu, kullan\u0131c\u0131n\u0131n ne yazd\u0131\u011F\u0131na dair g\xf6rsel geri bildirim sa\u011Flamak i\xe7in hizmet eder: Bu fonksiyon, tu\u015Ftan s\u0131f\u0131r ile sona eren bir dize olu\u015Fturur ve bunu yazd\u0131r\u0131r.'}),"\n",(0,r.jsx)(e.p,{children:"Basitli\u011Fine ra\u011Fmen, bu beti\u011Fin ilgin\xe7 bir \xf6zelli\u011Fi vard\u0131r: \u0130letilerin g\xf6nderilme veya al\u0131nma s\u0131ras\u0131nda sabit veya \xf6nceden belirlenmi\u015F bir d\xfczen yoktur. Her ana bilgisayar\u0131n s\u0131ras\u0131yla konu\u015Fma ve dinleme yapt\u0131\u011F\u0131 bir sorgu-cevap d\xfczeni yoktur. Kullan\u0131c\u0131 kendi iletilerini yazarken yeni bir ileti al\u0131nabilir bile."}),"\n",(0,r.jsx)(e.p,{children:"\u2022 Durum Tabanl\u0131 Programlama"}),"\n",(0,r.jsx)(e.p,{children:"Olay tabanl\u0131 modeli takip eden bir programda, olaylar bireysel olarak gelir ve ayn\u0131 \u015Fekilde bireysel olarak yan\u0131tlan\u0131r. Ancak bazen bir olay, s\u0131ral\u0131 bir ak\u0131\u015F\u0131n bir par\xe7as\u0131 olabilir ve bu s\u0131rayla ele al\u0131nmal\u0131d\u0131r. \xd6rnekler, \xf6rne\u011Fin bir seri hatt\u0131n \xfczerindeki veri transfer protokolleridir. Her olay, bir komut, daha b\xfcy\xfck bir dosyan\u0131n bir par\xe7as\u0131 olan veri bir par\xe7as\u0131, bir onay veya protokolde yer alan di\u011Fer sinyalleri ta\u015F\u0131yabilir."}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h6,{id:"-bu-betik-al\u0131nan-iletileri-yaz\u0131lan-iletilerden-\xf6rne\u011Fin-iki-farkl\u0131-kayd\u0131r\u0131labilir-b\xf6lgede-ay\u0131rmaya-\xe7al\u0131\u015Fmad\u0131\u011F\u0131ndan-terminalpencere-kar\u0131\u015F\u0131k-g\xf6r\xfcnebilir-daha-geli\u015Fmi\u015F-bir-kullan\u0131c\u0131-aray\xfcz\xfc-ile-bu-basit-betik-ger\xe7ekten-g\xfczel-bir-mesaj-tabanl\u0131-sohbet-program\u0131-olabilir",children:"\u2217 Bu betik, al\u0131nan iletileri yaz\u0131lan iletilerden (\xf6rne\u011Fin, iki farkl\u0131 kayd\u0131r\u0131labilir b\xf6lgede) ay\u0131rmaya \xe7al\u0131\u015Fmad\u0131\u011F\u0131ndan, terminal/pencere kar\u0131\u015F\u0131k g\xf6r\xfcnebilir. Daha geli\u015Fmi\u015F bir kullan\u0131c\u0131 aray\xfcz\xfc ile bu basit betik ger\xe7ekten g\xfczel bir mesaj tabanl\u0131 sohbet program\u0131 olabilir."}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:"Olaylar\u0131n ak\u0131\u015F\u0131n\u0131n (ve ta\u015F\u0131d\u0131klar\u0131 veri paketlerinin) anlam ifade etmesi i\xe7in, olay tabanl\u0131 program\u0131n belirli bir el s\u0131k\u0131\u015Fma protokol\xfcne uymas\u0131 gerekir."}),"\n",(0,r.jsx)(e.p,{children:'Bir protokole uymak i\xe7in, olay tabanl\u0131 bir program, her olaya, daha \xf6nce al\u0131nan olaylar ve bu olaylara verilen yan\u0131tlar\u0131n (son) ge\xe7mi\u015Fine uygun olarak yan\u0131t vermelidir. Ba\u015Fka bir deyi\u015Fle, bir olay\u0131n i\u015Flenmesi, bir veya daha fazla sonraki olay i\xe7in bir "durum" veya "ortam" olu\u015Fturabilir.'}),"\n",(0,r.jsx)(e.p,{children:'Reaktif sistemler olu\u015Fturmak i\xe7in olduk\xe7a etkili ancak basit bir soyutlama, "otomat" veya durum makinesi olarak adland\u0131r\u0131lan bir kavramd\u0131r. Durumlar\u0131n genellikle sonlu oldu\u011Fu i\xe7in, teori genellikle bu t\xfcr otomatlar\u0131 Sonlu Durum Otomatlar\u0131 veya Sonlu Durum Makineleri olarak adland\u0131r\u0131r. Bir otomatta, bir olay\u0131n ba\u011Flam\u0131 (veya durumu) onun durumudur. Gelen bir olay, otomatonun durumuna ba\u011Fl\u0131 olarak farkl\u0131 \u015Fekillerde i\u015Flenebilir ve bir olaya yan\u0131t olarak otomat, ba\u015Fka bir duruma ge\xe7ebilir - bu bir ge\xe7i\u015F olarak adland\u0131r\u0131l\u0131r. Ba\u015Fka bir deyi\u015Fle, bir ge\xe7i\u015F, otomat\u0131n bir olaya durumu ba\u011Flam\u0131nda yan\u0131t\u0131d\u0131r.'}),"\n",(0,r.jsx)(e.p,{children:'Otomatlar yaz\u0131l\u0131m\u0131n yan\u0131 s\u0131ra mekanik cihazlarda da \xe7ok yayg\u0131nd\u0131r (Jacquard Loom\'u erken bir durum makinesi olarak g\xf6rebilirsiniz). Durumlar\u0131 sonlu olan otomatlar, belirli bir davran\u0131\u015Fa sahiptir (yani, \xf6ng\xf6r\xfclebilir) ve nispeten basit tasar\u0131mlar\u0131, bir "durum diyagram\u0131" ndan do\u011Frudan bir uygulamaya izin verir.'}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://i.ibb.co/k3kWVvy/image.png",alt:"Durum diyagram\u0131"})}),"\n",(0,r.jsx)(e.p,{children:"Bir durum diyagram\u0131nda, durumlar genellikle daireler veya yuvarlak dikd\xf6rtgenler olarak temsil edilir ve oklar ge\xe7i\u015Fleri temsil eder. Ge\xe7i\u015Fler otomat\u0131n olaylara tepkisi oldu\u011Fundan, bir ok ayn\u0131 zamanda bir \u015Feyi ger\xe7ekle\u015Ftiren bir olay olarak da g\xf6r\xfclebilir."}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:"Bir belirli bir durumda tan\u0131mlanmam\u0131\u015F bir olay/ge\xe7i\u015Fin etkisi olmad\u0131\u011F\u0131 varsay\u0131l\u0131r; sessizce g\xf6rmezden gelinir. Dolu bir nokta giri\u015F durumunu temsil eder ve program\u0131n\u0131z\u0131n (veya ana uygulaman\u0131n) ba\u015Flang\u0131\xe7ta ayarlamas\u0131 gereken durumu belirtir. Bir durum diyagram\u0131nda ayn\u0131 duruma geri d\xf6nen olay oklar\u0131n\u0131 \xe7o\u011Fu zaman atlamak yayg\u0131nd\u0131r, ancak burada t\xfcm olaylara verilen yan\u0131tlar\u0131 a\xe7\u0131k\xe7a yapmak amac\u0131yla tercih ettim."}),"\n",(0,r.jsxs)(e.p,{children:["Bu durum diyagram\u0131, ",(0,r.jsx)(e.code,{children:"/*"})," ile ba\u015Flayan ve ",(0,r.jsx)(e.code,{children:"*/"}),' ile biten yorumlar\u0131 "a\xe7ma" i\u015Flemek i\xe7indir. D\xfcz metin ve yorum i\xe7indeki metin i\xe7in durumlar bulunur, ayr\u0131ca yoruma ge\xe7ici bir giri\u015F veya \xe7\u0131k\u0131\u015F i\xe7in iki durum daha vard\u0131r. Otomat, yorumlar\u0131 etkile\u015Fimli olarak, kullan\u0131c\u0131n\u0131n klavyede yazd\u0131\u011F\u0131 karakterlerden ayr\u0131\u015Ft\u0131rmak amac\u0131yla tasarlanm\u0131\u015Ft\u0131r. Bu nedenle, otomat\u0131n tepki verdi\u011Fi tek olay tu\u015Fa basmakt\u0131r. Asl\u0131nda sadece bir olay ("tu\u015Fa basma") bulunmakta ve durum ge\xe7i\u015Fleri olay\u0131n parametresi olan tu\u015F taraf\u0131ndan belirlenmektedir.']}),"\n",(0,r.jsx)(e.p,{children:"Pawn, otomatlar\u0131 ve durumlar\u0131 do\u011Frudan dilde destekler. Her fonksiyon\u2217 iste\u011Fe ba\u011Fl\u0131 olarak kendisine bir veya daha fazla durum atayabilir. Pawn ayr\u0131ca birden fazla otomat\u0131 destekler ve her durum belirli bir otomat\u0131n bir par\xe7as\u0131d\u0131r."}),"\n",(0,r.jsx)(e.p,{children:"A\u015Fa\u011F\u0131daki betik, \xf6nceki durum diyagram\u0131n\u0131 (tek, anonim otomat olarak) uygular. D\xfcz metni yorumlardan ay\u0131rt etmek i\xe7in her ikisi de farkl\u0131 bir renkte g\xf6r\xfcnt\xfclenir."}),"\n",(0,r.jsx)(e.p,{children:"Listeleme: comment.p"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:'\n/* Yorumlar\u0131 etkile\u015Fimli olarak ayr\u0131\u015Ft\u0131r, olaylar ve bir durum makinesi kullan\u0131r */\n\nmain()\n    state plain\n\n@keypressed(key) <plain>\n{\n    state (key == \u2019/\u2019) slash\n    if (key != \u2019/\u2019)\n        echo key\n}\n\n@keypressed(key) <slash>\n{\n    state (key != \u2019/\u2019) plain\n    state (key == \u2019/*\u2019) comment\n    echo \u2019/\u2019    /* \xd6nceki durumdan gelen \u2019/\u2019 karakterini yazd\u0131r */\n    if (key != \u2019/\u2019)\n        echo key\n}\n\n@keypressed(key) <comment>\n{\n    echo key\n    state (key == \u2019/*\u2019) star\n}\n\n@keypressed(key) <star>\n{\n    echo key\n    state (key != \u2019/*\u2019) comment\n    state (key == \u2019/\u2019) plain\n}\n\necho(key) <plain, slash>\n    printchar key, yellow\n\necho(key) <comment, star>\n    printchar key, green\n\nprintchar(ch, colour)\n{\n    setattr .foreground = colour\n    printf "%c", ch\n}\n\n'})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h3,{id:"-native-functions-ve-kullan\u0131c\u0131-tan\u0131ml\u0131-operat\xf6rler-hari\xe7",children:'\u2217 "Native functions" ve kullan\u0131c\u0131 tan\u0131ml\u0131 operat\xf6rler hari\xe7.'}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:"main fonksiyonu ba\u015Flang\u0131\xe7 durumunu main olarak ayarlar ve \xe7\u0131kar; t\xfcm mant\u0131k olay tabanl\u0131d\u0131r. Bir tu\u015F, plain durumundayken geldi\u011Finde, program bir e\u011Fik \xe7izgi i\xe7in kontrol eder ve ko\u015Fullu olarak al\u0131nan tu\u015Fu yazd\u0131r\u0131r. D\xfcz ve e\u011Fik durumlar\u0131 aras\u0131ndaki etkile\u015Fim, otomatlar\u0131n tipik bir karma\u015F\u0131kl\u0131\u011F\u0131 olan bir durumu g\xf6sterir: bir etkinli\u011Fe ne tepki verece\u011Finizi, \u201Cileriye bakma\u201D veya \xf6nceki etkinliklere verilen tepkileri geri alma yetene\u011Finiz olmadan belirlemeniz gerekir. Bu, genellikle olay tabanl\u0131 sistemler i\xe7in ge\xe7erlidir - gelecek olay\u0131n ne oldu\u011Funu ne de ne zaman alaca\u011F\u0131n\u0131z\u0131 bilemezsiniz ve mevcut olaya verdi\u011Finiz yan\u0131t ne olursa olsun, muhtemelen gelecekte bu yan\u0131t\u0131 silemez ve asla olmam\u0131\u015F gibi yapamazs\u0131n\u0131z."}),"\n",(0,r.jsxs)(e.p,{children:["Bizim belirli durumumuzda, bir e\u011Fik \xe7izgi geldi\u011Finde, bu bir yorum dizisi (",(0,r.jsx)(e.code,{children:"/*"}),') ba\u015Flang\u0131c\u0131 olabilir, ancak zorunlu de\u011Fildir. \xc7\u0131kar\u0131m yoluyla, e\u011Fik karakterin al\u0131nd\u0131\u011F\u0131 anda onu hangi renkte yazd\u0131raca\u011F\u0131m\u0131za karar veremeyiz. Bu nedenle, geri tutar\u0131z. Ancak, bu karakterin geri tutuldu\u011Funa dair bir global de\u011Fi\u015Fken yoktur - asl\u0131nda, bu betikte fonksiyon parametreleri haricinde hi\xe7bir de\u011Fi\u015Fken belirtilmemi\u015Ftir. Bir karakterin geri tutuldu\u011Funa dair bilgi, otomat\u0131n durumunda "gizlenmi\u015Ftir".']}),"\n",(0,r.jsx)(e.p,{children:"Betikte g\xf6r\xfclebilece\u011Fi gibi, durum de\u011Fi\u015Fiklikleri ko\u015Fula ba\u011Fl\u0131 olabilir. Ko\u015Ful iste\u011Fe ba\u011Fl\u0131d\u0131r ve ayn\u0131 zamanda durum de\u011Fi\u015Ftirmek i\xe7in yayg\u0131n if-else yap\u0131s\u0131n\u0131 da kullanabilirsiniz."}),"\n",(0,r.jsx)(e.p,{children:"Duruma ba\u011Fl\u0131 olma durumu, yaln\u0131zca olay fonksiyonlar\u0131 i\xe7in ge\xe7erli de\u011Fildir. Di\u011Fer fonksiyonlar da durum bildirimlerine sahip olabilir, \xf6rne\u011Fin echo fonksiyonu bunu g\xf6sterir. Bir fonksiyon birka\xe7 durum i\xe7in ayn\u0131 uygulamaya sahipse, yaln\u0131zca t\xfcm uygulanabilir durumlar\u0131 belirtmeniz yeterlidir. Echo fonksiyonu i\xe7in d\xf6rt durumu ele almak i\xe7in iki uygulama bulunmaktad\u0131r.\u2020"}),"\n",(0,r.jsxs)(e.p,{children:['Ancak, bir otomat\u0131n t\xfcm olaylara her durumda haz\u0131r olmas\u0131 gerekir. Otomat\u0131n genellikle gelecek olaylar hakk\u0131nda ne alaca\u011F\u0131n\u0131z\u0131 ne zaman alaca\u011F\u0131n\u0131z\u0131 kontrol etmedi\u011Fini, bu nedenle bir olay\u0131 baz\u0131 durumlarda anlaml\u0131 olabilecek durumlar\u0131n d\u0131\u015F\u0131nda i\u015Flememek, hatal\u0131 kararlar alman\u0131za yol a\xe7abilir. S\u0131k\xe7a, baz\u0131 olaylar yaln\u0131zca belirli durumlarda anlaml\u0131d\u0131r ve di\u011Fer durumlar\u0131n t\xfcm\xfcnde bir hata veya "s\u0131f\u0131rlama" prosed\xfcr\xfcn\xfc tetiklemeleri gerekir. Bu "hata" durumunu ele alma i\u015Flevi, a\xe7\u0131k\xe7a belirtilmemi\u015F durum isimleri varsa, bir\xe7ok durum ad\u0131n\u0131 ta\u015F\u0131yabilir. Dolay\u0131s\u0131yla, \xf6rne\u011Fin bunlar\u0131 a\xe7\u0131k\xe7a belirtmediyseniz, iki uygulama i\xe7in ',(0,r.jsx)(e.code,{children:"echo(key) <>"})," imzas\u0131n\u0131 kullanabilirsiniz (ancak her ikisi i\xe7in de kullanamazs\u0131n\u0131z)."]}),"\n",(0,r.jsxs)(e.p,{children:['Yaln\u0131zca bir anonim otomat \xf6nceden tan\u0131mlanm\u0131\u015Ft\u0131r. E\u011Fer bir program birden fazla otomat i\xe7eriyorsa, di\u011Fer otomatlar hem fonksiyonun durum s\u0131n\u0131fland\u0131r\u0131c\u0131s\u0131nda hem de durum talimat\u0131nda belirtilmelidir. Bunun i\xe7in otomat ve durum adlar\u0131n\u0131 iki nokta \xfcst \xfcste ile ay\u0131rarak otomat ve durum ad\u0131n\u0131 ekleyin. Yani "parser',":slash",'" ifadesi, parser otomat\u0131n\u0131n slash durumunu temsil eder. Bir fonksiyon yaln\u0131zca tek bir otomat\u0131n bir par\xe7as\u0131 olabilir; bir fonksiyonun ayn\u0131 otomat\u0131n farkl\u0131 durumlar\u0131 i\xe7in bir uygulamas\u0131n\u0131 payla\u015Fabilirsiniz, ancak bu fonksiyonu farkl\u0131 otomatlar\u0131n durumlar\u0131 i\xe7in kullanamazs\u0131n\u0131z.']}),"\n",(0,r.jsx)(e.h3,{id:"-giri\u015F-fonksiyonlar\u0131-ve-otomat-teorisi",children:"\u2217 Giri\u015F fonksiyonlar\u0131 ve otomat teorisi"}),"\n",(0,r.jsx)(e.p,{children:'Durum makineleri ve "otomat teorisi" temelleri, mekanik tasar\u0131mdan ve pn\xf6matik/elektrik anahtar devrelerinden gelir (transist\xf6rler yerine r\xf6leler kullanarak). Tipik \xf6rnekler, madeni para kabul eden makineler, trafik lamba kontrol\xfc ve ileti\u015Fim anahtar devreleridir. Bu uygulamalarda, sa\u011Flaml\u0131k ve \xf6ng\xf6r\xfclebilirlik esast\u0131r ve eylemlerin (\xe7\u0131kt\u0131) olaylara (giri\u015F) de\u011Fil, durumlara ba\u011Fl\u0131 oldu\u011Fu durumda bu hedeflere en iyi \u015Fekilde ula\u015F\u0131ld\u0131\u011F\u0131 bulunmu\u015Ftur.'}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h3,{id:"-ayn\u0131-uygulamaya-sahip-bir-fonksiyonun-hi\xe7bir-durum-s\u0131n\u0131fland\u0131r\u0131c\u0131ya-ihtiyac\u0131-yoktur---bkz-printchar",children:"* Ayn\u0131 uygulamaya sahip bir fonksiyonun hi\xe7bir durum s\u0131n\u0131fland\u0131r\u0131c\u0131ya ihtiyac\u0131 yoktur - bkz. printchar."}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://i.ibb.co/PYnBGS9/image.png",alt:"pcl"})}),"\n",(0,r.jsx)(e.h6,{id:"\u015Fekil-1-yaya-ge\xe7idi-\u0131\u015F\u0131klar\u0131",children:"\u015Eekil 1: Yaya ge\xe7idi \u0131\u015F\u0131klar\u0131"}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:"Bir duruma giri\u015F (iste\u011Fe ba\u011Fl\u0131 olarak) bir etkinlik ba\u015Flat\u0131r; olaylar durum de\u011Fi\u015Fikliklerine neden olur, ancak di\u011Fer i\u015Flemleri ger\xe7ekle\u015Ftirmez."}),"\n",(0,r.jsx)(e.p,{children:'Yaya ge\xe7idi \u0131\u015F\u0131klar\u0131 sisteminde, ara\xe7lar ve yaya i\xe7in \u0131\u015F\u0131klar\u0131n senkronize olmas\u0131 gerekir. A\xe7\u0131k\xe7a, trafik i\xe7in ye\u015Fil \u0131\u015F\u0131k ve yaya i\xe7in "y\xfcr\xfcme" i\u015Fareti kombinasyonu felaket bir tarif olacakt\u0131r. Ayn\u0131 \u015Fekilde, sar\u0131/y\xfcr\xfcy\xfc\u015F kombinasyonunu da hemen reddedebiliriz - bu \xe7ok tehlikeli olabilir. Bu nedenle, ele al\u0131nmas\u0131 gereken d\xf6rt kombinasyon kal\u0131r. A\u015Fa\u011F\u0131daki \u015Fekil, yaya ge\xe7idi \u0131\u015F\u0131klar\u0131 i\xe7in bir durum diyagram\u0131d\u0131r. T\xfcm s\xfcre\xe7 bir d\xfc\u011Fme ile etkinle\u015Ftirilir ve bir zamanlay\u0131c\u0131da \xe7al\u0131\u015F\u0131r.'}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://i.ibb.co/9wNR3ry/image.png",alt:"pcl"})}),"\n",(0,r.jsx)(e.p,{children:"Durum red/walk zaman a\u015F\u0131m\u0131na u\u011Frad\u0131\u011F\u0131nda, durum hemen green/wait'a d\xf6nemez, \xe7\xfcnk\xfc o s\u0131rada yolu ge\xe7en yaya insanlar biraz zaman ge\xe7irmelidir - durum red/wait bunu sa\u011Flar."}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:"Demonstrasyon amac\u0131yla, bu yaya ge\xe7idinin eklenmi\u015F bir \xf6zelli\u011Fi vard\u0131r: e\u011Fer \u0131\u015F\u0131k zaten k\u0131rm\u0131z\u0131ysa ve bir yayay\u0131 butona basarken, yayan\u0131n ge\xe7i\u015F s\xfcresi uzat\u0131l\u0131r. E\u011Fer durum red/wait ise ve d\xfc\u011Fmeye bas\u0131l\u0131rsa, red/walk durumuna geri d\xf6ner. K\u0131rm\u0131z\u0131/y\xfcr\xfc durumu i\xe7in ve red/wait durumu i\xe7in kutu i\xe7ine al\u0131nm\u0131\u015F olan buton olay\u0131n\u0131 i\u015Fleme durumu, yaln\u0131zca bir notasyon kolayl\u0131\u011F\u0131d\u0131r: benzer \u015Fekilde red/walk durumundan iki ok da \xe7izebilirdim. Betik kaynak kodu (a\u015Fa\u011F\u0131da bulunan) bu ayn\u0131 notasyon kolayl\u0131\u011F\u0131n\u0131 yans\u0131tmaktad\u0131r."}),"\n",(0,r.jsx)(e.p,{children:'Pawn dilindeki uygulamada, olay fonksiyonlar\u0131 \u015Fimdi her zaman bir durum de\u011Fi\u015Fikli\u011Fi veya bo\u015F bir ifade olacak \u015Fekilde tek bir ifadeye sahiptir. Durum de\u011Fi\u015Fikli\u011Fi yapmayan olaylar diyagramda bulunmasa da, betikte i\u015Flenmelidir; bu nedenle hi\xe7bir \u015Fey yapmayan "geri d\xf6n\xfc\u015F" olay fonksiyonlar\u0131 vard\u0131r.'}),"\n",(0,r.jsx)(e.p,{children:"\xc7\u0131kt\u0131, bu \xf6rnek programda yaln\u0131zca konsolda yazd\u0131r\u0131lan mesajlardan olu\u015Fur ve t\xfcm i\u015Flemler entry adl\u0131 \xf6zel fonksiyonlarda ger\xe7ekle\u015Ftirilir. Entry fonksiyonu, bir duruma giri\u015F yap\u0131ld\u0131\u011F\u0131nda (ba\u011Fl\u0131 oldu\u011Fu durum), \xe7a\u011Fr\u0131ld\u0131\u011F\u0131nda \xe7a\u011Fr\u0131l\u0131r. Entry fonksiyonunun, otomat\u0131n zaten i\xe7inde bulundu\u011Fu duruma \"ge\xe7i\u015F\" yap\u0131ld\u0131\u011F\u0131nda da \xe7a\u011Fr\u0131ld\u0131\u011F\u0131n\u0131 unutmay\u0131n: durum red_walk oldu\u011Funda bir @keypressed \xe7a\u011Fr\u0131s\u0131 durumu red_walk'a ayarlar (ki zaten i\xe7inde bulundu\u011Fu durumdur) ve red_walk'\u0131n giri\u015F fonksiyonunu \xe7al\u0131\u015Ft\u0131r\u0131r - bu bir durumun yeniden giri\u015Fidir."}),"\n",(0,r.jsx)(e.p,{children:"Listeleme: traffic.p"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:'\n/* trafik lambas\u0131 senkronizat\xf6r\xfc, olay tabanl\u0131 bir modelde durumlar\u0131 kullan\u0131r */\n#include <time>\n\nmain()                     state green_wait\n\n@keypressed(key) <green_wait>         state yellow_wait\n@keypressed(key) <red_walk, red_wait>     state red_walk\n@keypressed(key) <>             {} /* geriye d\xfc\u015Fme */\n\n@timer() <yellow_wait>            state red_walk\n@timer() <red_walk>             state red_wait\n@timer() <red_wait>             state green_wait\n@timer() <>                 {} /* geriye d\xfc\u015Fme */\n\nentry() <green_wait>\n    print "Ye\u015Fil / Y\xfcr\xfcme\\n"\n\nentry() <yellow_wait>\n{\n    print "Sar\u0131 / Y\xfcr\xfcme\\n"\n    settimer 2000\n}\n\nentry() <red_walk>\n{\n    print "K\u0131rm\u0131z\u0131 / Y\xfcr\xfc\\n"\n    settimer 5000\n}\n\nentry() <red_wait>\n{\n    print "K\u0131rm\u0131z\u0131 / Y\xfcr\xfcme\\n"\n    settimer 2000\n}\n\n'})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:'Bu \xf6rnek program\u0131n, ev sahibi uygulama/ortam\u0131na ek bir ba\u011F\u0131ml\u0131l\u0131\u011F\u0131 vard\u0131r: "keypressed" olay fonksiyonunun yan\u0131 s\u0131ra, ev sahibinin ayarlanabilir bir "@timer" olay\u0131n\u0131 da sa\u011Flamas\u0131 gerekir. Zaman fonksiyonlar\u0131 nedeniyle, betik, beti\u011Fin \xfcst k\u0131sm\u0131na "time.inc" adl\u0131 sistem dosyas\u0131n\u0131 ekler.'}),"\n",(0,r.jsx)(e.p,{children:"Durum de\u011Fi\u015Fikli\u011Fi i\xe7eren olay fonksiyonlar\u0131 beti\u011Fin \xfcst k\u0131sm\u0131nda yer almaktad\u0131r. Fonksiyonlar, bir tablo benzeri bir yap\u0131y\u0131 \xe7a\u011Fr\u0131\u015Ft\u0131rmak i\xe7in her biri tek sat\u0131r alacak \u015Fekilde d\xfczenlenmi\u015Ftir. Bu \xf6rnekte t\xfcm durum de\u011Fi\u015Fiklikleri ko\u015Fulsuzdur, ancak giri\u015F fonksiyonlar\u0131yla ko\u015Fullu durum de\u011Fi\u015Fiklikleri de kullan\u0131labilir. Alt k\u0131s\u0131m olay fonksiyonlar\u0131d\u0131r."}),"\n",(0,r.jsx)(e.p,{children:"Durum red_walk i\xe7in iki ge\xe7i\u015F bulunmaktad\u0131r \u2014veya birden fazla durumu tek bir olay fonksiyonuna etki etkisi olarak kabul ederseniz \xfc\xe7t\xfcr: yellow_wait'ten ve red_walk ve red_wait kombinasyonundan. Bu ge\xe7i\u015Fler, t\xfcm giri\u015F fonksiyonlar\u0131n\u0131 ayn\u0131 ge\xe7i\u015F fonksiyonu arac\u0131l\u0131\u011F\u0131yla ge\xe7irir, bu da kodu azalt\u0131r ve basitle\u015Ftirir."}),"\n",(0,r.jsx)(e.p,{children:'Otomat teorisinde, bir otomatonun durum giri\u015Fleriyle \xe7\u0131k\u0131\u015F\u0131 ili\u015Fkilendirdi\u011Fi, bu \xf6rnekteki yaya ge\xe7idi \u0131\u015F\u0131klar\u0131 gibi, bir "Moore otomatonu" dur; bir otomatonun \xe7\u0131k\u0131\u015F\u0131 (duruma ba\u011Fl\u0131) olaylar veya ge\xe7i\u015Flerle ili\u015Fkilendirdi\u011Fi bir "Mealy otomatonu"dur. Sayfa 40\'taki etkile\u015Fimli yorum \xe7\xf6z\xfcc\xfc, tipik bir Mealy otomatonudur. \u0130ki t\xfcr e\u015Fde\u011Ferdir: Bir Mealy otomat\u0131n\u0131 bir Moore otomatonuna d\xf6n\xfc\u015Ft\xfcrmek ve tersi m\xfcmk\xfcnd\xfcr, ancak bir Moore otomatonu ayn\u0131 davran\u0131\u015F\u0131 uygulamak i\xe7in daha fazla duruma ihtiya\xe7 duyabilir. Uygulamada, modeller genellikle kar\u0131\u015Ft\u0131r\u0131l\u0131r, genel olarak "Moore otomatonu" tasar\u0131m\u0131 ve birka\xe7 durumu kurtaran "Mealy durumlar\u0131" ile.'}),"\n",(0,r.jsx)(e.p,{children:"\u2022 Durum De\u011Fi\u015Fkenleri"}),"\n",(0,r.jsx)(e.p,{children:"\xd6nceki \xf6rnek, pawn ile durum programlamas\u0131n\u0131n baz\u0131 \xf6zelliklerini g\xf6stermek amac\u0131yla olu\u015Fturulmu\u015Ftu, ancak yaya ge\xe7idi lambas\u0131n\u0131n modeli \xe7ok ger\xe7ek\xe7i de\u011Fil. \u0130lk eksik olan \u015Fey adil bir derece: yayalar, ara\xe7 trafi\u011Fini s\xfcrekli olarak engelleyememelidir. Ara\xe7 trafi\u011Fi, yayalar\u0131n yolun kar\u015F\u0131s\u0131na ge\xe7me zaman diliminden sonra belirli bir s\xfcre i\xe7in ye\u015Fil \u0131\u015F\u0131k g\xf6rmelidir. \u0130kinci olarak, bir\xe7ok trafik lambas\u0131 uzaktan kontrol yetene\u011Fine sahiptir, bu da acil trafik (ambulans, itfaiye, vb.) ye\u015Fil \u0131\u015F\u0131klar\u0131 zorla a\xe7abilir. Bu t\xfcr uzaktan kontrol\xfcn iyi bilinen bir \xf6rne\u011Fi mirt sistemi (Mobil K\u0131z\u0131l\xf6tesi Verici) ancak de facto bir standart bulunmamaktad\u0131r \u2014 Hollanda \xf6rne\u011Fin vetag adl\u0131 bir radyografik sistem kullanmaktad\u0131r."}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:"Yaya ge\xe7idi lambas\u0131 i\xe7in yeni durum diyagram\u0131nda iki daha fazla durum bulunmaktad\u0131r, ancak daha da \xf6nemlisi: etkinlikler aras\u0131nda veri saklamak ve bu veriyi durumlar aras\u0131nda payla\u015Fmak gereklidir. Yaya, durum k\u0131rm\u0131z\u0131_bekle iken d\xfc\u011Fmeye bast\u0131\u011F\u0131nda d\xfc\u011Fmeye hemen tepki vermek istemeyiz (bu adil bir kurald\u0131), ayn\u0131 zamanda d\xfc\u011Fmeyi ihmal etmek veya \"unutmak\" da istemeyiz. Ba\u015Fka bir deyi\u015Fle, durum ye\u015Fil_bekle_aral\u0131k'a ge\xe7eriz, ancak bas\u0131ma ba\u011Fl\u0131 olarak de\u011Fil, bas\u0131m\u0131, durum ye\u015Fil_bekle_aral\u0131k'tan ayr\u0131l\u0131rken al\u0131nacak bir karar i\xe7in hat\u0131rlar\u0131z."}),"\n",(0,r.jsx)(e.p,{children:'Otomatlar, reaktif/etkile\u015Fimli sistemlerde kontrol ak\u0131\u015F\u0131n\u0131 modelleme konusunda m\xfckemmel olsalar da, veri ak\u0131\u015F\u0131 geleneksel olarak zay\u0131f bir noktad\u0131r. Nedenini anlamak i\xe7in her etkinli\u011Fin ayr\u0131 ayr\u0131 bir i\u015Flev taraf\u0131ndan i\u015Flendi\u011Fini ve bu i\u015Flevin d\xf6nd\xfc\u011F\xfcnde yerel de\u011Fi\u015Fkenlerin kayboldu\u011Funu d\xfc\u015F\xfcn\xfcn. Dolay\u0131s\u0131yla, yerel de\u011Fi\u015Fkenler bir etkinlikten di\u011Ferine veri iletilmesi i\xe7in kullan\u0131lamaz. Global de\u011Fi\u015Fkenler, bir \xe7\xf6z\xfcm sunsalar da dezavantajlara sahiptir: global kapsam ve "sonsuz" \xf6m\xfcr. Bir de\u011Fi\u015Fken yaln\u0131zca bir durumun etkinlik i\u015Fleyicilerinde kullan\u0131l\u0131yorsa, onu di\u011Fer durumlardan korumak i\xe7in di\u011Ferlerinden gizlemek istenir. Ayn\u0131 \u015Fekilde, de\u011Fi\u015Fkenin etkin oldu\u011Fu durum(lar)a \xf6zg\xfc \xf6m\xfcrle\u015Ftirmek, bellek ayak izini azalt\u0131r. "Durum de\u011Fi\u015Fkenleri", de\u011Fi\u015Fken kapsam\u0131 ve \xf6mr\xfcn\xfc i\u015Flevler veya mod\xfcller yerine bir dizi duruma ba\u011Flayan, bu durumlar d\u0131\u015F\u0131nda eri\u015Filemeyen de\u011Fi\u015Fkenleri pawn ile standart sonlu durum makinesini (veya otomat) zenginle\u015Ftirir.'}),"\n",(0,r.jsx)(e.p,{children:"Pawn, bir durum s\u0131n\u0131fland\u0131r\u0131c\u0131s\u0131 ile bildirilen de\u011Fi\u015Fkenleri kullanarak bu kavram\u0131 ger\xe7ekle\u015Ftirir. Bu de\u011Fi\u015Fkenlere sadece belirtilen durumlardan eri\u015Filebilir ve bu de\u011Fi\u015Fkenlerin tuttu\u011Fu bellek, otomat ba\u015Fka bir durumda (liste d\u0131\u015F\u0131nda) oldu\u011Funda ba\u015Fka ama\xe7lar i\xe7in yeniden kullan\u0131labilir. Durum s\u0131n\u0131fland\u0131r\u0131c\u0131s\u0131 d\u0131\u015F\u0131nda, bir durum de\u011Fi\u015Fkeninin bildirimi, bir global de\u011Fi\u015Fkenin bildirimi ile benzerdir. A\u015Fa\u011F\u0131daki listelemede button_memo de\u011Fi\u015Fkeninin bildirimi, bu kavram\u0131 a\xe7\u0131klar."}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:"Listeleme: traffic2.p"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:'\n/* Daha ger\xe7ek\xe7i bir trafik lambas\u0131 senkronizat\xf6r\xfc, acil ara\xe7lar i\xe7in bir "ge\xe7ersiz k\u0131lma" i\xe7erir \n*/\n\n#include <time>\n\nmain()\n    state green_wait_interim\n\nnew bool: button_memo <red_wait, green_wait_interim, yellow_wait>\n\n@keypressed(key)\n{\n    switch (key)\n    {\n        case \' \': button_press\n        case \'/*\': mirt_detect\n    }\n}\n\nbutton_press() <green_wait>\n    state yellow_wait\n\nbutton_press() <red_wait, green_wait_interim>\n    button_memo = true\n\nbutton_press() <>         /* yedek */\n    {}\n\nmirt_detect()\n    state mirt_override\n\n@timer() <yellow_wait>\n    state red_walk\n\n@timer() <red_walk>\n    state red_wait\n\n@timer() <red_wait>\n    state green_wait_interim\n\n@timer() <green_wait_interim>\n{\n    state (!button_memo) green_wait\n    state (button_memo) yellow_wait\n}\n\n@timer() <mirt_override>\n    state green_wait\n\n@timer() <>             /* yedek */\n    {}\n\nentry() <green_wait_interim>\n{\n    print "Ye\u015Fil / Y\xfcr\xfcme\\n"\n    settimer 5000\n}\n\nentry() <yellow_wait>\n{\n    print "Sar\u0131 / Y\xfcr\xfcme\\n"\n    button_memo = false\n    settimer 2000\n}\n\nentry() <red_walk>\n{\n    print "K\u0131rm\u0131z\u0131 / Y\xfcr\xfc\\n"\n    settimer 5000\n}\n\nentry() <red_wait>\n{\n    print "K\u0131rm\u0131z\u0131 / Y\xfcr\xfcme\\n"\n    settimer 2000\n}\n\nentry() <mirt_override>\n{\n    print "Ye\u015Fil / Y\xfcr\xfcme\\n"\n    settimer 5000\n}\n\n'})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:"E\u011Fer bir yayal\u0131, mirt etkinli\u011Fi s\u0131ras\u0131nda d\xfc\u011Fmeye basarsa, bu d\xfc\u011Fme basma i\u015Flemi unutulur. Acil durumlar s\u0131k s\u0131k meydana gelmiyorsa, bu muhtemelen k\xfc\xe7\xfck bir rahats\u0131zl\u0131k olacakt\u0131r; ve bu da d\xfczeltilmesi kolay bir durumdur."}),"\n",(0,r.jsx)(e.p,{children:"\u2022 Durum programlama sonland\u0131rma"}),"\n",(0,r.jsx)(e.p,{children:"Durumlar, her zaman fark\u0131nda olmasak da yayg\u0131nd\u0131r. Sonlu durum makineleri kavram\u0131 genellikle genellikle mekanik cihazlar\u0131 taklit eden programlara ve ileti\u015Fim protokollerini uygulayan yaz\u0131l\u0131mlara uygulanm\u0131\u015Ft\u0131r. Olay tabanl\u0131 pencere sistemlerinin ortaya \xe7\u0131kmas\u0131yla, durum makineleri \u015Fimdi masa\xfcst\xfc programlar\u0131n\u0131n GUI tasar\u0131m\u0131nda da ortaya \xe7\u0131kmaktad\u0131r. Durumlar, taray\u0131c\u0131 ve web sitesi betik ana bilgisayar\u0131n\u0131n zay\u0131f bir ba\u011Flant\u0131s\u0131 oldu\u011Fu web programlar\u0131nda bolca bulunur, ancak web uygulamalar\u0131ndaki durum makinesi genellikle ad hoc bir \u015Fekilde uygulan\u0131r."}),"\n",(0,r.jsx)(e.p,{children:"Durumlar, yayg\u0131n problemlerde ve bilmece sorular\u0131nda da tan\u0131nabilir. Bir lahanay\u0131, bir koyunu ve bir kurtu nehrin kar\u015F\u0131s\u0131na ta\u015F\u0131mas\u0131 gereken iyi bilinen bilmece \xf6rne\u011Finde, durumlar a\xe7\u0131kt\u0131r - bilmecenin hilesi, yasak durumlar\u0131 ka\xe7\u0131nmakt\u0131r. Ancak \u015Fimdi her yerde durumlar g\xf6rd\xfc\u011F\xfcm\xfcz i\xe7in, g\xf6rev a\u015F\u0131r\u0131ya ka\xe7mamak."}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:'\xd6rne\u011Fin, bir yaya ge\xe7idi \u0131\u015F\u0131\u011F\u0131n\u0131n ikinci uygulamas\u0131nda, sayfa 47\'de g\xf6sterildi\u011Fi gibi, bir karar i\xe7in bir kriteri tutmak i\xe7in bir de\u011Fi\u015Fken (button_memo) kulland\u0131m. Alternatif bir uygulama, "k\u0131rm\u0131z\u0131-bekle-ve-d\xfc\u011Fmeye-bas" ve "ye\u015Fil-bekle-araim-vay-d\xfc\u011Fmeye-bas" durumlar\u0131n\u0131 tutmak i\xe7in birka\xe7 durum daha eklemek olabilir. Daha fazla de\u011Fi\u015Fken gerekli olmazd\u0131, ancak daha karma\u015F\u0131k bir durum diyagram\u0131 ve uygulama maliyeti ile birlikte. Genel olarak, durum say\u0131s\u0131n\u0131n k\xfc\xe7\xfck tutulmas\u0131 \xf6nemlidir.'}),"\n",(0,r.jsx)(e.p,{children:'Otomatlar, tepkisel ve etkile\u015Fimli sistemleri modellemek i\xe7in iyi bir soyutlama sa\u011Flasa da, do\u011Fru bir diyagrama ula\u015Fmak kolay de\u011Fildir ve bazen tamamen zordur. \xc7o\u011Fu zaman, durumlar ve olaylar i\xe7in "g\xfcne\u015Fli g\xfcn senaryosu" \xf6nce \xe7izilir ve bundan sap\u0131lan her \u015Fey ard\u0131ndan plans\u0131z bir \u015Fekilde eklenir. Bu yakla\u015F\u0131m, olay ve durum kombinasyonlar\u0131n\u0131n unutulma riskini ta\u015F\u0131r ve ger\xe7ekten iki farkl\u0131 kitap/makale yazar\u0131n\u0131n (sayfa 40\'taki gibi) kar\u015F\u0131la\u015Ft\u0131\u011F\u0131m iki yorum ayr\u0131\u015Ft\u0131r\u0131c\u0131 diyagram\u0131 hatas\u0131yla kar\u015F\u0131la\u015Ft\u0131m. Bunun yerine, olaylara ve bireysel olaylara olan yan\u0131tlara odaklanman\u0131z\u0131 tavsiye ederim. Her durum i\xe7in her olay d\xfc\u015F\xfcn\xfclmelidir; olaylar\u0131 genel ama\xe7l\u0131 bir yedek \xfczerinden \xe7ok h\u0131zl\u0131 bir \u015Fekilde y\xf6nlendirmeyin.'}),"\n",(0,r.jsx)(e.p,{children:'Bu kitapta ka\xe7\u0131nd\u0131\u011F\u0131m \u015Fey, durum diyagramlar\u0131ndaki g\xf6sterim i\xe7in formel bir a\xe7\u0131klamad\u0131r - k\u0131smen \xe7o\u011Funlukla notasyonla uyumludur. Bir durum i\xe7in, yuvarlak dikd\xf6rtgen, durumun ad\u0131n\u0131 ve iste\u011Fe ba\u011Fl\u0131 olarak durum giri\u015F i\u015Flevinin k\u0131sa bir a\xe7\u0131klamas\u0131n\u0131 i\xe7erir. Ge\xe7i\u015F i\xe7in ok, olay\u0131n ad\u0131n\u0131 (veya yar\u0131-olay\u0131n\u0131), parantez i\xe7inde iste\u011Fe ba\u011Fl\u0131 bir ko\u015Fulu ve bir e\u011Fik \xe7izgi ("/") arkas\u0131nda iste\u011Fe ba\u011Fl\u0131 bir eylemi i\xe7erir.'}),"\n",(0,r.jsx)(e.p,{children:"\u2022 Program do\u011Frulama"}),"\n",(0,r.jsx)(e.p,{children:'Derleyici/ yorumcu t\xfcm hatalar\u0131 yakalamazsa ne olacak? Bu retorik bir soru, teknik ve felsefi y\xf6nleri olan bir sorudur. T\xfcm teknik olmayan y\xf6nleri pas ge\xe7ece\u011Fim ve sadece bir dilin "ifade yetene\u011Fi" ile programlar\u0131n\u0131n "zorunlu do\u011Frulu\u011Fu" (veya "kan\u0131tlanabilir do\u011Fruluk") aras\u0131nda bir denge oldu\u011Funu belirtece\u011Fim. Bir dilin \xe7ok "kat\u0131" olmas\u0131, oyuncunun oyuncunun diliyle ba\u015Fa \xe7\u0131kmas\u0131n\u0131 sa\u011Flamaz; aksine, "\xe7\xf6z\xfclmesi gereken sorun" ger\xe7ek m\xfccadele olmal\u0131 ve dil ger\xe7ek \xe7\xf6z\xfcm\xfc ifade etmek i\xe7in basit bir ara\xe7 olmal\u0131d\u0131r.'}),"\n",(0,r.jsx)(e.p,{children:'Pawn dilinin amac\u0131, geli\u015Ftiriciye program\u0131n istendi\u011Fi gibi davran\u0131p davranmad\u0131\u011F\u0131n\u0131 test etmek i\xe7in bilgilendirici ve kullan\u0131m\u0131 kolay bir mekanizma sa\u011Flamakt\u0131r. Bu mekanizmaya "assertions" denir ve, assertion\'\u0131n fikri "s\xf6zle\u015Fmeyle tasar\u0131m" fikri ile en kolay a\xe7\u0131klan\u0131r olmas\u0131na ra\u011Fmen, assertions fikrinden \xf6nce var olan bir konsepttir.'}),"\n",(0,r.jsx)(e.p,{children:'"S\xf6zle\u015Fmeyle tasar\u0131m" paradigm\u0131, hatal\u0131 ko\u015Fullarla ba\u015Fa \xe7\u0131kmak i\xe7in alternatif bir yakla\u015F\u0131m sa\u011Flar. Temel d\xfc\u015F\xfcnce, programc\u0131n\u0131n g\xf6revini, yaz\u0131l\u0131m\u0131n \xe7al\u0131\u015Fmas\u0131 gereken ko\u015Fullar\u0131 ve ortam\u0131 bildi\u011Fidir. Bu t\xfcr bir ortamda, her i\u015Flev, m\xfc\u015Fterinin i\u015Flemleri ger\xe7ekle\u015Ftirmesine izin vermeden \xf6nce ge\xe7erli olmas\u0131 gereken ko\u015Fullar\u0131, assertion\'lar bi\xe7iminde belirtir. Ayr\u0131ca, i\u015Flev, i\u015Flemini tamamlad\u0131ktan sonraki herhangi bir ko\u015Fulu da belirtebilir. Bu, i\u015Flevin "s\xf6zle\u015Fmesi"dir.'}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:'"Design by contract" terimi Bertrand Meyer taraf\u0131ndan t\xfcretildi ve ilkeleri \xf6nceden belirlenmi\u015F mant\u0131k ve algoritmik analize dayanmaktad\u0131r.'}),"\n",(0,r.jsx)(e.p,{children:"\u2022 Precondition'lar, giri\u015F parametrelerinin ve \xe7evresel \xf6zelliklerinin ge\xe7erli de\u011Ferlerini belirtir;\n\u2022 Postcondition'lar, \xe7\u0131k\u0131\u015F\u0131 ve (varsa) de\u011Fi\u015Ftirilmi\u015F ortam\u0131 belirtir;\n\u2022 Invariant'lar, bir fonksiyonun i\xe7indeki ana noktalarda her durumda do\u011Fru olmas\u0131 gereken ko\u015Fullar\u0131 belirtir."}),"\n",(0,r.jsx)(e.p,{children:"\xd6rne\u011Fin, bir say\u0131n\u0131n karek\xf6k\xfcn\xfc hesaplayan bir fonksiyon, giri\u015F parametresinin negatif olmamas\u0131n\u0131 belirtebilir. Bu bir precondition'dur. Ayr\u0131ca, \xe7\u0131kt\u0131s\u0131n\u0131n karesi al\u0131nd\u0131\u011F\u0131nda giri\u015F de\u011Feri %0.01 olmal\u0131d\u0131r. Bu bir postcondition'dur; rutinin do\u011Fru \xe7al\u0131\u015Ft\u0131\u011F\u0131n\u0131 do\u011Frular. Karek\xf6k\xfc hesaplamak i\xe7in \"bisection\" y\xf6ntemi kullanmak uygun bir yol olabilir. Bu algoritma her iterasyonda en az bir ekstra bit (ikili rakam) hassasiyet sa\u011Flar. Bu bir invariant't\u0131r (ancak bu kontrol\xfc yapmak zor bir invariant olabilir)."}),"\n",(0,r.jsx)(e.p,{children:"Precondition'lar, postcondition'lar ve invariant'lar, hepsi bir testten olu\u015Ftu\u011Fu ve ba\u015Far\u0131s\u0131z bir testin uygulamadaki bir hatay\u0131 g\xf6sterdi\u011Fi a\xe7\u0131dan benzerdir. Sonu\xe7 olarak, precondition'lar\u0131, postcondition'lar\u0131 ve invariant'lar\u0131 tek bir yap\u0131 olan \"assertion\" ile uygulayabilirsiniz. Precondition'lar i\xe7in assertion'lar\u0131 rutinin ba\u015Flang\u0131c\u0131nda yaz\u0131n; invariant'lar i\xe7in, invariant'\u0131n ge\xe7erli olmas\u0131 gereken yerde bir assertion yaz\u0131n; postcondition'lar i\xe7in her \"return\" ifadesinden \xf6nce veya fonksiyonun sonunda bir assertion yaz\u0131n."}),"\n",(0,r.jsx)(e.p,{children:'Pawn\'da, bu talimat assert olarak adland\u0131r\u0131l\u0131r; bu, bir test i\xe7eren basit bir ifadedir. Test sonucu "true" ise, hi\xe7bir \u015Fey olmaz. Sonu\xe7 "false" ise, assert talimat\u0131 program\u0131, ba\u015Far\u0131s\u0131z olan assertion\'\u0131n ayr\u0131nt\u0131lar\u0131n\u0131 i\xe7eren bir mesajla sonland\u0131r\u0131r.'}),"\n",(0,r.jsx)(e.p,{children:"Assertion'lar, asla ba\u015Far\u0131s\u0131z olmamas\u0131 gereken kontrollerdir. Ger\xe7ek hatalar, kullan\u0131c\u0131 giri\u015Fi hatalar\u0131 gibi a\xe7\u0131k\xe7a programda a\xe7\u0131k\xe7a test edilmeli ve assertion'larla de\u011Fil ele al\u0131nmal\u0131d\u0131r. Genel bir kural olarak, assertion'lar i\xe7eren ifadelerin yan etkilerden ar\u0131nd\u0131r\u0131lmas\u0131 gerekir: bir assertion, uygulaman\u0131z\u0131n do\u011Fru \xe7al\u0131\u015Fmas\u0131 i\xe7in gereken kod i\xe7ermemelidir."}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"\xd6rnek karek\xf6k fonksiyonu (bisection kullanarak): 79"})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:"Ancak bu, assertions'lar\u0131n hata i\xe7ermeyen bir programda asla \xe7al\u0131\u015Fmayaca\u011F\u0131 anlam\u0131na gelir: sadece kodu \u015Fi\u015Firir ve yava\u015Flat\u0131r, herhangi bir kullan\u0131c\u0131 taraf\u0131ndan g\xf6r\xfclebilir fayda sa\u011Flamaz. Ancak, assertion'lar\u0131n ba\u015Fka bir \xf6zelli\u011Fi vard\u0131r; kaynak kodunu, pawn ayr\u0131\u015Ft\u0131r\u0131c\u0131s\u0131na bir bayrak veya se\xe7enek kullanarak assertions olmadan basit\xe7e olu\u015Fturabilirsiniz. Fikir, geli\u015Ftirme s\u0131ras\u0131nda assertions'lar\u0131 etkinle\u015Ftirmeniz ve kodu assertions's\u0131z \"perakende s\xfcr\xfcm\xfc\" olu\u015Fturman\u0131zd\u0131r. Bu, assertions'lar\u0131 kald\u0131rmaktan daha iyi bir yakla\u015F\u0131md\u0131r, \xe7\xfcnk\xfc t\xfcm assertions'lar, \xf6rne\u011Fin bak\u0131m i\xe7in program\u0131 yeniden derledi\u011Finizde otomatik olarak geri y\xfcklenir."}),"\n",(0,r.jsx)(e.p,{children:"Bak\u0131m s\u0131ras\u0131nda veya hatta ba\u015Flang\u0131\xe7ta, bir assertion taraf\u0131ndan yakalanmayan bir hatay\u0131 yakalarsan\u0131z, hatay\u0131 d\xfczeltmeden \xf6nce bu hatan\u0131n bir assertion taraf\u0131ndan yakalanabilece\u011Fini d\xfc\u015F\xfcnmelisiniz. Sonra bu assertion'\u0131 ekleyin ve hatay\u0131 d\xfczeltmeden \xf6nce bu assertion'\u0131n ger\xe7ekten hatay\u0131 yakalay\u0131p yakalamad\u0131\u011F\u0131n\u0131 test edin. Bunu yaparak, kod zamanla daha sa\u011Flam ve g\xfcvenilir hale gelecektir."}),"\n",(0,r.jsx)(e.p,{children:"\u2022 Belgeleme yorumlar\u0131"}),"\n",(0,r.jsx)(e.p,{children:"Programlar b\xfcy\xfcd\xfck\xe7e, program\u0131n ve i\u015Flevlerin belgelenmesi \xf6zellikle bir ekiple \xe7al\u0131\u015F\u0131rken bak\u0131m i\xe7in hayati \xf6neme sahiptir. Pawn dil ara\xe7lar\u0131, kodu belgelerken size yard\u0131mc\u0131 olacak baz\u0131 \xf6zelliklere sahiptir. Bir program\u0131 veya k\xfct\xfcphaneyi yorumlar i\xe7inde belgeleme, birka\xe7 avantaja sahiptir - \xf6rne\u011Fin: belgeleme programla daha kolay bir \u015Fekilde g\xfcncellenebilir, programlama yorumlar\u0131 \u015Fimdi belgeleme olarak da kullan\u0131l\u0131r ve ayr\u0131ca ayr\u0131\u015Ft\u0131r\u0131c\u0131, sentaks a\xe7\u0131klamalar\u0131 ve \xe7apraz referanslar olu\u015Fturman\u0131za yard\u0131mc\u0131 olur."}),"\n",(0,r.jsx)(e.p,{children:'Her \xfc\xe7 e\u011Fik \xe7izgi ile ba\u015Flayan yorum ("/// ") ve bir beyaz bo\u015Fluktan sonra veya bir e\u011Fik \xe7izgi ve iki y\u0131ld\u0131z ile ba\u015Flayan yorum ("//_/ ") ve bir beyaz bo\u015Fluktan sonra ba\u015Flayan \xf6zel bir belgeleme yorumudur. Pawn derleyicisi belgeleme yorumlar\u0131n\u0131 \xe7\u0131kar\u0131r ve bunlar\u0131 bir "rapor" dosyas\u0131na iste\u011Fe ba\u011Fl\u0131 olarak yazar. Rapor olu\u015Fturmay\u0131 etkinle\u015Ftirmek i\xe7in uygulama belgelerine veya ek B\'ye bak\u0131n\u0131z.'}),"\n",(0,r.jsxs)(e.p,{children:['Ayr\u0131ca, "',(0,r.jsx)(e.em,{children:'/" ile ba\u015Flayan yorumlar "'}),'/ ile kapat\u0131lmal\u0131d\u0131r". Tek sat\u0131r belgeleme yorumlar\u0131 ("///") sat\u0131r\u0131n sonunda kapan\u0131r.']}),"\n",(0,r.jsx)(e.p,{children:"Rapor dosyas\u0131, ard\u0131ndan bir XSL/XSLT stili sayesinde HTML belgesine d\xf6n\xfc\u015Ft\xfcr\xfclebilen bir XML dosyas\u0131d\u0131r veya bas\u0131l\u0131 belgeler olu\u015Fturmak i\xe7in di\u011Fer"}),"\n",(0,r.jsx)(e.p,{children:'ara\xe7lardan ge\xe7irilebilir. Rapor dosyas\u0131n\u0131n s\xf6zdizimi, "Net" geli\u015Ftirici \xfcr\xfcnlerine uyumlu olacak \u015Fekilde tasarlanm\u0131\u015Ft\u0131r - pawn derleyicisi, \xe7\u0131kar\u0131lan belgeleme dizelerinin yan\u0131 s\u0131ra di\u011Fer bilgileri de raporda saklar. Rapor dosyas\u0131, "smalldoc.xsl" stil sayfas\u0131na bir referans i\xe7erir.'}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"Yorum s\xf6zdizimi: 97"})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:"A\u015Fa\u011F\u0131daki \xf6rnek, birka\xe7 i\u015Fleve sahip basit bir betikte belgeleme yorumlar\u0131n\u0131 g\xf6sterir. Bir fonksiyon i\xe7in bildiriminden \xf6nce veya g\xf6vdesinde belgeleme yorumlar\u0131 yazabilirsiniz. \u0130\u015Flevin sonundan \xf6nce g\xf6r\xfcnen t\xfcm belgeleme yorumlar\u0131 i\u015Fleve atfedilir. Ayr\u0131ca, global de\u011Fi\u015Fkenlere ve global sabitlere de belgeleme yorumlar\u0131 ekleyebilirsiniz - bu yorumlar, de\u011Fi\u015Fkenin veya sabitin bildiriminden \xf6nce g\xf6r\xfcnmelidir. \u015Eekil 2, bu (olduk\xe7a uzun) \xf6rne\u011Fin bir k\u0131sm\u0131n\u0131n \xe7\u0131kt\u0131s\u0131n\u0131 g\xf6sterir. \xc7\u0131k\u0131\u015F\u0131n tarz\u0131, XSLT d\xf6n\xfc\u015F\xfcm dosyas\u0131na ba\u011Fl\u0131 olan bir cascading style sheet (CSS) ile ayarlanabilir."}),"\n",(0,r.jsx)(e.p,{children:"Listeleme: weekday.p"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:'\n/**\n\n- Bu program, bir tarihe dayal\u0131 olarak haftan\u0131n g\xfcn\xfcn\xfc hesaplamak i\xe7in Zeller\'\u0131n kongruans algoritmas\u0131n\u0131 g\xf6sterir.\n\n*/\n\n/**\n\n- <summary>\n\n-        Ana program: kullan\u0131c\u0131dan bir tarih girmesini ister ve bu tarihin hangi g\xfcn oldu\u011Funu yazd\u0131r\u0131r.\n\n  on\n\n-        Haftan\u0131n g\xfcn\xfc.\n\n- </summary>\n\n*/\nmain()\n{\n    new day, month, year;\n    if (readdate(day, month, year))\n    {\n        new wkday = weekday(day, month, year);\n        printf "%d-%d-%d tarihi \u015Fu g\xfcn: ", day, month, year;\n        switch (wkday)\n        {\n            case 0:\n                print "Cumartesi";\n                break;\n            case 1:\n                print "Pazar";\n                break;\n            case 2:\n                print "Pazartesi";\n                break;\n            case 3:\n                print "Sal\u0131";\n                break;\n            case 4:\n                print "\xc7ar\u015Famba";\n                break;\n            case 5:\n                print "Per\u015Fembe";\n                break;\n            case 6:\n                print "Cuma";\n                break;\n        }\n    }\n    else\n        print "Ge\xe7ersiz tarih";\n    print "\\n";\n}\n\n/**\n\n- <summary>\n\n-      Zeller\'\u0131n kongruans algoritmas\u0131n\u0131n temel fonksiyonu. Fonksiyon\n\n-      Gregoryen takvimi i\xe7in \xe7al\u0131\u015F\u0131r.\n\n- </summary>\n\n-\n\n- <param  name="day">\n\n-      Ay\u0131n g\xfcn\xfc, 1 ile 31 aras\u0131nda bir de\u011Fer.\n\n- </param>\n\n- <param  name="month">\n\n-      Ay: 1 ile 12 aras\u0131nda bir de\u011Fer.\n\n- </param>\n\n- <param  name="year">\n\n-      D\xf6rt basamakl\u0131 y\u0131l.\n\n- </param>\n\n-\n\n- <returns>\n\n-      Haftan\u0131n g\xfcn\xfc, 0 Cumartesi ve 6 Cuma\'d\u0131r.\n\n- </returns>\n\n-\n\n- <remarks>\n\n-      Bu fonksiyon, tarihin ge\xe7erlili\u011Fini kontrol etmez; e\u011Fer\n\n  tarih\n\n-      parametrelerinde ge\xe7ersiz bir tarih varsa, d\xf6nd\xfcr\xfclen "haftan\u0131n\n\n  g\xfcn\xfc"\n\n-      ge\xe7ersiz bir de\u011Fer i\xe7erecektir.\n\n-      <p/>\n\n-      Bu denklem, bir\xe7ok programlama dilinde ba\u015Far\u0131s\u0131z olur, \xf6zellikle\n\n-      C, C++ ve Pascal\'\u0131n \xe7o\u011Fu uygulamas\u0131nda, \xe7\xfcnk\xfc bu dillerin\n\n  "kalan" operat\xf6r\xfc\n\n-      gev\u015Fek bir \u015Fekilde tan\u0131mlanm\u0131\u015Ft\u0131r. \xd6te yandan, Pawn, matematiksel\n\n-      teoride tan\u0131mland\u0131\u011F\u0131 gibi ger\xe7ek mod\xfcl operat\xf6r\xfcn\xfc sa\u011Flar ve Zeller\n\n  taraf\u0131ndan ama\xe7lanan\u0131 sunar.\n\n- </remarks>\n\n*/\n\nweekday(day, month, year)\n{\n/**\n\n- <remarks>\n\n-      Zeller\'\u0131n kongruans algoritmas\u0131 i\xe7in Ocak ve\n\n-      \u015Eubat aylar\u0131 <em>\xf6nceki</em> y\u0131l\u0131n 13. ve 14. ay\u0131d\u0131r. Fikir,\n\n-      "zorlu ay" \u015Eubat\'\u0131n (28 veya 29 g\xfcn) y\u0131l\u0131n sonuna ta\u015F\u0131nd\u0131\u011F\u0131d\u0131r.\n\n- </remarks>\n\n*/\n\n    if (month <= 2)\n        month += 12, --year;\n\n    new j = year % 100;\n    new e = year / 100;\n    return (day + (month + 1) * 26 / 10 + j + j / 4 + e / 4 - 2 * e) % 7;\n}\n\n/**\n\n- <summary>\n\n-      Bir tarih okur ve \xfc\xe7 ayr\u0131 alanda depolar.\n\n- </summary>\n\n-\n\n- <param  name="day">\n\n-      Geri d\xf6n\xfc\u015Fte g\xfcn numaras\u0131n\u0131 tutar.\n\n- </param>\n\n- <param  name="month">\n\n-      Geri d\xf6n\xfc\u015Fte ay numaras\u0131n\u0131 tutar.\n\n- </param>\n\n- <param  name="year">\n\n-      Geri d\xf6n\xfc\u015Fte y\u0131l numaras\u0131n\u0131 tutar.\n\n- </param>\n\n-\n\n- <returns>\n\n-      <em>true</em> e\u011Fer tarih ge\xe7erliyse, <em>false</em> aksi halde;\n\n-      e\u011Fer fonksiyon <em>false</em> d\xf6nd\xfcr\xfcrse,\n\n-      <paramref  name="day"/>,  <paramref  name="month"/>  ve\n\n-      <paramref  name="year"/>  de\u011Ferlerine g\xfcvenilmemelidir.\n\n- </returns\n\n>\n\n*/\n\nbool: readdate(&day, &month, &year)\n{\n    print "Bir tarih girin (gg-aa-yyyy): ";\n    day = getvalue(\\_, \'-\', \'/\');\n    month = getvalue(\\_, \'-\', \'/\');\n    year = getvalue();\n    return 1 <= month && month <= 12 && 1 <= day && day <= daysinmonth(month, year);\n}\n\n/**\n\n- <summary>\n\n-      Bir y\u0131l\u0131n art\u0131k y\u0131l olup olmad\u0131\u011F\u0131n\u0131 belirtir.\n\n- </summary>\n\n-\n\n- <param  name="year">\n\n-      D\xf6rt basamakl\u0131 y\u0131l.\n\n- </param>\n\n-\n\n- <remarks>\n\n-      Bir y\u0131l \u015Fartlar\u0131:\n\n-      <ul>\n\n-          <li> E\u011Fer 4\'e b\xf6l\xfcnebilirse, </li>\n\n-          <li> Ama 100\'e b\xf6l\xfcnebiliyorsa, <strong>b\xf6l\xfcnemez</strong>, </li>\n\n-          <li> Ancak 400\'e b\xf6l\xfcnebiliyorsa, <strong>b\xf6l\xfcnebilir</strong>. </li>\n\n-      </ul>\n\n- </remarks>\n\n*/\n\nbool: isleapyear(year)\n\nreturn year % 400 == 0 || (year % 100 != 0 && year % 4 == 0);\n\n/**\n\n- <summary>\n\n-      Bir ay\u0131n g\xfcn say\u0131s\u0131n\u0131 d\xf6nd\xfcr\xfcr (ay, 1 ile 12 aras\u0131nda bir tam say\u0131d\u0131r).\n\n  Ayr\u0131ca,\n\n-      \xe7\xfcnk\xfc fonksiyon art\u0131k y\u0131llar\u0131 hesaba katar.\n\n- </summary>\n\n-\n\n- <param  name="month">\n\n-      Ay numaras\u0131, 1 ile 12 aras\u0131nda bir de\u011Fer.\n\n- </param>\n\n- <param  name="year">\n\n-      D\xf6rt basamakl\u0131 y\u0131l.\n\n- </param>\n\n*/\n\ndaysinmonth(month, year)\n{\n    static daylist[] = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };\n    assert 1 <= month && month <= 12;\n    return daylist[month - 1] + \\_:(month == 2 && isleapyear(year));\n}\n\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u201C.Net\u201D geli\u015Ftirici \xfcr\xfcnleri taraf\u0131ndan olu\u015Fturulan XML dosyas\u0131n\u0131n format\u0131 Microsoft belgelerinde belgelenmi\u015Ftir. Pawn ayr\u0131\u015Ft\u0131r\u0131c\u0131s\u0131, bir projede kullan\u0131lan her i\u015Flev, genel de\u011Fi\u015Fken veya sabit i\xe7in, belgelendirme a\xe7\u0131klamalar\u0131n\u0131 kullan\u0131p kullanmad\u0131\u011F\u0131n\u0131za bak\u0131lmaks\u0131z\u0131n, her birinin mini bir a\xe7\u0131klamas\u0131n\u0131 olu\u015Fturur. Ayr\u0131\u015Ft\u0131r\u0131c\u0131 ayr\u0131ca kendi etiketlerinden birka\xe7\u0131n\u0131 olu\u015Fturur:"}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"name"}),(0,r.jsx)(e.th,{children:"info"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"attribute"}),(0,r.jsx)(e.td,{children:'Bir i\u015Flevin "native" veya "stock" gibi \xf6znitelikleri.'})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"automaton"}),(0,r.jsx)(e.td,{children:"\u0130\u015Flemin ait oldu\u011Fu otomat."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"dependency"}),(0,r.jsx)(e.td,{children:"\u0130\u015Flemin gerektirdi\u011Fi sembollerin (di\u011Fer i\u015Flevler, genel de\u011Fi\u015Fkenler ve/genel sabitler) adlar\u0131. \u0130stenirse, ba\u011F\u0131ml\u0131l\u0131klardan bir \xe7a\u011F a\u011Fac\u0131 olu\u015Fturulabilir."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"param"}),(0,r.jsx)(e.td,{children:"\u0130\u015Flev parametreleri. Bir belgelendirme a\xe7\u0131klamas\u0131nda bir parametre a\xe7\u0131klamas\u0131 ekledi\u011Finizde, bu a\xe7\u0131klama parametre i\xe7in otomatik olu\u015Fturulan i\xe7erikle birle\u015Ftirilir."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"paraminfo"}),(0,r.jsx)(e.td,{children:"Bir parametre \xfczerindeki etiketler ve dizi veya referans bilgisi."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"referrer"}),(0,r.jsx)(e.td,{children:'Bu sembol\xfc kullanan t\xfcm i\u015Flevler; yani, bu de\u011Fi\u015Fken/fonksiyonu kullanan veya \xe7a\u011F\u0131ran t\xfcm i\u015Flevler. Bu bilgi, bir "\xe7apraz referans" olarak hizmet vermek i\xe7in yeterlidir - "referrer" a\u011Fac\u0131, "dependency" a\u011Fac\u0131n\u0131n tersidir.'})]})]})]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://i.ibb.co/VmQS0fL/image.png",alt:"fig2"})}),"\n",(0,r.jsx)(e.h6,{id:"\u015Fekil-2-kaynak-kodundan-olu\u015Fturulan-belge",children:"\u015Eekil 2: Kaynak kodundan olu\u015Fturulan belge"}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"name"}),(0,r.jsx)(e.th,{children:"info"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"stacksize"}),(0,r.jsx)(e.td,{children:'\u0130\u015Flemin y\u0131\u011F\u0131na ve belle\u011Fe ka\xe7 h\xfccre tahsis edece\u011Finin tahmini say\u0131s\u0131. Bu y\u0131\u011F\u0131n kullan\u0131m tahmini, i\u015Flemi uygulamaya y\xf6nelik belgelerde belirtilen i\u015Flevin yan\u0131 s\u0131ra "\xe7a\u011Fr\u0131lan" i\u015Flevlerin y\u0131\u011F\u0131n gereksinimlerini i\xe7ermez. \xd6rne\u011Fin, readdate i\u015Flevinin y\u0131\u011F\u0131n \xfczerinde 6 h\xfccre kullan\u0131lmas\u0131 belgelenir, ancak ayr\u0131ca 4 ilave h\xfccre alan daysinmonth\'u \xe7a\u011F\u0131r\u0131r \u2014ve bu da isleapyear\'u \xe7a\u011F\u0131r\u0131r. readdate i\u015Flevinin toplam y\u0131\u011F\u0131n gereksinimlerini hesaplamak i\xe7in \xe7a\u011Fr\u0131 a\u011Fac\u0131 dikkate al\u0131nmal\u0131d\u0131r. Lokal de\u011Fi\u015Fkenler ve i\u015Flev parametreleri d\u0131\u015F\u0131nda, derleyici ayn\u0131 zamanda karma\u015F\u0131k ifadelerde ara sonu\xe7lar\u0131 saklamak i\xe7in y\u0131\u011F\u0131\u0131n\u0131 kullan\u0131r. Bu ara sonu\xe7lar\u0131n gereksinim duydu\u011Fu y\u0131\u011F\u0131n alan\u0131 da bu rapordan hari\xe7 tutulur. Genel olarak, ara sonu\xe7lar i\xe7in gereken \xfcst bilgi k\xfcm\xfclatif de\u011Fildir (t\xfcm i\u015Flevler \xfczerinde), bu nedenle her i\u015Fleve "g\xfcvenlik marj\u0131" eklemek yan\u0131lt\u0131c\u0131 olurdu. Genel olarak, program i\xe7in bir g\xfcvenlik marj\u0131 eklemek olduk\xe7a tavsiye edilir. \xc7a\u011Fr\u0131 a\u011Fac\u0131na dayanarak maksimum tahmini y\u0131\u011F\u0131n kullan\u0131m\u0131n\u0131 s\xf6yleyebilen -v se\xe7ene\u011Fi i\xe7in 168. sayfadaki ek B\'ye bak\u0131n.'})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"tagname"}),(0,r.jsx)(e.td,{children:"Sabit, de\u011Fi\u015Fken, i\u015Flev sonucu veya i\u015Flev parametre(ler)inin etiketi."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"transition"}),(0,r.jsx)(e.td,{children:"The transitions that the function provokes and their conditions \u2014see the section of automatons on page 38."})]})]})]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:"Belgelendirme yorum(lar)\u0131ndaki t\xfcm metin, ba\u011Fl\u0131 oldu\u011Fu her i\u015Flev, de\u011Fi\u015Fken veya sabite kopyalan\u0131r. Belgelendirme yorumundaki metin, ba\u015Fka bir i\u015Fleme tabi tutulmadan kopyalan\u0131r \u2014tek bir istisna hari\xe7, a\u015Fa\u011F\u0131ya bak\u0131n\u0131z. Rapor dosyas\u0131n\u0131n geri kalan\u0131 XML format\u0131nda oldu\u011Fu ve XML belgesini \xe7evrimi\xe7i belgelendirmek i\xe7in en uygun yolun bir XSLT i\u015Fleyici (\xf6rne\u011Fin, modern bir taray\u0131c\u0131) arac\u0131l\u0131\u011F\u0131yla oldu\u011Fu d\xfc\u015F\xfcn\xfcld\xfc\u011F\xfcnde, belgelendirme yorumlar\u0131nda herhangi bir bi\xe7imlendirmeyi HTML etiketleri kullanarak yapmay\u0131 se\xe7ebilirsiniz. HTML etiketlerini genellikle a\xe7\u0131k\xe7a kapatman\u0131z gerekecektir; HTML standard\u0131 bunu gerektirmese de, XML/XSLT i\u015Fleyicileri genellikle gerektirir. Pawn ara\xe7 seti, a\u015Fa\u011F\u0131daki XML/HTML etiketlerini destekleyen bir e\u015Fle\u015Fen stil \u015Feeti ile birlikte gelen bir \xf6rnek XSLT dosyas\u0131na sahiptir:"}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"name"}),(0,r.jsx)(e.th,{children:"info"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"<code> </code>"})}),(0,r.jsx)(e.td,{children:'Monospace fontunda bi\xe7imlendirilmi\u015F kaynak kodu; " & ", " < " ve " > " karakterlerinin s\u0131ras\u0131yla " & ", " < " ve " > " olarak yaz\u0131lmas\u0131 gerekmektedir.'})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"<example> </example>"})}),(0,r.jsx)(e.td,{children:'Alt ba\u015Fl\u0131k "\xd6rnek" alt\u0131nda ayarlanan metin.'})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:'<param name="..."> </param>'})}),(0,r.jsx)(e.td,{children:'Bir parametre a\xe7\u0131klamas\u0131, parametre ad\u0131n\u0131n a\xe7\u0131l\u0131\u015F etiketinin i\xe7inde g\xf6r\xfcnmesi ( "name=" se\xe7ene\u011Fi) ve parametre a\xe7\u0131klamas\u0131n\u0131n onu takip etmesi ile birlikte.'})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:'<paramref name="..." />'})}),(0,r.jsx)(e.td,{children:'Bir parametre referans\u0131, parametre ad\u0131n\u0131n a\xe7\u0131l\u0131\u015F etiketinin i\xe7inde g\xf6r\xfcnmesi ("name=" se\xe7ene\u011Fi).'})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"<remarks> </remarks>"})}),(0,r.jsx)(e.td,{children:'Alt ba\u015Fl\u0131k "Remarks" alt\u0131nda ayarlanan metin.'})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"<returns> </returns>"})}),(0,r.jsx)(e.td,{children:'Alt ba\u015Fl\u0131k "Returns" alt\u0131nda ayarlanan metin.'})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"<seealso> </seealso>"})}),(0,r.jsx)(e.td,{children:'Alt ba\u015Fl\u0131k "See also" alt\u0131nda ayarlanan metin.'})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"<summary> </summary>"})}),(0,r.jsx)(e.td,{children:"Sembol ba\u015Fl\u0131\u011F\u0131n\u0131n hemen alt\u0131na ayarlanan metin."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"<section> </section>"})}),(0,r.jsx)(e.td,{children:"Metni bir ba\u015Fl\u0131k i\xe7inde ayarlar. Bu, bir i\u015Fleve veya bir de\u011Fi\u015Fkene ba\u011Fl\u0131 olmayan belgelerde kullan\u0131lmal\u0131d\u0131r."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"<subsection> </subsection>"})}),(0,r.jsx)(e.td,{children:"Metni bir alt ba\u015Fl\u0131k i\xe7inde ayarlar. Bu, bir i\u015Fleve veya bir de\u011Fi\u015Fkene ba\u011Fl\u0131 olmayan belgelerde kullan\u0131lmal\u0131d\u0131r."})]})]})]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:"The following additional HTML tags are supported for general purpose formatting text inside any of the above sections:"}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"name"}),(0,r.jsx)(e.th,{children:"info"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"<c> </c>"})}),(0,r.jsx)(e.td,{children:"Text set in a monospaced font."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"<em> </em>"})}),(0,r.jsx)(e.td,{children:"Text set emphasized, usually in italics."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"<p> </p>"})}),(0,r.jsxs)(e.td,{children:["Text set in a new paragraph. Instead of wrapping ",(0,r.jsx)("p",{children:" and "})," around every paragraph, inserting ",(0,r.jsx)("p",{})," as a separator between two paragraphs produces the same effect."]})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"<para> </para>"})}),(0,r.jsxs)(e.td,{children:["An alternative for ",(0,r.jsx)("p",{children:" "}),"."]})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"<ul> </ul>"})}),(0,r.jsx)(e.td,{children:"An unordered (bulleted) list."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"<ol> </ol>"})}),(0,r.jsx)(e.td,{children:"An ordered (numbered) list."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"<li> </li>"})}),(0,r.jsx)(e.td,{children:"An item in an ordered or unordered list."})]})]})]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsxs)(e.p,{children:["Belirtildi\u011Fi gibi, belgelendirme yorumlar\u0131 i\u015Flenirken bir istisna vard\u0131r: belgelendirme yorumunuz ",(0,r.jsx)(e.code,{children:"<param ...>"})," etiketi i\xe7eriyorsa (ve buna e\u015Fle\u015Fen ",(0,r.jsx)(e.code,{children:"</param>"})," varsa), pawn ayr\u0131ca parametreyi ara\u015Ft\u0131r\u0131r ve parametre a\xe7\u0131klaman\u0131z\u0131 otomatik olarak olu\u015Fturdu\u011Fu i\xe7erikle birle\u015Ftirir."]}),"\n",(0,r.jsx)(e.h3,{id:"-uyar\u0131lar-ve-hatalar",children:"\u2022 Uyar\u0131lar ve Hatalar"}),"\n",(0,r.jsx)(e.p,{children:'Bu b\xf6l\xfcmde sunulan kod \xf6rneklerini ger\xe7ekten nas\u0131l derleyece\u011Fimi belirleyen b\xfcy\xfck bir engel var. Bu nedenle prosed\xfcr, kulland\u0131\u011F\u0131n\u0131z sistemlere ba\u011Fl\u0131d\u0131r: baz\u0131 uygulamalarda bir "Yap" veya "Derleme beti\u011Fi" komut d\xfc\u011Fmesi veya men\xfc se\xe7ene\u011Fi bulunurken, di\u011Fer ortamlarda bir komut istemine "sc myscript" gibi bir komut yazman\u0131z gerekebilir. Standart pawn ara\xe7 setini kullan\u0131yorsan\u0131z, derleyiciyi ve \xe7al\u0131\u015Fma zaman\u0131n\u0131 nas\u0131l kullanaca\u011F\u0131n\u0131za dair talimatlar\u0131 "The pawn booklet \u2014 Implementor\u2019s Guide" adl\u0131 e\u015Flik eden kitap\xe7\u0131kta bulabilirsiniz.'}),"\n",(0,r.jsx)(e.p,{children:"Derlemeyi ba\u015Flatma konusundaki farkl\u0131l\u0131klara bak\u0131lmaks\u0131z\u0131n, derlemeyi ba\u015Flatman\u0131n sonu\xe7lar\u0131 muhtemelen t\xfcm sistemler aras\u0131nda \xe7ok benzer olacakt\u0131r:"}),"\n",(0,r.jsx)(e.p,{children:"\u2022 Ya derleme ba\u015Far\u0131l\u0131 olur ve y\xfcr\xfct\xfclebilir bir program \xfcretir \u2014bu, derleme sonras\u0131nda otomatik olarak \xe7al\u0131\u015Fabilir veya \xe7al\u0131\u015Fmayabilir;"}),"\n",(0,r.jsx)(e.p,{children:"\u2022 Ya da derleme, bir dizi uyar\u0131 ve hata mesaj\u0131 verir."}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:"\u2022 Hatalar olabilir ve pawn a analizci m\xfcmk\xfcn oldu\u011Funca \xe7ok say\u0131da hatay\u0131 yakalamaya \xe7al\u0131\u015F\u0131r. Pawn analizcinin \u015Fikayet etti\u011Fi kodu inceledi\u011Finizde, kodun neden hatal\u0131 (veya \u015F\xfcpheli) oldu\u011Funu g\xf6rmek bazen zor olabilir. A\u015Fa\u011F\u0131daki ipu\xe7lar\u0131 size yard\u0131mc\u0131 olabilir:"}),"\n",(0,r.jsx)(e.p,{children:"\u2022 Her hata veya uyar\u0131 numaraland\u0131r\u0131lm\u0131\u015Ft\u0131r. Hata mesaj\u0131n\u0131 bu numara ile appendix A'da kontrol edebilirsiniz, burada mesaj\u0131n ger\xe7ekte ne anlama geldi\u011Fine dair k\u0131sa bir a\xe7\u0131klama bulunur."}),"\n",(0,r.jsx)(e.p,{children:"\u2022 E\u011Fer pawn analizcisi bir hata listesi \xfcretirse, bu listenin ilk hatas\u0131 ger\xe7ek bir hatad\u0131r, ancak alt\u0131ndaki tan\u0131mlama mesajlar\u0131 hi\xe7 de hatalar olmayabilir. Pawn analizcisi bir hatay\u0131 g\xf6rd\xfckten sonra, onu a\u015Fmaya ve derlemeyi tamamlamaya \xe7al\u0131\u015F\u0131r. Ancak hata \xfczerinde t\xf6kezleme, pawn analizcisini kar\u0131\u015Ft\u0131rm\u0131\u015F olabilir, bu nedenle sonraki ge\xe7erli ifadeler yanl\u0131\u015F yorumlanabilir ve yine hata olarak rapor edilebilir. \u015E\xfcpheli durumlarda ilk hatay\u0131 d\xfczeltin ve yeniden derleyin."}),"\n",(0,r.jsx)(e.p,{children:'\u2022 Pawn analizcisi, yaln\u0131zca s\xf6zdizimi (imla/gramer) kontrol eder, semanti\u011Fi (yani kodun "anlam\u0131") de\u011Fil. S\xf6zdizimi kurallar\u0131na uymayan kod tespit etti\u011Finde, kodun "do\u011Fru" olmas\u0131 i\xe7in de\u011Fi\u015Ftirilebilecek farkl\u0131 yollar olabilir - hatta bu "d\xfczeltmelerin" \xe7o\u011Fu mant\u0131ks\u0131z kodlara yol a\xe7abilir. Sonu\xe7 olarak, analizcinin hatay\u0131 tam olarak yerini saptamas\u0131 zor olabilir: ne yazmak istedi\u011Finizi bilmez. Bu nedenle, analizci genellikle iki sat\u0131r numaras\u0131 ve hata, bu sat\u0131r numaralar\u0131 aras\u0131ndad\u0131r.'}),"\n",(0,r.jsx)(e.p,{children:'\u2022 Bir program\u0131n s\xf6zdizimsel hatalar\u0131 olmadan (pawn analizcisi hata ve uyar\u0131 mesajlar\u0131 olmadan kabul eder) olmas\u0131na ra\u011Fmen, analizcinin yakalayamayaca\u011F\u0131 semantik ve mant\u0131ksal hatalar\u0131 olabilir. assert komutu (sayfa 112) size bu "\xe7al\u0131\u015Fma zaman\u0131" hatalar\u0131n\u0131 yakalama konusunda yard\u0131mc\u0131 olmak i\xe7in tasarlanm\u0131\u015Ft\u0131r.'}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h3,{id:"-kapan\u0131\u015F",children:"\u2022 Kapan\u0131\u015F"}),"\n",(0,r.jsx)(e.p,{children:'E\u011Fer C programlama dilini biliyorsan\u0131z, bir\xe7ok tan\u0131d\u0131k kavram g\xf6rm\xfc\u015F olacaks\u0131n\u0131z ve birka\xe7 yeni kavramla kar\u015F\u0131la\u015Fm\u0131\u015F olabilirsiniz. E\u011Fer C bilmiyorsan\u0131z, bu giri\u015Fin h\u0131z\u0131 olduk\xe7a y\xfcksek olabilir. C dilinde yeniyseniz veya deneyimliyseniz, a\u015Fa\u011F\u0131daki sayfalar\u0131 dikkatlice okuman\u0131z\u0131 \xf6neririm. Ayr\u0131ca, C veya C\'ye benzer bir dil biliyorsan\u0131z, bu arada "Pitfalls" (sayfa 134) b\xf6l\xfcm\xfcn\xfc incelemek isteyebilirsiniz.'}),"\n",(0,r.jsx)(e.p,{children:"Bu kitap\xe7\u0131k, hem gayri resmi bir tan\u0131t\u0131m hem de ayn\u0131 anda (daha resmi) bir dil spesifikasyonu olmaya \xe7al\u0131\u015Fmaktad\u0131r, belki de ikisinde de ba\u015Far\u0131l\u0131 olmamaktad\u0131r. \xc7\xfcnk\xfc bu kitap\xe7\u0131k ayn\u0131 zamanda pawn \xfczerine standart bir kitapt\u0131r,\u2217 bu kitap\xe7\u0131\u011F\u0131n odak noktas\u0131, anla\u015F\u0131l\u0131r olmaktan ziyade do\u011Fru ve tam olmaya y\xf6neliktir."}),"\n",(0,r.jsx)(e.p,{children:"Bu kitap\xe7\u0131\u011F\u0131n \xe7ift do\u011Fas\u0131, konular\u0131 nas\u0131l sundu\u011Fu s\u0131ralamada kendini g\xf6sterir. Daha b\xfcy\xfck kavramsal b\xf6l\xfcmler, de\u011Fi\u015Fkenler ve fonksiyonlar \xf6nce ele al\u0131n\u0131r. Operat\xf6rler, ifadeler ve genel s\xf6zdizimi kurallar\u0131 daha sonra gelir - bu, \xf6nemsiz olduklar\u0131 anlam\u0131na gelmez, ancak \xf6\u011Frenmeleri, bakmalar\u0131 veya kabul etmeleri daha kolayd\u0131r."}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h6,{id:"-art\u0131k-pawn-\xfczerine-tek-kitap-de\u011Fil",children:"\u2217 Art\u0131k Pawn \xfczerine tek kitap de\u011Fil."}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:"/tr/docs/scripting/language/reference/Contents",children:"\u0130\xe7erik listesine geri d\xf6n"})})]})}function o(a={}){let{wrapper:e}={...(0,l.a)(),...a.components};return e?(0,r.jsx)(e,{...a,children:(0,r.jsx)(m,{...a})}):m(a)}},50065:function(a,e,i){i.d(e,{Z:()=>t,a:()=>d});var n=i(67294);let r={},l=n.createContext(r);function d(a){let e=n.useContext(l);return n.useMemo(function(){return"function"==typeof a?a(e):{...e,...a}},[e,a])}function t(a){let e;return e=a.disableParentContext?"function"==typeof a.components?a.components(r):a.components||r:d(a.components),n.createElement(l.Provider,{value:e},a.children)}}}]);