"use strict";(self.webpackChunkomp_web=self.webpackChunkomp_web||[]).push([["82465"],{30112:function(e,i,a){a.r(i),a.d(i,{frontMatter:()=>o,toc:()=>l,default:()=>p,metadata:()=>n,assets:()=>d,contentTitle:()=>s});var n=JSON.parse('{"id":"scripting/callbacks/OnPlayerKeyStateChange","title":"OnPlayerKeyStateChange","description":"Ovaj callback je pozvan kada se stanje bilo koje podr\u017Eane tipke promijeni (pritisnuta/pu\u0161tena).","source":"@site/i18n/bs/docusaurus-plugin-content-docs/current/scripting/callbacks/OnPlayerKeyStateChange.md","sourceDirName":"scripting/callbacks","slug":"/scripting/callbacks/OnPlayerKeyStateChange","permalink":"/bs/docs/scripting/callbacks/OnPlayerKeyStateChange","draft":false,"unlisted":false,"editUrl":"https://github.com/openmultiplayer/web/edit/master/frontend/docs/scripting/callbacks/OnPlayerKeyStateChange.md","tags":[{"inline":true,"label":"player","permalink":"/bs/docs/tags/player"}],"version":"current","frontMatter":{"title":"OnPlayerKeyStateChange","sidebar_label":"OnPlayerKeyStateChange","description":"Ovaj callback je pozvan kada se stanje bilo koje podr\u017Eane tipke promijeni (pritisnuta/pu\u0161tena).","tags":["player"]},"sidebar":"docsSidebar","previous":{"title":"OnPlayerInteriorChange","permalink":"/bs/docs/scripting/callbacks/OnPlayerInteriorChange"},"next":{"title":"OnPlayerLeaveCheckpoint","permalink":"/bs/docs/scripting/callbacks/OnPlayerLeaveCheckpoint"}}'),t=a(85893),r=a(50065);let o={title:"OnPlayerKeyStateChange",sidebar_label:"OnPlayerKeyStateChange",description:"Ovaj callback je pozvan kada se stanje bilo koje podr\u017Eane tipke promijeni (pritisnuta/pu\u0161tena).",tags:["player"]},s=void 0,d={},l=[{value:"Deskripcija",id:"deskripcija",level:2},{value:"Returns",id:"returns",level:2},{value:"Zabilje\u0161ke",id:"zabilje\u0161ke",level:2},{value:"Srodne Funkcije",id:"srodne-funkcije",level:2},{value:"Dodatne Informacije",id:"dodatne-informacije",level:2},{value:"Uvod",id:"uvod",level:3},{value:"Parametri",id:"parametri",level:3},{value:"Kako NE provjeravati tipku",id:"kako-ne-provjeravati-tipku",level:3},{value:"Kako provjeravati tipku",id:"kako-provjeravati-tipku",level:3},{value:"Kako provjeriti tipku koja je pritisnuta",id:"kako-provjeriti-tipku-koja-je-pritisnuta",level:3},{value:"Kako provjeriti kada je tipka pu\u0161tena",id:"kako-provjeriti-kada-je-tipka-pu\u0161tena",level:3},{value:"Kako provjeriti vi\u0161e tipki",id:"kako-provjeriti-vi\u0161e-tipki",level:3},{value:"Pojednostavljenje",id:"pojednostavljenje",level:2},{value:"Detektovanje dr\u017Eanja tipke",id:"detektovanje-dr\u017Eanja-tipke",level:3},{value:"Detektovanje prvog pritiska tipke",id:"detektovanje-prvog-pritiska-tipke",level:3},{value:"Detektovanje priti\u0161\u010De li igra\u010D trenutno tipku",id:"detektovanje-priti\u0161\u010De-li-igra\u010D-trenutno-tipku",level:3},{value:"Detektovanje pu\u0161tanja tipke",id:"detektovanje-pu\u0161tanja-tipke",level:3},{value:"Primjeri",id:"primjeri",level:2},{value:"Pri\u010Dvrstite NITRO(Objekat) kada igra\u010D pritisne &quot;fire&quot; tipku",id:"pri\u010Dvrstite-nitroobjekat-kada-igra\u010D-pritisne-fire-tipku",level:3},{value:"Super skok",id:"super-skok",level:3},{value:"&quot;God mode&quot; kada dr\u017Ei &quot;use&quot; tipku",id:"god-mode-kada-dr\u017Ei-use-tipku",level:3},{value:"Poja\u0161njenje",id:"poja\u0161njenje",level:3}];function j(e){let i={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h2,{id:"deskripcija",children:"Deskripcija"}),"\n",(0,t.jsxs)(i.p,{children:["Ovaj callback je pozvan kada se stanje bilo koje ",(0,t.jsx)(i.a,{href:"../resources/keys.md",children:"podr\u017Eane"})," tipke promijeni (pritisnuta/pu\u0161tena).",(0,t.jsx)("br",{}),"Tipke sa smjerom ne\u0107e uzrokovati pozivanje ",(0,t.jsx)(i.code,{children:"OnPlayerKeyStateChange"})," (gore/dole/lijevo/desno)."]}),"\n",(0,t.jsxs)(i.table,{children:[(0,t.jsx)(i.thead,{children:(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.th,{children:"Ime"}),(0,t.jsx)(i.th,{children:"Deskripcija"})]})}),(0,t.jsxs)(i.tbody,{children:[(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"playerid"}),(0,t.jsx)(i.td,{children:"ID igra\u010Da koji je pritisnuo ili pustio tipku."})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"newkeys"}),(0,t.jsxs)(i.td,{children:["Mapa (bitmaska) trenutno dr\u017Eanih tipki - ",(0,t.jsx)(i.a,{href:"../resources/keys.md",children:"pogledaj ovdje"})]})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"oldkeys"}),(0,t.jsxs)(i.td,{children:["Mapa (bitmaska) tipki dr\u017Eanih prije trenutne promjene - ",(0,t.jsx)(i.a,{href:"../resources/keys.md",children:"pogledaj ovdje"}),"."]})]})]})]}),"\n",(0,t.jsx)(i.h2,{id:"returns",children:"Returns"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Ovaj callback ne upravlja return-ovima."}),"\n",(0,t.jsx)(i.li,{children:"Uvijek je pozvan prvi u gamemode-u."}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"zabilje\u0161ke",children:"Zabilje\u0161ke"}),"\n",(0,t.jsx)(i.admonition,{type:"info",children:(0,t.jsx)(i.p,{children:"Ovaj callback tako\u0111erm o\u017Ee biti pozvan od strane NPC-a."})}),"\n",(0,t.jsx)(i.admonition,{type:"tip",children:(0,t.jsxs)(i.p,{children:["Tipke sa smjerom ne\u0107e uzrokovati pozivanje ",(0,t.jsx)(i.code,{children:"OnPlayerKeyStateChange"})," (gore/dole/lijevo/desno).",(0,t.jsx)("br",{}),"Oni mogu biti detektovani samo sa ",(0,t.jsx)(i.a,{href:"../functions/GetPlayerKeys.md",children:"GetPlayerKeys"})," (u ",(0,t.jsx)(i.a,{href:"/bs/docs/scripting/callbacks/OnPlayerUpdate",children:"OnPlayerUpdate"})," ili u tajmeru)."]})}),"\n",(0,t.jsx)(i.h2,{id:"srodne-funkcije",children:"Srodne Funkcije"}),"\n",(0,t.jsx)(i.p,{children:"#test"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"../functions/GetPlayerKeys.md",children:"GetPlayerKeys"}),": Provjeri koje tipke igra\u010D dr\u017Ei."]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"dodatne-informacije",children:"Dodatne Informacije"}),"\n",(0,t.jsx)(i.h3,{id:"uvod",children:"Uvod"}),"\n",(0,t.jsxs)(i.p,{children:["Ovaj callback je pozvan kad god igra\u010D pritisne ili pusti jedan od podr\u017Eanih tipku (pogledajte ",(0,t.jsx)(i.a,{href:"../resources/keys.md",children:"Keys"}),").",(0,t.jsx)("br",{}),"Tipke koje su podr\u017Eane nisu zapravo tipke sa tipkovnice, ve\u0107 San Andreas preslikane funkcijske tipke, to zna\u010Di da, naprimjer, ne mo\u017Eete detektovati kada neko pritisne ",(0,t.jsx)("strong",{children:"spacebar"}),', ali mo\u017Eete detektovati kada neko pritisne "sprint key" (koji mo\u017Ee, ili ne mora biti dodijeljen razmaknici (to je prema zadanim postavkama)).']}),"\n",(0,t.jsx)(i.h3,{id:"parametri",children:"Parametri"}),"\n",(0,t.jsx)(i.p,{children:"Parametri ove funkcije su popis svih tipki koje se trenutno dr\u017Ee i svih tipki koje su maloprije pritisnute. Callback je pozvan kada se stanje tipke promijeni (to je, kada je tipka pritisnuta ili pu\u0161tena) i pro\u0111e stanja svih tipki prije i poslije ove promjene. Ova informacija se mo\u017Ee koristiti da vidite \u0161ta se ta\u010Dno desilo ali varijable ne mogu biti kori\u0161tene direktno na isti na\u010Din kao i parametri na ostalu funkciju. Da bi se smanjio broj varijabli, za predstavljanje tipke koristi se samo jedan BIT, to zna\u010Di da jedna varijabla mo\u017Ee sadr\u017Eavati vi\u0161e tipki odjednom i jednostavno uspore\u0111ivanje vrijednosti ne\u0107e uvijek raditi."}),"\n",(0,t.jsx)(i.h3,{id:"kako-ne-provjeravati-tipku",children:"Kako NE provjeravati tipku"}),"\n",(0,t.jsx)(i.p,{children:"Idemo zamisliti da \u017Eelite da detektujete kada igra\u010D pritisne FIRE tipku, o\u010Digledan kod bi bio:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-c",children:"if (newkeys == KEY_FIRE)\n"})}),"\n",(0,t.jsx)(i.p,{children:'Ovaj k\xf4d mo\u017Ee \u010Dak raditi u va\u0161em testiranju, ali je pogre\u0161an i va\u0161e testiranje je nedovoljno. Poku\u0161aj \u010Du\u010Dnuti i pritisnuti "fire" - tvoj kod \u0107e odmah prestati raditi. Za\u0161to? Zato \u0161to "newkeys" nije vi\u0161e isti kao "KEY_FIRE", isto je kao "KEY_FIRE" KOMIBNIRANO SA "KEY_CROUCH".'}),"\n",(0,t.jsx)(i.h3,{id:"kako-provjeravati-tipku",children:"Kako provjeravati tipku"}),"\n",(0,t.jsx)(i.p,{children:"Ako varijabla mo\u017Ee da sadr\u017Ei vi\u0161e tipki odjednom, kako da provjeri\u0161 samo jednu od njih? Odgovor je malo komplikovan. Svaka tipka ima svoj li\u010Dni bit u varijabli (neke tipke imaju isti bit, ali one su onfoot/incar tipke, tako da svakako ne mogu biti pritisnute u isto vrijeme) i morate da provjerite samo taj jedan bit:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-c",children:"if (newkeys & KEY_FIRE)\n"})}),"\n",(0,t.jsxs)(i.p,{children:["Zapamti da jedan ",(0,t.jsx)("strong",{children:"&"})," je ta\u010Dan - ovo je pomalo AND, a ne logi\u010Dno AND, kako se ta dva ampersanda nazivaju."]}),"\n",(0,t.jsx)(i.p,{children:'Ako testirate ovaj kod on \u0107e raditi i ako \u010Du\u010Dite i ako stojite kada pritisnete "fire" tipku. Me\u0111utim, jo\u0161 uvijek postoji jedan mali problem - pucati \u0107e sve dok dr\u017Eite tipku. OnPlayerKeyStateChange je pozvan svaki put kada se tipka promijeni i taj kod je "true" svaki put kada je "fire" tipka zadr\u017Eana. Ako pritisnete "fire" kod \u0107e se aktivirati, Ako je ta tipka zadr\u017Eana i pritisnete crouch - taj kod \u0107e se ponovno aktivirati zato \u0161to se tipka (crouch) promijenila i "fire" je jo\u0161 uvijek zadr\u017Ean. Kako da detektujete kada je tipka prva pritisnuta, ali da se ne aktivira ponovno kada se jo\u0161 dr\u017Ei druga tipka?'}),"\n",(0,t.jsx)(i.h3,{id:"kako-provjeriti-tipku-koja-je-pritisnuta",children:"Kako provjeriti tipku koja je pritisnuta"}),"\n",(0,t.jsx)(i.p,{children:'Ovo je slu\u010Daj gdje "oldkeys" dolazi na snagu. Da biste provjerili je li tipka upravo pritisnuta, prvo trebate provjeriti je li postavljena u "newkeys" - \u0161to zna\u010Di da je pritisnuta, a zatim provjerite da NIJE u "oldkeys" - \u0161to zna\u010Di da je tek pritisnuta. Sljede\u0107i kod radi to:'}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-c",children:"if ((newkeys & KEY_FIRE) && !(oldkeys & KEY_FIRE))\n"})}),"\n",(0,t.jsx)(i.p,{children:"Ovo \u0107e biti ta\u010Dno SAMO kada je FIRE tipka prva pritisnuta, ne kada se dr\u017Ei i promijeni se jo\u0161 jedna tipka."}),"\n",(0,t.jsx)(i.h3,{id:"kako-provjeriti-kada-je-tipka-pu\u0161tena",children:"Kako provjeriti kada je tipka pu\u0161tena"}),"\n",(0,t.jsx)(i.p,{children:"Zapravo isti princip kao gore, ali obrnuto:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-c",children:"if ((oldkeys & KEY_FIRE) && !(newkeys & KEY_FIRE))\n"})}),"\n",(0,t.jsx)(i.h3,{id:"kako-provjeriti-vi\u0161e-tipki",children:"Kako provjeriti vi\u0161e tipki"}),"\n",(0,t.jsx)(i.p,{children:'Ako \u017Eelite da provjerite da li igra\u010D DR\u017DI "crouch" i "fire" onda \u0107e to raditi sljede\u0107i kod:'}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-c",children:"if ((newkeys & KEY_FIRE) && (newkeys & KEY_CROUCH))\n"})}),"\n",(0,t.jsx)(i.p,{children:'kako god, ako \u017Eelite da detektujete kada PRVO pritisnu "fire" i "crouch" ovaj kod NE\u0106E raditi. Raditi \u0107e ukoliko pritisnu obe tipke u isto vrijeme, ali ako su djelomi\u010Dno vani (daleko manje od pola sekunde) ne\u0107e:'}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-c",children:"if ((newkeys & KEY_FIRE) && !(oldkeys & KEY_FIRE) && (newkeys & KEY_CROUCH) && !(oldkeys & KEY_CROUCH))\n"})}),"\n",(0,t.jsxs)(i.p,{children:["Za\u0161to ne radi? Zato \u0161to je ",(0,t.jsx)(i.code,{children:"OnPlayerKeyStateChange"}),' pozvan svaki put kada se jedna tipka promijeni. Tako oni pritisnu "KEY_FIRE" - OnPlayerKeyStateChange je pozvan sa "KEY_FIRE" u "newkeys" i ne u "oldkeys", onda pritisnu "KEY_CROUCH" - OnPlayerKeyStateChange je pozvan sa "KEY_CROUCH" i "KEY_FIRE" u "newkeys", ali i "KEY_FIRE" je sada u "oldkeys" s obzirom da je ve\u0107 bio pritisnut, tako da "!(oldkeys & KEY_FIRE)" ne\u0107e uspjeti. Sre\u0107om, rje\u0161enje je vrlo jednostavno (zapravo jednostavnije od originalnog koda):']}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-c",children:"if ((newkeys & (KEY_FIRE | KEY_CROUCH)) == (KEY_FIRE | KEY_CROUCH) && (oldkeys & (KEY_FIRE | KEY_CROUCH)) != (KEY_FIRE | KEY_CROUCH))\n"})}),"\n",(0,t.jsx)(i.p,{children:'Ovo \u0107e mo\u017Eda izgledati komplikovano, ali ono provjerava da li su obe tipke postavljene u "newkeys" i da li obe tipke nisu postavljene u "oldkeys", ako je jedna od njih u "oldkeys" to nije va\u017Eno jer nisu bili obojica. Sve ove stvari mogu biti jako pojednostavljene sa definisanjem (defines).'}),"\n",(0,t.jsx)(i.h2,{id:"pojednostavljenje",children:"Pojednostavljenje"}),"\n",(0,t.jsx)(i.h3,{id:"detektovanje-dr\u017Eanja-tipke",children:"Detektovanje dr\u017Eanja tipke"}),"\n",(0,t.jsx)(i.p,{children:"Definicija:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-c",children:"// HOLDING(keys)\n#define HOLDING(%0) \\\n	((newkeys & (%0)) == (%0))\n"})}),"\n",(0,t.jsx)(i.p,{children:"Dr\u017Ei tipku:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-c",children:"if (HOLDING( KEY_FIRE ))\n"})}),"\n",(0,t.jsx)(i.p,{children:"Dr\u017Ei vi\u0161e tipki:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-c",children:"if (HOLDING( KEY_FIRE | KEY_CROUCH ))\n"})}),"\n",(0,t.jsx)(i.h3,{id:"detektovanje-prvog-pritiska-tipke",children:"Detektovanje prvog pritiska tipke"}),"\n",(0,t.jsx)(i.p,{children:"Definicija:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-c",children:"// PRESSED(keys)\n#define PRESSED(%0) \\\n	(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))\n"})}),"\n",(0,t.jsx)(i.p,{children:"Pritisnuli jednu tipku:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-c",children:"if (PRESSED( KEY_FIRE ))\n"})}),"\n",(0,t.jsx)(i.p,{children:"Pritisnuo vi\u0161e tipki:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-c",children:"if (PRESSED( KEY_FIRE | KEY_CROUCH ))\n"})}),"\n",(0,t.jsx)(i.h3,{id:"detektovanje-priti\u0161\u010De-li-igra\u010D-trenutno-tipku",children:"Detektovanje priti\u0161\u010De li igra\u010D trenutno tipku"}),"\n",(0,t.jsx)(i.p,{children:"Definicija:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-c",children:"// PRESSING(keyVariable, keys)\n#define PRESSING(%0,%1) \\\n	(%0 & (%1))\n"})}),"\n",(0,t.jsx)(i.p,{children:"Pritiskom na jednu tipku:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-c",children:"if (PRESSING( newkeys, KEY_FIRE ))\n"})}),"\n",(0,t.jsx)(i.p,{children:"Pritiskom na vi\u0161e tipki:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-c",children:"if (PRESSING( newkeys, KEY_FIRE | KEY_CROUCH ))\n"})}),"\n",(0,t.jsx)(i.h3,{id:"detektovanje-pu\u0161tanja-tipke",children:"Detektovanje pu\u0161tanja tipke"}),"\n",(0,t.jsx)(i.p,{children:"Definicija:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-c",children:"// RELEASED(keys)\n#define RELEASED(%0) \\\n	(((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))\n"})}),"\n",(0,t.jsx)(i.p,{children:"Pustio jednu tipku:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-c",children:"if (RELEASED( KEY_FIRE ))\n"})}),"\n",(0,t.jsx)(i.p,{children:"Pustio vi\u0161e tipki:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-c",children:"if (RELEASED( KEY_FIRE | KEY_CROUCH ))\n"})}),"\n",(0,t.jsx)(i.h2,{id:"primjeri",children:"Primjeri"}),"\n",(0,t.jsx)(i.h3,{id:"pri\u010Dvrstite-nitroobjekat-kada-igra\u010D-pritisne-fire-tipku",children:'Pri\u010Dvrstite NITRO(Objekat) kada igra\u010D pritisne "fire" tipku'}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-c",children:"public OnPlayerKeyStateChange(playerid, KEY:newkeys, KEY:oldkeys)\n{\n	if (PRESSED(KEY_FIRE))\n	{\n		if (IsPlayerInAnyVehicle(playerid))\n		{\n			AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);\n		}\n	}\n	return 1;\n}\n"})}),"\n",(0,t.jsx)(i.h3,{id:"super-skok",children:"Super skok"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-c",children:"public OnPlayerKeyStateChange(playerid, KEY:newkeys, KEY:oldkeys)\n{\n	if (PRESSED(KEY_JUMP))\n	{\n		new\n			Float:x,\n			Float:y,\n			Float:z;\n		GetPlayerPos(playerid, x, y, z);\n		SetPlayerPos(playerid, x, y, z + 10.0);\n	}\n	return 1;\n}\n"})}),"\n",(0,t.jsx)(i.h3,{id:"god-mode-kada-dr\u017Ei-use-tipku",children:'"God mode" kada dr\u017Ei "use" tipku'}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-c",children:'new\n	Float:gPlayerHealth[MAX_PLAYERS];\n\n#if !defined INFINITY\n	#define INFINITY (Float:0x7F800000)\n#endif\n\npublic OnPlayerKeyStateChange(playerid, KEY:newkeys, KEY:oldkeys)\n{\n	if (PRESSED(KEY_ACTION))\n	{\n		// Upravo su pritisnuli "action" tipku, sa\u010Duvaj njihov\n		// stari health za vra\u0107anje.\n		GetPlayerHealth(playerid, gPlayerHealth[playerid]);\n		SetPlayerHealth(playerid, INFINITY);\n	}\n	else if (RELEASED(KEY_ACTION))\n	{\n		// Jednostavno su pustili akciju - vrati\n		// njihov stari health ponovno.\n		SetPlayerHealth(playerid, gPlayerHealth[playerid]);\n	}\n	return 1;\n}\n'})}),"\n",(0,t.jsx)(i.h3,{id:"poja\u0161njenje",children:"Poja\u0161njenje"}),"\n",(0,t.jsx)(i.p,{children:"Ne morate da brinete o tome KAKO je to ura\u0111eno, samo da jeste. HOLDING(Dr\u017Eanje) detektuje da li su pritisnuli tipku/e, bez obzira na to jesu li je pritiskali prije, PRESSED(Pritisnuo) detektuje ako su pritisnuli tipku/e i RELEASED(Pustili) detektuje ako su upravo pustili tipku/e. Kako god, ako \u017Eelite znati vi\u0161e - nastavite \u010Ditati."}),"\n",(0,t.jsx)(i.p,{children:"Razlog za\u0161to ovo morate da uradite na ovaj na\u010Din, a ne samo kori\u0161tenjem & or ==, je taj da detektuje is to detect upravo te tipke koje \u017Eelite ignorisaju\u0107i ostale koje ne(\u0107e) biti pritisnute. Binarno KEY_SPRINT je:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"0b00001000\n"})}),"\n",(0,t.jsx)(i.p,{children:"i KEY_JUMP je:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"0b00100000\n"})}),"\n",(0,t.jsx)(i.p,{children:'Ovo ih "ORing-uje" u \u017Eeljene tipke (mogli bismo ih dodati i u ovom primjeru, ali to nije uvijek slu\u010Daj) daje:'}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"0b00101000\n"})}),"\n",(0,t.jsx)(i.p,{children:'Ako koristimo samo "&" i OnPlayerKeyStateChange je pozvan kada igra\u010D pritisne "jump" dobili bismo sljede\u0107i kod:'}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"newkeys = 0b00100000\nwanted  = 0b00101000\nANDed   = 0b00100000\n"})}),"\n",(0,t.jsx)(i.p,{children:'"AND" dva broja nije 0, dakle rezultat provjere je ta\u010Dan (1), \u0161to nije ono \u0161to \u017Eelimo.'}),"\n",(0,t.jsx)(i.p,{children:'Kada bismo koristili samo "==" ta dva broja o\u010Dito nisu ista, pa provjera ne bi uspjela, \u0161to i \u017Eelimo.'}),"\n",(0,t.jsx)(i.p,{children:"Da je igra\u010D pritiskao skok/jump), sprint i \u010Du\u010Danj(crouch), dobili bismo sljede\u0107i kod:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"newkeys = 0b00101010\nwanted  = 0b00101000\nANDed   = 0b00101000\n"})}),"\n",(0,t.jsx)(i.p,{children:'"AND-edovana" verzija je ista kao i wanted tipka i tako\u0111er je 0, dakle dati \u0107e ta\u010Dan odgovor, kako god dva originalna broja nisu ista tako da \u0107e "==" propasti(fail-ovati). U oba primjera jedan od dva je dao ta\u010Dan odgovor i jedan je dao neta\u010Dan odgovor. Ako uporedimo prvi u kojem smo koristili "&" i "==" dobiti \u0107emo:'}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"newkeys = 0b00100000\nwanted  = 0b00101000\nANDed   = 0b00100000\n"})}),"\n",(0,t.jsx)(i.p,{children:'O\u010Dito wanted i "AND-edovani" nisu isti, pa provjera ne uspijeva, \u0161to je to\u010Dno. Za drugi primjer:'}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"newkeys = 0b00101010\nwanted  = 0b00101000\nANDed   = 0b00101000\n"})}),"\n",(0,t.jsx)(i.p,{children:"Wanted i ANDed su isti tako da kombinuju\u0107i ih kao jednake \u0107e rezultirati ta\u010Dnim rezultatom, \u0161to je ponovno ta\u010Dno(korektno)."}),"\n",(0,t.jsx)(i.p,{children:'Dakle, pomo\u0107u ove metode mo\u017Eemo precizno provjeriti jesu li pritisnute odre\u0111ene tipke zanemaruju\u0107i sve ostale tipke koje se mogu pritisnuti ili ne. provjera starih tipki samo koristi "!=" umjesto "==" kako bi osigurala da tra\u017Eeni tasteri nisu prethodno pritisnuti, pa znamo da je jedan od njih upravo pritisnut.'})]})}function p(e={}){let{wrapper:i}={...(0,r.a)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(j,{...e})}):j(e)}},50065:function(e,i,a){a.d(i,{Z:()=>s,a:()=>o});var n=a(67294);let t={},r=n.createContext(t);function o(e){let i=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),n.createElement(r.Provider,{value:i},e.children)}}}]);