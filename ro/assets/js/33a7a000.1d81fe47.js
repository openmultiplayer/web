"use strict";(self.webpackChunkomp_web=self.webpackChunkomp_web||[]).push([["47"],{19772:function(e,a,i){i.r(a),i.d(a,{frontMatter:()=>s,toc:()=>d,default:()=>o,metadata:()=>n,assets:()=>l,contentTitle:()=>r});var n=JSON.parse('{"id":"scripting/callbacks/OnPlayerKeyStateChange","title":"OnPlayerKeyStateChange","description":"Acest callback este apelat atunci c\xe2nd starea oric\u0103rei taste acceptate este schimbat\u0103 (ap\u0103sat\u0103/eliberat\u0103).","source":"@site/i18n/ro/docusaurus-plugin-content-docs/current/scripting/callbacks/OnPlayerKeyStateChange.md","sourceDirName":"scripting/callbacks","slug":"/scripting/callbacks/OnPlayerKeyStateChange","permalink":"/ro/docs/scripting/callbacks/OnPlayerKeyStateChange","draft":false,"unlisted":false,"editUrl":"https://github.com/openmultiplayer/web/edit/master/frontend/docs/scripting/callbacks/OnPlayerKeyStateChange.md","tags":[{"inline":true,"label":"player","permalink":"/ro/docs/tags/player"}],"version":"current","frontMatter":{"title":"OnPlayerKeyStateChange","sidebar_label":"OnPlayerKeyStateChange","description":"Acest callback este apelat atunci c\xe2nd starea oric\u0103rei taste acceptate este schimbat\u0103 (ap\u0103sat\u0103/eliberat\u0103).","tags":["player"]},"sidebar":"docsSidebar","previous":{"title":"OnPlayerInteriorChange","permalink":"/ro/docs/scripting/callbacks/OnPlayerInteriorChange"},"next":{"title":"OnPlayerLeaveCheckpoint","permalink":"/ro/docs/scripting/callbacks/OnPlayerLeaveCheckpoint"}}'),t=i(85893),c=i(50065);let s={title:"OnPlayerKeyStateChange",sidebar_label:"OnPlayerKeyStateChange",description:"Acest callback este apelat atunci c\xe2nd starea oric\u0103rei taste acceptate este schimbat\u0103 (ap\u0103sat\u0103/eliberat\u0103).",tags:["player"]},r=void 0,l={},d=[{value:"Descriere",id:"descriere",level:2},{value:"Return\u0103ri",id:"return\u0103ri",level:2},{value:"Note",id:"note",level:2},{value:"Func\u021Bii similare",id:"func\u021Bii-similare",level:2},{value:"Informa\u021Bii suplimentare",id:"informa\u021Bii-suplimentare",level:2},{value:"Introducere",id:"introducere",level:3},{value:"Parametrii",id:"parametrii",level:3},{value:"Cum s\u0103 NU s\u0103 verifici o cheie",id:"cum-s\u0103-nu-s\u0103-verifici-o-cheie",level:3},{value:"Cum se verific\u0103 o cheie",id:"cum-se-verific\u0103-o-cheie",level:3},{value:"Cum s\u0103 verifica\u021Bi dac\u0103 o tast\u0103 a fost ap\u0103sat\u0103",id:"cum-s\u0103-verifica\u021Bi-dac\u0103-o-tast\u0103-a-fost-ap\u0103sat\u0103",level:3},{value:"Cum s\u0103 verifica\u021Bi dac\u0103 o cheie este eliberat\u0103",id:"cum-s\u0103-verifica\u021Bi-dac\u0103-o-cheie-este-eliberat\u0103",level:3},{value:"Cum se verific\u0103 mai multe chei",id:"cum-se-verific\u0103-mai-multe-chei",level:3},{value:"Simplificare",id:"simplificare",level:2},{value:"Detectarea men\u021Binerii unei chei",id:"detectarea-men\u021Binerii-unei-chei",level:3},{value:"Detectare prima ap\u0103sare a unei taste",id:"detectare-prima-ap\u0103sare-a-unei-taste",level:3},{value:"Detecteaz\u0103 dac\u0103 un juc\u0103tor apas\u0103 o tast\u0103 \xeen prezent",id:"detecteaz\u0103-dac\u0103-un-juc\u0103tor-apas\u0103-o-tast\u0103-\xeen-prezent",level:3},{value:"Detectarea eliber\u0103rii unei chei",id:"detectarea-eliber\u0103rii-unei-chei",level:3},{value:"Exemple",id:"exemple",level:2},{value:"Ata\u0219a\u021Bi NOS c\xe2nd juc\u0103torul apas\u0103 clic",id:"ata\u0219a\u021Bi-nos-c\xe2nd-juc\u0103torul-apas\u0103-clic",level:3},{value:"Super saritura",id:"super-saritura",level:3},{value:"Modul God \xeen timp ce \u021Bine\u021Bi ap\u0103sat",id:"modul-god-\xeen-timp-ce-\u021Bine\u021Bi-ap\u0103sat",level:3},{value:"Explica\u021Bie",id:"explica\u021Bie",level:3}];function u(e){let a={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h2,{id:"descriere",children:"Descriere"}),"\n",(0,t.jsxs)(a.p,{children:["Acest callback este apelat atunci c\xe2nd starea oric\u0103rei taste ",(0,t.jsx)(a.a,{href:"../resources/keys",children:"acceptate"})," este schimbat\u0103 (ap\u0103sat\u0103/eliberat\u0103).",(0,t.jsx)("br",{}),"Tastele direc\u021Bionale nu declan\u0219eaz\u0103 OnPlayerKeyStateChange (sus/jos/st\xe2nga/dreapta)."]}),"\n",(0,t.jsxs)(a.table,{children:[(0,t.jsx)(a.thead,{children:(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.th,{children:"Name"}),(0,t.jsx)(a.th,{children:"Descriere"})]})}),(0,t.jsxs)(a.tbody,{children:[(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"playerid"}),(0,t.jsx)(a.td,{children:"ID-ul juc\u0103torului care a ap\u0103sat sau a eliberat o tast\u0103."})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"newkeys"}),(0,t.jsxs)(a.td,{children:["O hart\u0103 (masc\u0103 de bi\u021Bi) a cheilor de\u021Binute \xeen prezent - ",(0,t.jsx)(a.a,{href:"../resources/keys",children:"vezi aici"})]})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"oldkeys"}),(0,t.jsxs)(a.td,{children:["O hart\u0103 (masc\u0103 de bi\u021Bi) a cheilor de\u021Binute \xeenainte de modificarea curent\u0103 - ",(0,t.jsx)(a.a,{href:"../resources/keys",children:"vezi aici"}),"."]})]})]})]}),"\n",(0,t.jsx)(a.h2,{id:"return\u0103ri",children:"Return\u0103ri"}),"\n",(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsx)(a.li,{children:"This callback does not handle returns."}),"\n",(0,t.jsx)(a.li,{children:"It is always called first in gamemode."}),"\n"]}),"\n",(0,t.jsx)(a.h2,{id:"note",children:"Note"}),"\n",(0,t.jsx)(a.admonition,{type:"info",children:(0,t.jsx)(a.p,{children:"This callback can also be called by NPC."})}),"\n",(0,t.jsx)(a.admonition,{type:"tip",children:(0,t.jsxs)(a.p,{children:["Directional keys do not trigger OnPlayerKeyStateChange (up/down/left/right).",(0,t.jsx)("br",{}),"They can only be detected with ",(0,t.jsx)(a.a,{href:"../functions/GetPlayerKeys",children:"GetPlayerKeys"})," (in ",(0,t.jsx)(a.a,{href:"../callbacks/OnPlayerUpdate",children:"OnPlayerUpdate"})," or a timer)."]})}),"\n",(0,t.jsx)(a.h2,{id:"func\u021Bii-similare",children:"Func\u021Bii similare"}),"\n",(0,t.jsx)(a.p,{children:"#test"}),"\n",(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.a,{href:"../functions/GetPlayerKeys",children:"GetPlayerKeys"}),": Verifica\u021Bi ce taste \u021Bine un juc\u0103tor."]}),"\n"]}),"\n",(0,t.jsx)(a.h2,{id:"informa\u021Bii-suplimentare",children:"Informa\u021Bii suplimentare"}),"\n",(0,t.jsx)(a.h3,{id:"introducere",children:"Introducere"}),"\n",(0,t.jsxs)(a.p,{children:["Acest callback este apelat ori de c\xe2te ori un juc\u0103tor apas\u0103 sau elibereaz\u0103 una dintre tastele acceptate (consulta\u021Bi ",(0,t.jsx)(a.a,{href:"../resources/keys",children:"Taste"}),").",(0,t.jsx)("br",{}),"Tastele care sunt acceptate nu sunt taste reale de la tastatur\u0103, ci func\u021Bia mapat\u0103 in San Andreas, aceasta \xeenseamn\u0103 c\u0103, de exemplu, nu pute\u021Bi detecta c\xe2nd cineva apas\u0103 pe ",(0,t.jsx)("strong",{children:"bara de spa\u021Biu"}),", dar pute\u021Bi detecta c\xe2nd ap\u0103s\u0103 tasta de sprint (care poate fi sau nu atribuit\u0103 barei de spa\u021Biu ( este implicit))."]}),"\n",(0,t.jsx)(a.h3,{id:"parametrii",children:"Parametrii"}),"\n",(0,t.jsx)(a.p,{children:"The parameters to this function are a list of all keys currently being held down and all the keys held down a moment ago. The callback is called when a key state changes (that is, when a key is either pressed or released) and passes the states or all keys before and after this change. This information can be used to see exactly what happened but the variables can not be used directly in the same way as parameters to other functions. To reduce the number of variables only a single BIT is used to represent a key, this means that one variable may contain multiple keys at once and simply comparing values will not always work."}),"\n",(0,t.jsx)(a.h3,{id:"cum-s\u0103-nu-s\u0103-verifici-o-cheie",children:"Cum s\u0103 NU s\u0103 verifici o cheie"}),"\n",(0,t.jsx)(a.p,{children:"S\u0103 presupunem c\u0103 dori\u021Bi s\u0103 detecta\u021Bi c\xe2nd un juc\u0103tor apas\u0103 butonul FIRE, codul evident ar fi:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-c",children:"if (newkeys == KEY_FIRE)\n"})}),"\n",(0,t.jsx)(a.p,{children:"Acest cod poate func\u021Biona chiar \u0219i \xeen testarea dvs., dar este gre\u0219it \u0219i testarea dvs. este insuficient\u0103. \xcencerca\u021Bi s\u0103 v\u0103 ghemui\u021Bi \u0219i s\u0103 ap\u0103sa\u021Bi focul - codul dvs. nu va mai func\u021Biona instantaneu. De ce? Deoarece \u201Enewkeys\u201D nu mai este acela\u0219i lucru cu \u201EKEY_FIRE\u201D, este acela\u0219i cu \u201EKEY_FIRE\u201D COMBINAT CU \u201EKEY_CROUCH\u201D."}),"\n",(0,t.jsx)(a.h3,{id:"cum-se-verific\u0103-o-cheie",children:"Cum se verific\u0103 o cheie"}),"\n",(0,t.jsx)(a.p,{children:"Deci, dac\u0103 variabila poate con\u021Bine mai multe chei simultan, cum verifici doar una singur\u0103? R\u0103spunsul este un pic de mascare. Fiecare tast\u0103 are propriul bit \xeen variabil\u0103 (unele taste au acela\u0219i bit, dar sunt taste onfoot/incar, deci nu pot fi ap\u0103sate niciodat\u0103 \xeen acela\u0219i timp) \u0219i trebuie s\u0103 verifica\u021Bi doar acel singur bit:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-c",children:"if (newkeys & KEY_FIRE)\n"})}),"\n",(0,t.jsxs)(a.p,{children:["Re\u021Bine\u021Bi c\u0103 singurul ",(0,t.jsx)("strong",{children:"&"})," este corect - acesta este un \u0218I pe bi\u021Bi, nu un \u0218I logic, a\u0219a cum se numesc cele dou\u0103 ampersand."]}),"\n",(0,t.jsx)(a.p,{children:"Acum, dac\u0103 testa\u021Bi acest cod, va func\u021Biona indiferent dac\u0103 sunte\u021Bi ghemuit sau \xeen picioare c\xe2nd ap\u0103sa\u021Bi tasta de declan\u0219are. Cu toate acestea, exist\u0103 \xeenc\u0103 o mic\u0103 problem\u0103 - se va declan\u0219a at\xe2ta timp c\xe2t \u021Bine\u021Bi cheia. OnPlayerKeyStateChange este apelat de fiecare dat\u0103 c\xe2nd o tast\u0103 se schimb\u0103 \u0219i acel cod este adev\u0103rat ori de c\xe2te ori tasta de declan\u0219are este ap\u0103sat\u0103. Dac\u0103 ap\u0103sa\u021Bi foc, codul se va declan\u0219a, dac\u0103 acea tast\u0103 este ap\u0103sat\u0103 \u0219i ap\u0103sa\u021Bi ghemuit - acel cod se va declan\u0219a din nou deoarece o tast\u0103 (ghemuit) s-a schimbat \u0219i focul este \xeenc\u0103 \u021Binut ap\u0103sat Cum detect\u0103m c\xe2nd o tast\u0103 este ap\u0103sat\u0103 pentru prima dat\u0103, dar nu se declan\u0219eaz\u0103 din nou c\xe2nd este \xeenc\u0103 ap\u0103sat\u0103 \u0219i se schimb\u0103 o alt\u0103 cheie?"}),"\n",(0,t.jsx)(a.h3,{id:"cum-s\u0103-verifica\u021Bi-dac\u0103-o-tast\u0103-a-fost-ap\u0103sat\u0103",children:"Cum s\u0103 verifica\u021Bi dac\u0103 o tast\u0103 a fost ap\u0103sat\u0103"}),"\n",(0,t.jsx)(a.p,{children:'Aici intervine "oldkeys". Pentru a verifica dac\u0103 o tast\u0103 tocmai a fost ap\u0103sat\u0103, trebuie s\u0103 verifica\u021Bi mai \xeent\xe2i dac\u0103 este setat\u0103 \xeen \u201Etastele noi\u201D - adic\u0103 este \u021Binut\u0103 ap\u0103sat\u0103, apoi verifica\u021Bi c\u0103 NU este \xeen \u201Etastele vechi\u201D - adic\u0103 este tocmai a fost \u021Binut ap\u0103sat. Urm\u0103torul cod face acest lucru:'}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-c",children:"if ((newkeys & KEY_FIRE) && !(oldkeys & KEY_FIRE))\n"})}),"\n",(0,t.jsx)(a.p,{children:"Acest lucru va fi adev\u0103rat NUMAI atunci c\xe2nd tasta FIRE este ap\u0103sat\u0103 pentru prima dat\u0103, nu c\xe2nd este ap\u0103sat\u0103 \u0219i se schimb\u0103 o alt\u0103 tast\u0103."}),"\n",(0,t.jsx)(a.h3,{id:"cum-s\u0103-verifica\u021Bi-dac\u0103-o-cheie-este-eliberat\u0103",children:"Cum s\u0103 verifica\u021Bi dac\u0103 o cheie este eliberat\u0103"}),"\n",(0,t.jsx)(a.p,{children:"Exact acela\u0219i principiu ca mai sus, dar invers:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-c",children:"if ((oldkeys & KEY_FIRE) && !(newkeys & KEY_FIRE))\n"})}),"\n",(0,t.jsx)(a.h3,{id:"cum-se-verific\u0103-mai-multe-chei",children:"Cum se verific\u0103 mai multe chei"}),"\n",(0,t.jsx)(a.p,{children:"Dac\u0103 dori\u021Bi s\u0103 verifica\u021Bi dac\u0103 juc\u0103torii \u021AIN\u021AI se ghemuiesc \u0219i trag, atunci urm\u0103torul cod va func\u021Biona bine:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-c",children:"if ((newkeys & KEY_FIRE) && (newkeys & KEY_CROUCH))\n"})}),"\n",(0,t.jsx)(a.p,{children:"Cu toate acestea, dac\u0103 dori\u021Bi s\u0103 detecta\u021Bi c\xe2nd ace\u0219tia ap\u0103sa\u021Bi \xceNT\xc2I PRIME \u0219i v\u0103 ghemui\u021Bi, urm\u0103torul cod NU VA func\u021Biona. Va func\u021Biona dac\u0103 reu\u0219esc s\u0103 apese cele dou\u0103 taste exact \xeen acela\u0219i timp, dar dac\u0103 sunt frac\u021Bionat (cu mult mai pu\u021Bin de jum\u0103tate de secund\u0103), nu va:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-c",children:"if ((newkeys & KEY_FIRE) && !(oldkeys & KEY_FIRE) && (newkeys & KEY_CROUCH) && !(oldkeys & KEY_CROUCH))\n"})}),"\n",(0,t.jsx)(a.p,{children:'De ce nu? Deoarece OnPlayerKeyStateChange este apelat de fiecare dat\u0103 c\xe2nd se schimb\u0103 o singur\u0103 cheie. A\u0219a c\u0103 ei apas\u0103 \u201EKEY_FIRE\u201D - OnPlayerKeyStateChange este apelat cu \u201EKEY_FIRE\u201D \xeen \u201Enewkeys\u201D \u0219i nu \xeen \u201Eoldkeys\u201D, apoi ap\u0103s\u0103 \u201EKEY_CROUCH\u201D - OnPlayerKeyStateChange este apelat cu \u201EKEY_CROUCH\u201D \u0219i \u201EKEY_FIRE\u201D \xeen \u201Enewkeys\u201D, dar \u201E KEY_FIRE" este acum \u0219i \xeen \u201Eoldkeys\u201D, deoarece a fost deja ap\u0103sat, a\u0219a c\u0103 \u201E!(oldkeys & KEY_FIRE)\u201D va e\u0219ua. Din fericire, solu\u021Bia este foarte simpl\u0103 (de fapt, mai simpl\u0103 dec\xe2t codul original):'}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-c",children:"if ((newkeys & (KEY_FIRE | KEY_CROUCH)) == (KEY_FIRE | KEY_CROUCH) && (oldkeys & (KEY_FIRE | KEY_CROUCH)) != (KEY_FIRE | KEY_CROUCH))\n"})}),"\n",(0,t.jsx)(a.p,{children:"Acest lucru poate p\u0103rea complicat, dar verific\u0103 dac\u0103 ambele chei sunt setate \xeen \u201Enewkeys\u201D \u0219i c\u0103 ambele chei nu au fost setate \xeen \u201Eoldkeys\u201D, dac\u0103 una dintre ele a fost setat\u0103 \xeen \u201Eoldkeys\u201D, asta nu conteaz\u0103, deoarece nu ambele. au fost. Toate aceste lucruri pot fi simplificate foarte mult cu defini\u021Bii."}),"\n",(0,t.jsx)(a.h2,{id:"simplificare",children:"Simplificare"}),"\n",(0,t.jsx)(a.h3,{id:"detectarea-men\u021Binerii-unei-chei",children:"Detectarea men\u021Binerii unei chei"}),"\n",(0,t.jsx)(a.p,{children:"Defini\u021Bi:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-c",children:"// HOLDING(keys)\n#define HOLDING(%0) \\\n	((newkeys & (%0)) == (%0))\n"})}),"\n",(0,t.jsx)(a.p,{children:"\u021Ain\xe2nd ap\u0103sat\u0103 o cheie:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-c",children:"if (HOLDING( KEY_FIRE ))\n"})}),"\n",(0,t.jsx)(a.p,{children:"\u021Ain\xe2nd ap\u0103sat\u0103 mai multe chei:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-c",children:"if (HOLDING( KEY_FIRE | KEY_CROUCH ))\n"})}),"\n",(0,t.jsx)(a.h3,{id:"detectare-prima-ap\u0103sare-a-unei-taste",children:"Detectare prima ap\u0103sare a unei taste"}),"\n",(0,t.jsx)(a.p,{children:"Defini\u021Bi:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-c",children:"// PRESSED(keys)\n#define PRESSED(%0) \\\n	(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))\n"})}),"\n",(0,t.jsx)(a.p,{children:"Ap\u0103sat\u0103 o tast\u0103:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-c",children:"if (PRESSED( KEY_FIRE ))\n"})}),"\n",(0,t.jsx)(a.p,{children:"Ap\u0103sate mai multe taste:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-c",children:"if (PRESSED( KEY_FIRE | KEY_CROUCH ))\n"})}),"\n",(0,t.jsx)(a.h3,{id:"detecteaz\u0103-dac\u0103-un-juc\u0103tor-apas\u0103-o-tast\u0103-\xeen-prezent",children:"Detecteaz\u0103 dac\u0103 un juc\u0103tor apas\u0103 o tast\u0103 \xeen prezent"}),"\n",(0,t.jsx)(a.p,{children:"Defini\u021Bi:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-c",children:"// PRESSING(keyVariable, keys)\n#define PRESSING(%0,%1) \\\n	(%0 & (%1))\n"})}),"\n",(0,t.jsx)(a.p,{children:"\u021Ain\xe2nd ap\u0103sat\u0103 o cheie:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-c",children:"if (PRESSING( newkeys, KEY_FIRE ))\n"})}),"\n",(0,t.jsx)(a.p,{children:"\u021Ain\xe2nd ap\u0103sat\u0103 mai multe chei:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-c",children:"if (PRESSING( newkeys, KEY_FIRE | KEY_CROUCH ))\n"})}),"\n",(0,t.jsx)(a.h3,{id:"detectarea-eliber\u0103rii-unei-chei",children:"Detectarea eliber\u0103rii unei chei"}),"\n",(0,t.jsx)(a.p,{children:"Defini\u021Bi:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-c",children:"// RELEASED(keys)\n#define RELEASED(%0) \\\n	(((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))\n"})}),"\n",(0,t.jsx)(a.p,{children:"S-a eliberat o cheie:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-c",children:"if (RELEASED( KEY_FIRE ))\n"})}),"\n",(0,t.jsx)(a.p,{children:"S-au eliberat mai multe chei:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-c",children:"if (RELEASED( KEY_FIRE | KEY_CROUCH ))\n"})}),"\n",(0,t.jsx)(a.h2,{id:"exemple",children:"Exemple"}),"\n",(0,t.jsx)(a.h3,{id:"ata\u0219a\u021Bi-nos-c\xe2nd-juc\u0103torul-apas\u0103-clic",children:"Ata\u0219a\u021Bi NOS c\xe2nd juc\u0103torul apas\u0103 clic"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-c",children:"public OnPlayerKeyStateChange(playerid, KEY:newkeys, KEY:oldkeys)\n{\n	if (PRESSED(KEY_FIRE))\n	{\n		if (IsPlayerInAnyVehicle(playerid))\n		{\n			AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);\n		}\n	}\n	return 1;\n}\n"})}),"\n",(0,t.jsx)(a.h3,{id:"super-saritura",children:"Super saritura"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-c",children:"public OnPlayerKeyStateChange(playerid, KEY:newkeys, KEY:oldkeys)\n{\n	if (PRESSED(KEY_JUMP))\n	{\n		new\n			Float:x,\n			Float:y,\n			Float:z;\n		GetPlayerPos(playerid, x, y, z);\n		SetPlayerPos(playerid, x, y, z + 10.0);\n	}\n	return 1;\n}\n"})}),"\n",(0,t.jsx)(a.h3,{id:"modul-god-\xeen-timp-ce-\u021Bine\u021Bi-ap\u0103sat",children:"Modul God \xeen timp ce \u021Bine\u021Bi ap\u0103sat"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-c",children:"new\n	Float:gPlayerHealth[MAX_PLAYERS];\n\n#if !defined INFINITY\n	#define INFINITY (Float:0x7F800000)\n#endif\n\npublic OnPlayerKeyStateChange(playerid, KEY:newkeys, KEY:oldkeys)\n{\n	if (PRESSED(KEY_ACTION))\n	{\n		// Tocmai au ap\u0103sat tasta de ac\u021Biune, salveaz\u0103-le\n		// s\u0103n\u0103tate veche pentru refacere\n		GetPlayerHealth(playerid, gPlayerHealth[playerid]);\n		SetPlayerHealth(playerid, INFINITY);\n	}\n	else if (RELEASED(KEY_ACTION))\n	{\n		// Au l\u0103sat doar ac\u021Biunea - restaura\u021Bi\n		// vechea lor s\u0103n\u0103tate din nou.\n		SetPlayerHealth(playerid, gPlayerHealth[playerid]);\n	}\n	return 1;\n}\n"})}),"\n",(0,t.jsx)(a.h3,{id:"explica\u021Bie",children:"Explica\u021Bie"}),"\n",(0,t.jsx)(a.p,{children:"Nu trebuie s\u0103 v\u0103 face\u021Bi griji despre CUM se face, doar c\u0103 este. HOLDING detecteaz\u0103 dac\u0103 ace\u0219tia apas\u0103 o tast\u0103 (sau taste), indiferent dac\u0103 au ap\u0103sat-o \xeenainte, PRESSED detecteaz\u0103 dac\u0103 doar au ap\u0103sat tastele \u0219i RELEASED detecteaz\u0103 dac\u0103 tocmai au eliberat o tast\u0103(e). Cu toate acestea, dac\u0103 dori\u021Bi s\u0103 afla\u021Bi mai multe - citi\u021Bi mai departe."}),"\n",(0,t.jsx)(a.p,{children:"Motivul pentru care trebuie s\u0103 face\u021Bi acest lucru, nu doar folosind & sau ==, este s\u0103 detecta\u021Bi exact tastele pe care le dori\u021Bi, ignor\xe2nd altele care pot fi sau nu ap\u0103sate. \xcen binar KEY_SPRINT este:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{children:"0b00001000\n"})}),"\n",(0,t.jsx)(a.p,{children:"\u0219i KEY_JUMP este:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{children:"0b00100000\n"})}),"\n",(0,t.jsx)(a.p,{children:"astfel, OR-ul \xeen cheile dorite (le-am putea ad\u0103uga \u0219i \xeen acest exemplu, dar nu este \xeentotdeauna cazul) d\u0103:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{children:"0b00101000\n"})}),"\n",(0,t.jsx)(a.p,{children:"Dac\u0103 am folosit doar & \u0219i s-a apelat OnPlayerKeyStateChange pentru un juc\u0103tor care apas\u0103 pe salt, am g\u0103sit urm\u0103torul cod:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{children:"newkeys = 0b00100000\nwanted  = 0b00101000\nANDed   = 0b00100000\n"})}),"\n",(0,t.jsx)(a.p,{children:"AND-ul celor dou\u0103 numere nu este 0, deci rezultatul verific\u0103rii este adev\u0103rat, ceea ce nu este ceea ce ne dorim."}),"\n",(0,t.jsx)(a.p,{children:"Dac\u0103 am folosi doar == cele dou\u0103 numere nu sunt \xeen mod clar acelea\u0219i, astfel verificarea ar e\u0219ua, ceea ce ne dorim."}),"\n",(0,t.jsx)(a.p,{children:"Dac\u0103 juc\u0103torul ap\u0103sa salt, sprint \u0219i ghemuit, am ob\u021Bine urm\u0103torul cod:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{children:"newkeys = 0b00101010\nwanted  = 0b00101000\nANDed   = 0b00101000\n"})}),"\n",(0,t.jsx)(a.p,{children:"Versiunea AND este aceea\u0219i cu cheile necesare \u0219i, de asemenea, nu 0, astfel \xeenc\xe2t va da r\u0103spunsul corect, totu\u0219i cele dou\u0103 numere originale nu sunt acelea\u0219i, a\u0219a c\u0103 == va e\u0219ua. \xcen ambele exemple, unul dintre cei doi a dat r\u0103spunsul corect \u0219i unul a dat r\u0103spunsul gre\u0219it. Dac\u0103 \xeel compar\u0103m pe primul folosind & \u0219i == ob\u021Binem:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{children:"newkeys = 0b00100000\nwanted  = 0b00101000\nANDed   = 0b00100000\n"})}),"\n",(0,t.jsx)(a.p,{children:"Evident, dorit \u0219i AND nu sunt acelea\u0219i, a\u0219a c\u0103 verificarea e\u0219ueaz\u0103, ceea ce este corect. Pentru al doilea exemplu:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{children:"newkeys = 0b00101010\nwanted  = 0b00101000\nANDed   = 0b00101000\n"})}),"\n",(0,t.jsx)(a.p,{children:"Wanted \u0219i AND sunt acelea\u0219i, a\u0219a c\u0103 compararea lor ca fiind egal\u0103 va avea ca rezultat un rezultat adev\u0103rat, care din nou este corect."}),"\n",(0,t.jsx)(a.p,{children:"Deci, folosind aceast\u0103 metod\u0103, putem verifica cu exactitate dac\u0103 anumite taste sunt ap\u0103sate ignor\xe2nd toate celelalte taste care pot fi sau nu ap\u0103sate. verificarea tastelor vechi folose\u0219te doar != \xeen loc de == pentru a se asigura c\u0103 tastele necesare nu au fost ap\u0103sate anterior, a\u0219a c\u0103 \u0219tim c\u0103 una dintre ele tocmai a fost ap\u0103sat\u0103."})]})}function o(e={}){let{wrapper:a}={...(0,c.a)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},50065:function(e,a,i){i.d(a,{Z:()=>r,a:()=>s});var n=i(67294);let t={},c=n.createContext(t);function s(e){let a=n.useContext(c);return n.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function r(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),n.createElement(c.Provider,{value:a},e.children)}}}]);