"use strict";(self.webpackChunkomp_web=self.webpackChunkomp_web||[]).push([["95131"],{72288:function(e,n,i){i.r(n),i.d(n,{frontMatter:()=>l,toc:()=>u,default:()=>d,metadata:()=>t,assets:()=>c,contentTitle:()=>o});var t=JSON.parse('{"id":"tutorials/cooldowns","title":"Cooldown-uri","description":"Un tutorial pentru scrierea cooldown-urilor pentru limitarea ac\u021Biunilor utilizatorilor folosind num\u0103rul de bif\u0103ri \u0219i evitarea utiliz\u0103rii cronometrelor.","source":"@site/i18n/ro/docusaurus-plugin-content-docs/current/tutorials/cooldowns.md","sourceDirName":"tutorials","slug":"/tutorials/cooldowns","permalink":"/ro/docs/tutorials/cooldowns","draft":false,"unlisted":false,"editUrl":"https://github.com/openmultiplayer/web/edit/master/frontend/docs/tutorials/cooldowns.md","tags":[],"version":"current","frontMatter":{"title":"Cooldown-uri","sidebar_label":"Cooldown-uri","description":"Un tutorial pentru scrierea cooldown-urilor pentru limitarea ac\u021Biunilor utilizatorilor folosind num\u0103rul de bif\u0103ri \u0219i evitarea utiliz\u0103rii cronometrelor."},"sidebar":"docsSidebar","previous":{"title":"Colorfix","permalink":"/ro/docs/tutorials/colorfix"},"next":{"title":"System de variabile pe server","permalink":"/ro/docs/tutorials/servervariablesystem"}}'),a=i(85893),r=i(50065);let l={title:"Cooldown-uri",sidebar_label:"Cooldown-uri",description:"Un tutorial pentru scrierea cooldown-urilor pentru limitarea ac\u021Biunilor utilizatorilor folosind num\u0103rul de bif\u0103ri \u0219i evitarea utiliz\u0103rii cronometrelor."},o=void 0,c={},u=[{value:"Utilizarea timerelor",id:"utilizarea-timerelor",level:2},{value:"Folosind <code>GetTickCount()</code> \u0219i <code>gettime()</code>",id:"folosind-gettickcount-\u0219i-gettime",level:2},{value:"Un cooldown",id:"un-cooldown",level:3},{value:"Un cronometru",id:"un-cronometru",level:3},{value:"Defectiuni",id:"defectiuni",level:4},{value:"Recapitulare \u0219i note",id:"recapitulare-\u0219i-note",level:2}];function s(e){let n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"Acest tutorial acoper\u0103 scrierea unui mecanic de joc utilizat \xeen mod obi\u0219nuit \xeen jocurile de ac\u021Biune: cooldowns. Un timp de r\u0103cire este un instrument pentru a limita frecven\u021Ba la care un juc\u0103tor poate face ceva. Poate fi vorba despre utilizarea unei abilit\u0103\u021Bi precum vindecarea sau scrierea mesajelor de chat. V\u0103 permite s\u0103 \xeencetini\u021Bi ritmul cu care juc\u0103torii fac lucruri fie \xeen scop de echilibrare a jocului, fie pentru a preveni spamul."}),"\n",(0,a.jsxs)(n.p,{children:["Mai \xeent\xe2i voi exemplifica modul ",(0,a.jsx)(n.em,{children:"bad"})," de a face o r\u0103cire folosind ",(0,a.jsx)(n.code,{children:"SetTimer"})," pentru a actualiza starea."]}),"\n",(0,a.jsx)(n.h2,{id:"utilizarea-timerelor",children:"Utilizarea timerelor"}),"\n",(0,a.jsx)(n.p,{children:"Spune\u021Bi, de exemplu, c\u0103 ave\u021Bi o ac\u021Biune specific\u0103 care poate fi efectuat\u0103 doar o dat\u0103 la at\xe2t de multe secunde, v\u0103d o mul\u021Bime de oameni (inclusiv Southclaws, acum mul\u021Bi ani) care fac a\u0219a ceva:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-c",children:'static bool:IsPlayerAllowedToDoThing[MAX_PLAYERS];\nOnPlayerInteractWithServer(playerid)\n/* This can be any sort of input event a player makes such as:\n *  Entering a command\n *  Picking up a pickup\n *  Entering a checkpoint\n *  Pressing a button\n *  Entering an area\n *  Using a dialog\n */\n{\n    // This only works when the player is allowed to\n    if (IsPlayerAllowedToDoThing[playerid])\n    {\n        // Do the thing the player requested\n        DoTheThingThePlayerRequested();\n        // Disallow the player\n        IsPlayerAllowedToDoThing[playerid] = false;\n        // Allow the player to do the thing again in 10 seconds\n        SetTimerEx("AllowPlayer", 10000, false, "d", playerid);\n        return 1;\n    }\n    else\n    {\n        SendClientMessage(playerid, -1, "You are not allowed to do that yet!");\n        return 0;\n    }\n}\n// Called 10 seconds after the player does the thing\npublic AllowPlayer(playerid)\n{\n    IsPlayerAllowedToDoThing[playerid] = true;\n    SendClientMessage(playerid, -1, "You are allowed to do the thing again! :D");\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"Acum totul este bine, func\u021Bioneaz\u0103, juc\u0103torul nu va mai putea face acel lucru timp de 10 secunde dup\u0103 ce \xeel folose\u0219te."}),"\n",(0,a.jsx)(n.p,{children:"Lua\u021Bi un alt exemplu aici, acesta este un cronometru care m\u0103soar\u0103 c\xe2t dureaz\u0103 un juc\u0103tor s\u0103 fac\u0103 o curs\u0103 simpl\u0103 punct la punct:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-c",children:'static\n    StopWatchTimerID[MAX_PLAYERS],\n    StopWatchTotalTime[MAX_PLAYERS];\nStartPlayerRace(playerid)\n{\n    // Calls a function every second\n    StopWatchTimerID[playerid] = SetTimerEx("StopWatch", 1000, true, "d", playerid);\n}\npublic StopWatch(playerid)\n{\n    // Increment the seconds counter\n    StopWatchTotalTime[playerid]++;\n}\nOnPlayerFinishRace(playerid)\n{\n    new str[128];\n    format(str, 128, "You took %d seconds to do that", StopWatchTotalTime[playerid]);\n    SendClientMessage(playerid, -1, str);\n    KillTimer(StopWatchTimerID[playerid]);\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"Aceste dou\u0103 exemple sunt comune \u0219i pot func\u021Biona bine. Cu toate acestea, exist\u0103 o modalitate mult mai bun\u0103 de a ob\u021Bine ambele rezultate, care este mult mai precis\u0103 \u0219i poate da temporiz\u0103ri ale cronometrului p\xe2n\u0103 la milisecunde!"}),"\n",(0,a.jsxs)(n.h2,{id:"folosind-gettickcount-\u0219i-gettime",children:["Folosind ",(0,a.jsx)(n.code,{children:"GetTickCount()"})," \u0219i ",(0,a.jsx)(n.code,{children:"gettime()"})]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"GetTickCount()"})," este o func\u021Bie care v\u0103 ofer\u0103 timpul \xeen milisecunde de la deschiderea procesului serverului. ",(0,a.jsx)(n.code,{children:"gettime()"})," returneaz\u0103 num\u0103rul de secunde de la 1 ianuarie 1970, cunoscut \u0219i sub numele de Unix Timestamp."]}),"\n",(0,a.jsx)(n.p,{children:"Dac\u0103 apela\u021Bi oricare dintre aceste func\u021Bii \xeen dou\u0103 momente diferite \u0219i sc\u0103de\u021Bi prima dat\u0103 din a doua, ave\u021Bi brusc un interval \xeentre aceste dou\u0103 evenimente \xeen milisecunde sau, respectiv, \xeen secunde! Arunca\u021Bi o privire la acest exemplu:"}),"\n",(0,a.jsx)(n.h3,{id:"un-cooldown",children:"Un cooldown"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-c",children:'static PlayerAllowedTick[MAX_PLAYERS];\nOnPlayerInteractWithServer(playerid)\n{\n   if (GetTickCount() - PlayerAllowedTick[playerid] > 10000)\n   // This only works when the current tick minus the last tick is above 10000.\n   // In other words, it only works when the interval between the actions is over 10 seconds.\n   {\n       DoTheThingThePlayerRequested();\n       PlayerAllowedTick[playerid] = GetTickCount(); // Update the tick count with the latest time.\n       return 1;\n   }\n   else\n   {\n       SendClientMessage(playerid, -1, "You are not allowed to do that yet!");\n       return 0;\n   }\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Sau, alternativ, versiunea ",(0,a.jsx)(n.code,{children:"gettime()"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-c",children:'static PlayerAllowedSeconds[MAX_PLAYERS];\nOnPlayerInteractWithServer(playerid)\n{\n   if (gettime() - PlayerAllowedSeconds[playerid] > 10)\n   // This only works when the current seconds minus the last seconds is above 10.\n   // In other words, it only works when the interval between the actions is over 10 seconds.\n   {\n       DoTheThingThePlayerRequested();\n       PlayerAllowedSeconds[playerid] = gettime(); // Update the seconds count with the latest time.\n       return 1;\n   }\n   else\n   {\n       SendClientMessage(playerid, -1, "You are not allowed to do that yet!");\n       return 0;\n   }\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"Exist\u0103 mult mai pu\u021Bin cod acolo, nu este nevoie de o func\u021Bie public\u0103 sau de un cronometru. Dac\u0103 dori\u021Bi cu adev\u0103rat, pute\u021Bi pune timpul r\u0103mas \xeen mesajul de eroare:"}),"\n",(0,a.jsx)(n.p,{children:"(Folosesc SendFormatMessage \xeen acest exemplu)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-c",children:'SendFormatMessage(\n    playerid,\n    -1,\n    "You are not allowed to do that yet! You can again in %d ms",\n    10000 - (GetTickCount() - PlayerAllowedTick[playerid])\n);\n'})}),"\n",(0,a.jsx)(n.p,{children:"Acesta este un exemplu foarte de baz\u0103, ar fi mai bine s\u0103 converti\u021Bi acea valoare MS \xeentr-un \u0219ir de \u201Eminute: secunde. Milisecunde\u201D, dar voi posta codul respectiv la sf\xe2r\u0219it."}),"\n",(0,a.jsx)(n.h3,{id:"un-cronometru",children:"Un cronometru"}),"\n",(0,a.jsx)(n.p,{children:"Sper\u0103m c\u0103 pute\u021Bi vedea c\xe2t de puternic este acest lucru pentru a ob\u021Bine intervale \xeentre evenimente, s\u0103 ne uit\u0103m la un alt exemplu"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-c",children:'static Stopwatch[MAX_PLAYERS];\nStartPlayerRace(playerid)\n{\n    Stopwatch[playerid] = GetTickCount();\n}\nOnPlayerFinishRace(playerid)\n{\n    new\n        interval,\n        str[128];\n    interval = GetTickCount() - Stopwatch[playerid];\n    format(str, 128, "You took %d milliseconds to do that", interval);\n    SendClientMessage(playerid, -1, str);\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"\xcen acest exemplu, num\u0103rul de bif\u0103 este salvat \xeen variabila juc\u0103torului atunci c\xe2nd \xeencepe cursa. C\xe2nd o termin\u0103, bifa curent\u0103 (de c\xe2nd a terminat) are acea bif\u0103 ini\u021Bial\u0103 (Valoarea mai mic\u0103) sc\u0103zut\u0103 din ea \u0219i astfel ne las\u0103 cantitatea de milisecunde \xeentre \xeenceputul \u0219i sf\xe2r\u0219itul cursei."}),"\n",(0,a.jsx)(n.h4,{id:"defectiuni",children:"Defectiuni"}),"\n",(0,a.jsx)(n.p,{children:"Acum, s\u0103 descompunem pu\u021Bin codul."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-c",children:"new Stopwatch[MAX_PLAYERS];\n"})}),"\n",(0,a.jsx)(n.p,{children:"Aceasta este o variabil\u0103 global\u0103, trebuie s\u0103 o folosim astfel \xeenc\xe2t s\u0103 putem salva num\u0103rul de bifuri \u0219i s\u0103 recuper\u0103m valoarea \xeentr-un alt moment (cu alte cuvinte, folosi\u021Bi-o \xeen alt\u0103 func\u021Bie, mai t\xe2rziu)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-c",children:"StartPlayerRace(playerid)\n{\n    Stopwatch[playerid] = GetTickCount();\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"Acesta este momentul \xeen care juc\u0103torul \xeencepe cursa, num\u0103rul de bifuri de acum este \xeenregistrat, dac\u0103 acest lucru se \xeent\xe2mpl\u0103 la 1 minut de la pornirea serverului, valoarea acelei variabile va fi 60.000, deoarece este de 60 de secunde \u0219i fiecare secund\u0103 are o mie de milisecunde."}),"\n",(0,a.jsx)(n.p,{children:"Bine, acum avem variabila acelui juc\u0103tor stabilit\u0103 la 60.000, acum el termin\u0103 cursa 1 minut 40 secunde mai t\xe2rziu:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-c",children:'OnPlayerFinishRace(playerid)\n{\n    new\n        interval,\n        str[128];\n    interval = GetTickCount() - Stopwatch[playerid];\n    format(str, 128, "You took %d milliseconds to do that", interval);\n    SendClientMessage(playerid, -1, str);\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"Aici se \xeent\xe2mpl\u0103 calculul intervalului, ei bine, spun calculul, este doar sc\u0103derea a dou\u0103 valori!"}),"\n",(0,a.jsx)(n.p,{children:"GetTickCount() returneaz\u0103 num\u0103rul curent de c\u0103pu\u0219e, deci va fi mai mare dec\xe2t num\u0103rul de c\u0103pu\u0219e ini\u021Bial, ceea ce \xeenseamn\u0103 c\u0103 sc\u0103de\u021Bi num\u0103rul de c\u0103pu\u0219e ini\u021Bial din num\u0103rul curent de c\u0103pu\u0219e pentru a ob\u021Bine intervalul dintre cele dou\u0103 m\u0103suri."}),"\n",(0,a.jsx)(n.p,{children:"Deci, a\u0219a cum am spus, juc\u0103torul termin\u0103 cursa 1 minut \u0219i 40 de secunde mai t\xe2rziu (100 de secunde sau 100.000 de milisecunde), GetTickCount va reveni la 160.000. Scade\u021Bi valoarea ini\u021Bial\u0103 (care este 60.000) din noua valoare (care este 160.000) \u0219i ob\u021Bine\u021Bi 100.000 milisecunde, adic\u0103 1 minut 40 secunde, care este timpul necesar juc\u0103torului pentru a face cursa!"}),"\n",(0,a.jsx)(n.h2,{id:"recapitulare-\u0219i-note",children:"Recapitulare \u0219i note"}),"\n",(0,a.jsx)(n.p,{children:"Asa de! Am aflat c\u0103:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"GetTickCount returneaz\u0103 cantitatea de timp \xeen milisecunde de la pornirea sistemului computer pe care ruleaz\u0103 serverul."}),"\n",(0,a.jsx)(n.li,{children:"\u0218i o putem folosi apel\xe2nd-o la dou\u0103 intervale, salv\xe2nd prima la o variabil\u0103 \u0219i compar\xe2nd cele dou\u0103 valori v\u0103 poate oferi un interval precis \xeen milisecunde \xeentre cele dou\u0103 evenimente."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Nu \xeen ultimul r\xe2nd, nu dori\u021Bi s\u0103 le spune\u021Bi juc\u0103torilor valorile timpului \xeen milisecunde! Ce se \xeent\xe2mpl\u0103 dac\u0103 dureaz\u0103 o or\u0103 pentru a finaliza o curs\u0103?"}),"\n",(0,a.jsx)(n.p,{children:"Cel mai bine este s\u0103 folosi\u021Bi o func\u021Bie care ia milisecundele \u0219i o converte\u0219te \xeentr-un format lizibil, de exemplu, exemplul anterior, juc\u0103torul a luat 100.000 de milisecunde pentru a face cursa, dac\u0103 i-a\u021Bi spune juc\u0103torului c\u0103 a durat at\xe2t de mult, ar dura mai mult timp pentru a citi c\u0103 100.000 \u0219i da\u021Bi seama ce \xeenseamn\u0103 \xeen timp de citit de om."}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://github.com/ScavengeSurvive/timeutil",children:"Acest pachet"})," con\u021Bine o func\u021Bie de formatare a milisecundelor \xeentr-un \u0219ir."]}),"\n",(0,a.jsxs)(n.p,{children:["Sper c\u0103 acest lucru a ajutat! Am scris-o pentru c\u0103 am ajutat recent c\xe2teva persoane care nu \u0219tiau cum s\u0103 foloseasc\u0103 ",(0,a.jsx)(n.code,{children:"GetTickCount()"})," sau ",(0,a.jsx)(n.code,{children:"gettime()"})," ca alternativ\u0103 pentru temporizatoare sau pentru ob\u021Binerea de intervale etc."]})]})}function d(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(s,{...e})}):s(e)}},50065:function(e,n,i){i.d(n,{Z:()=>o,a:()=>l});var t=i(67294);let a={},r=t.createContext(a);function l(e){let n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);