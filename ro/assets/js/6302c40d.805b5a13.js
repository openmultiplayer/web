"use strict";(self.webpackChunkomp_web=self.webpackChunkomp_web||[]).push([["65962"],{36341:function(e,a,i){i.r(a),i.d(a,{frontMatter:()=>t,toc:()=>u,default:()=>d,metadata:()=>r,assets:()=>o,contentTitle:()=>c});var r=JSON.parse('{"id":"scripting/language/Variables","title":"No\u021Biuni de baz\u0103: Variabile","description":"Un ghid pentru \xeencep\u0103tori pentru variabilele din Pawn","source":"@site/i18n/ro/docusaurus-plugin-content-docs/current/scripting/language/Variables.md","sourceDirName":"scripting/language","slug":"/scripting/language/Variables","permalink":"/ro/docs/scripting/language/Variables","draft":false,"unlisted":false,"editUrl":"https://github.com/openmultiplayer/web/edit/master/frontend/docs/scripting/language/Variables.md","tags":[],"version":"current","frontMatter":{"title":"No\u021Biuni de baz\u0103: Variabile","sidebar_label":"No\u021Biuni de baz\u0103: Variabile","description":"Un ghid pentru \xeencep\u0103tori pentru variabilele din Pawn"},"sidebar":"docsSidebar","previous":{"title":"Scripting: Taguri","permalink":"/ro/docs/scripting/language/Tags"},"next":{"title":"Sloturi pentru componente","permalink":"/ro/docs/scripting/resources/Componentslots"}}'),n=i(85893),l=i(50065);let t={title:"No\u021Biuni de baz\u0103: Variabile",sidebar_label:"No\u021Biuni de baz\u0103: Variabile",description:"Un ghid pentru \xeencep\u0103tori pentru variabilele din Pawn"},c=void 0,o={},u=[{value:"Variabile",id:"variabile",level:2},{value:"Declararea variabilelor",id:"declararea-variabilelor",level:3},{value:"Domenii de aplicare",id:"domenii-de-aplicare",level:3},{value:"Reguli de denumire",id:"reguli-de-denumire",level:3},{value:"Exemple:",id:"exemple",level:4},{value:"Stocarea diferitelor tipuri de date",id:"stocarea-diferitelor-tipuri-de-date",level:3}];function s(e){let a={code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h2,{id:"variabile",children:"Variabile"}),"\n",(0,n.jsx)(a.p,{children:"Unul dintre cele mai importante concepte din programare este conceptul de 'variabile'. \xcen programare, o variabil\u0103 este o entitate care poate fi schimbat\u0103, dar \xeen ceea ce prive\u0219te ce? \xcen limba Pawn, o variabil\u0103 de\u021Bine o 'valoare' \xeen orice moment \u0219i acea valoare - a\u0219a cum sugereaz\u0103 \u0219i numele - este 'variabil\u0103' sau 'schimbabil\u0103'."}),"\n",(0,n.jsx)(a.p,{children:"Motivul pentru care variabilele sunt at\xe2t de importante se datoreaz\u0103 faptului c\u0103 sunt \xeen esen\u021B\u0103 unit\u0103\u021Bi mici de memorie de calculator care pot p\u0103stra sau 'aminti' diferite valori \xeen timp ce programul este \xeen curs de execu\u021Bie (ruleaz\u0103), iar aceast\u0103 proprietate se dovede\u0219te a fi foarte util\u0103 \xeen programare. De exemplu, dori\u021Bi s\u0103 \u021Bine\u021Bi eviden\u021Ba scorurilor a 100 de juc\u0103tori \xeentr-un joc, o pute\u021Bi face cu u\u0219urin\u021B\u0103 program\xe2nd computerul pentru a stoca (aminti\u021Bi-v\u0103) \u0219i a actualiza acele valori. Mai t\xe2rziu, dac\u0103 dori\u021Bi s\u0103 g\u0103si\u021Bi scorul mediu al acelor juc\u0103tori sau dori\u021Bi s\u0103 crea\u021Bi un clasament, acele valori din variabile pot fi u\u0219or accesate \u0219i utilizate \xeen acest scop."}),"\n",(0,n.jsx)(a.h3,{id:"declararea-variabilelor",children:"Declararea variabilelor"}),"\n",(0,n.jsx)(a.p,{children:"Urmeaz\u0103 sintaxa pentru declara\u021Bia variabil\u0103:"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-c",children:"// Creating (more appropriately, 'declaring') a variable named 'myVariable\n\nnew myVariable;\n\n// The 'new' keyword is used for declaring a variable\n// In the above line a variable is declared with the name 'myVariable'\n// Semi-colon is used in the end to close the declaration statement.\n"})}),"\n",(0,n.jsx)(a.p,{children:"Sintaxa declara\u021Biei poate fi mai bine \xeen\u021Beleas\u0103 examin\xe2nd c\xe2teva exemple:"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-c",children:"new var;\nnew ammo;\nnew score;\nnew vehicles;\nnew topScore;\n"})}),"\n",(0,n.jsx)(a.p,{children:"Fiecare dintre variabilele definite mai sus are o valoare implicit\u0103, care este zero. Exist\u0103 diferite moduri de atribuire a valorilor unei variabile. O metod\u0103 este atribuirea direct\u0103 a unei variabile \xeen timp ce este declarat\u0103:"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-c",children:"new letters = 25;\n"})}),"\n",(0,n.jsx)(a.p,{children:"\xcen exemplul de mai sus, este declarat\u0103 o variabil\u0103 numit\u0103 'litere', cu o valoare de 25. Ve\u021Bi observa un semn egal care este un simplu Operator de atribuire care poate fi utilizat pentru atribuirea de valori variabilelor. Evalueaz\u0103 expresia din dreapta \u0219i atribuie valoarea rezultat\u0103 variabilei la care se face referire \xeen partea st\xe2ng\u0103. \xcen afar\u0103 de atribuirea valorilor direct la declara\u021Bie, o pute\u021Bi face \u0219i \xeen p\u0103r\u021Bile ulterioare ale codului:"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-c",children:"new letters;\n\nletters = 25;\n"})}),"\n",(0,n.jsx)(a.h3,{id:"domenii-de-aplicare",children:"Domenii de aplicare"}),"\n",(0,n.jsx)(a.p,{children:"Modificarea valorii unei variabile este posibil\u0103 numai dac\u0103 partea codului \xeen care face\u021Bi referire la variabil\u0103 se afl\u0103 \xeen sfera acelei variabile. Domeniul de aplicare al unei variabile depinde de blocul de cod sau pozi\u021Bia \xeen care a fost declarat\u0103 variabila respectiv\u0103. De exemplu, o variabil\u0103 declarat\u0103 \xeen afara oric\u0103rui bloc de cod, de obicei la \xeenceputul scriptului, are un domeniu 'Global' \u0219i poate fi accesat\u0103 de oriunde din script:"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-c",children:'#include <a_samp>\n\nnew g_var = 5;\n\npublic OnFilterScriptInit ()\n{\n    g_var = 10;\n\n    printf ("The value is %i", g_var);\n\n    return 1;\n}\n\npublic OnPlayerConnect (playerid)\n{\n    g_var = 100;\n\n    printf ("The value is %i", g_var);\n\n    return 1;\n}\n\n// Output :\n// The value is 10\n// The value is 100\n\n// Note: The second output line is shown only when a player connects.\n'})}),"\n",(0,n.jsx)(a.p,{children:"\xcen afar\u0103 de variabilele 'globale' (cu scop), exist\u0103 variabile 'locale' sau 'private' care pot fi accesate numai din interiorul blocului de cod unde au fost declarate."}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-c",children:"#include <a_samp>\n\npublic OnFilterScriptInit ()\n{\n    new localVar;\n\n    localVar = 5;\n\n    return 1;\n}\n\npublic OnPlayerConnect (playerid)\n{\n    localVar = 10; // This line will show an error upon compilation\n\n    return 1;\n}\n"})}),"\n",(0,n.jsx)(a.p,{children:"Dac\u0103 \xeencerca\u021Bi s\u0103 compila\u021Bi codul de mai sus, compilatorul va afi\u0219a o eroare care este rezonabil\u0103, deoarece o variabil\u0103 local\u0103 face referin\u021Be \xeentr-un bloc complet diferit de cod. Not\u0103: Dac\u0103 este un bloc de cod imbricat, atunci variabila poate fi accesat\u0103 de acolo."}),"\n",(0,n.jsx)(a.p,{children:"Un lucru important de remarcat este c\u0103 nu pute\u021Bi declara variabile cu acelea\u0219i nume dac\u0103 scopurile lor intercedeaz\u0103. De exemplu, dac\u0103 ave\u021Bi deja o variabil\u0103 numit\u0103 'scor' pe un domeniu global, nu pute\u021Bi crea o alt\u0103 variabil\u0103 numit\u0103 'punctaj' pe domeniul global, precum \u0219i una local\u0103, iar acest lucru este valabil \u0219i pentru invers (dac\u0103 au deja o variabil\u0103 local\u0103, evita\u021Bi declararea unei variabile globale cu acela\u0219i nume)."}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-c",children:"#include <a_samp>\n\nnew g_score;\n\npublic OnFilterScriptInit ()\n{\n    new g_score = 5; // This line will show an error.\n    return 1;\n}\n"})}),"\n",(0,n.jsx)(a.h3,{id:"reguli-de-denumire",children:"Reguli de denumire"}),"\n",(0,n.jsx)(a.p,{children:"Acum c\u0103 \u0219ti\u021Bi cum s\u0103 declara\u021Bi variabile, trebuie s\u0103 cunoa\u0219te\u021Bi regulile de denumire pentru declararea variabilei care sunt enumerate mai jos:"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:["Toate numele variabilelor trebuie s\u0103 \xeenceap\u0103 cu o liter\u0103 sau o subliniere (",(0,n.jsx)(a.code,{children:"_"}),")"]}),"\n",(0,n.jsx)(a.li,{children:"Dup\u0103 prima liter\u0103 ini\u021Bial\u0103, numele variabilelor pot con\u021Bine litere \u0219i cifre, dar nu spa\u021Bii sau caractere speciale."}),"\n",(0,n.jsx)(a.li,{children:"Numele variabilelor sunt sensibile la majuscule, adic\u0103 literele majuscule sunt distincte de literele mici."}),"\n",(0,n.jsx)(a.li,{children:"Utilizarea unui cuv\xe2nt rezervat (cuv\xe2nt cheie) ca nume de variabil\u0103 va afi\u0219a o eroare."}),"\n"]}),"\n",(0,n.jsx)(a.h4,{id:"exemple",children:"Exemple:"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-c",children:"new new; // Incorrect : Using a reserved word\nnew _new; // Correct\n\nnew 10letters; // Incorrect : Name starting with a number\nnew letters10; // Correct\nnew letters_10; // Correct\n\nnew my name; // Incorrect : Space in the name\nnew my_name; // Correct\n\nnew !nternet; // Incorrect\nnew Internet; // Correct\n"})}),"\n",(0,n.jsx)(a.h3,{id:"stocarea-diferitelor-tipuri-de-date",children:"Stocarea diferitelor tipuri de date"}),"\n",(0,n.jsx)(a.p,{children:"Dup\u0103 aceea, acum s\u0103 analiz\u0103m c\xe2teva exemple despre ce tipuri de date pot fi stocate \xeen variabil\u0103 \u0219i cum:"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-c",children:"new letter = 'M';\n\n\nnew value = 100;\n\n\nnew decimalValue = 1.0;\n// Works, but will show a compiler warning\n// warning 213: tag mismatch\n\n\nnew engineOn = true;\n// Works, and will not show a compiler warning but using a Tag is suggested\n\n\nnew sentence = \"This is a sentence\";\n// Will show an error.\n// error 006: must be assigned to an array\n"})}),"\n",(0,n.jsxs)(a.p,{children:["O variabil\u0103 este capabil\u0103 s\u0103 de\u021Bin\u0103 un caracter, valoare \xeentreag\u0103, boolean\u0103 (adev\u0103rat\u0103 sau fals\u0103) \u0219i o valoare float (valoare zecimal\u0103). Comentariile din codul de mai sus arat\u0103 c\u0103 stocarea unui \u0219ir \xeentr-o variabil\u0103 duce la o eroare (deoarece \u0219irurile pot fi stocate numai \xeen ",(0,n.jsx)(a.em,{children:"Arrays"}),"). \xcen afar\u0103 de aceasta, atribuirea unei valori float unei variabile va duce la un avertisment al compilatorului, care poate fi evitat prin ad\u0103ugarea de 'etichete'. F\u0103r\u0103 etichete adecvate, scriptul va afi\u0219a avertismente la compilare, dar va fi executabil. Etichetele spun compilatorului despre tipul de date care este destinat s\u0103 fie stocat \xeen variabil\u0103, care la r\xe2ndul nostru ne informeaz\u0103 sub form\u0103 de erori sau avertisment dac\u0103 facem o gre\u0219eal\u0103 de rupere a programului \xeen cod. Exemplu de etichete:"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-c",children:"new decimalValue = 1.0; // Incorrect\nnew bool: decimalValue = 1.0 // Incorrect\nnew Float: decimalValue = 1.0; // Correct\n\nnew switchOn = 1.0; // Incorrect\nnew switchOn = true; // Incorrect, doesn't show a warning\nnew bool: switchOn = true; // Correct\n"})}),"\n",(0,n.jsx)(a.p,{children:"Utilizarea etichetelor corecte este important\u0103 pentru a evita orice erori sau erori \xeen timpul execut\u0103rii programului."}),"\n",(0,n.jsx)(a.p,{children:"Pawnul fiind un limbaj f\u0103r\u0103 tip ne permite s\u0103 stoc\u0103m diferite tipuri de date \xeen aceea\u0219i variabil\u0103, care poate fi util\u0103 \xeen unele cazuri \u0219i sup\u0103r\u0103toare \xeen altele, dar o astfel de utilizare a variabilelor nu este recomandat\u0103."}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-c",children:'#include <a_samp>\n\npublic OnFilterScriptInit ()\n{\n\n    new var ;\n\n    var = \'a\';\n    printf ("%c", var);\n\n    var = 1;\n    printf ("%d", var);\n\n    var = 1.0;\n    printf ("%f", var);\n\n    var = true;\n    printf ("%d", var); // prints a value 0 or 1\n\n    return 1;\n}\n\n// Output :\na\n1\n1.000000\n1\n'})})]})}function d(e={}){let{wrapper:a}={...(0,l.a)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(s,{...e})}):s(e)}},50065:function(e,a,i){i.d(a,{Z:()=>c,a:()=>t});var r=i(67294);let n={},l=r.createContext(n);function t(e){let a=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:t(e.components),r.createElement(l.Provider,{value:a},e.children)}}}]);