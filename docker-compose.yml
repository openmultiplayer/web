version: "3"
networks:
  default:
    external:
      name: gateway

services:
  api:
    restart: on-failure
    image: southclaws/openmp-web
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/prisma?schema=public
      LOG_LEVEL: debug
      AMQP_ADDRESS: ${AMQP_ADDRESS}
      HASH_KEY: ${HASH_KEY}
      BLOCK_KEY: ${BLOCK_KEY}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      DISCORD_CLIENT_ID: ${DISCORD_CLIENT_ID}
      DISCORD_CLIENT_SECRET: ${DISCORD_CLIENT_SECRET}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
      GITHUB_TOKEN: ${GITHUB_TOKEN}
      PACKAGES_DB: /data/packages.db
    ports:
      - 8000:8000
    volumes:
      - ${DATA_DIR}/openmp-index/backend:/data
    depends_on:
      - postgres
    labels:
      traefik.enable: "true"
      traefik.docker.network: gateway
      traefik.http.routers.omp_api.rule: Host(`api.open.mp`)
      traefik.http.routers.omp_api.entrypoints: https
      traefik.http.routers.omp_api.tls.certresolver: default
      com.centurylinklabs.watchtower.enable: "true"

  postgres:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ${DATA_DIR}/openmp-index/postgres:/var/lib/postgresql/data

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    restart: always
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    ports:
      - 8082:9000
    volumes:
      - ${DATA_DIR}/openmp-index/minio:/data
    labels:
      traefik.enable: "true"
      traefik.docker.network: gateway
      traefik.http.routers.omp_index_minio.rule: Host(`assets.open.mp`)
      traefik.http.routers.omp_index_minio.entrypoints: https
      traefik.http.routers.omp_index_minio.tls.certresolver: default
      traefik.http.services.omp_index_minio.loadbalancer.server.port: "9000"

  prometheus:
    image: prom/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.size=10GB
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
    restart: always
    volumes:
      - ${DATA_DIR}/openmp-index/prometheus:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    labels:
      traefik.enable: "true"
      traefik.docker.network: gateway
      traefik.http.routers.omp_index_prom.rule: Host(`data.open.mp`)
      traefik.http.routers.omp_index_prom.entrypoints: https
      traefik.http.routers.omp_index_prom.tls.certresolver: default
      com.centurylinklabs.watchtower.enable: "true"

  rabbit:
    image: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - 5433:80
    labels:
      traefik.enable: "true"
      traefik.docker.network: gateway
      traefik.http.routers.omp_index_pgadmin.rule: Host(`pgadmin.open.mp`)
      traefik.http.routers.omp_index_pgadmin.entrypoints: https
      traefik.http.routers.omp_index_pgadmin.tls.certresolver: default
      com.centurylinklabs.watchtower.enable: "true"
