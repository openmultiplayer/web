version: "3"
networks:
  default:
    external:
      name: gateway

services:
  api:
    restart: on-failure
    image: southclaws/openmp-web
    environment:
      DATABASE_URL: ${DATABASE_URL}
      DEV_LOGIN_SECRET: ${DEV_LOGIN_SECRET}
      PRODUCTION: "true"
      LOG_LEVEL: debug
      AMQP_ADDRESS: ${AMQP_ADDRESS}
      HASH_KEY: ${HASH_KEY}
      BLOCK_KEY: ${BLOCK_KEY}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      DISCORD_CLIENT_ID: ${DISCORD_CLIENT_ID}
      DISCORD_CLIENT_SECRET: ${DISCORD_CLIENT_SECRET}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
      GITHUB_TOKEN: ${GITHUB_TOKEN}
      PACKAGES_DB: /data/packages.db
    ports:
      - 8000:8000
    volumes:
      - ${DATA_DIR}/openmp/backend:/data
    depends_on:
      - postgres
    labels:
      traefik.enable: "true"
      traefik.docker.network: gateway
      traefik.http.routers.omp_api.rule: Host(`api.open.mp`)
      traefik.http.routers.omp_api.entrypoints: https
      traefik.http.routers.omp_api.tls.certresolver: default
      com.centurylinklabs.watchtower.enable: "true"

  frontend:
    restart: on-failure
    image: southclaws/openmp-frontend
    ports:
      - 3000:3000
    labels:
      traefik.enable: "true"
      traefik.docker.network: gateway
      traefik.http.routers.omp_frontend.rule: Host(`open.mp`)
      traefik.http.routers.omp_frontend.entrypoints: https
      traefik.http.routers.omp_frontend.tls.certresolver: default
      traefik.http.middlewares.omp_frontend.redirectregex.regex: "^https://www.open.mp/(.*)"
      traefik.http.middlewares.omp_frontend.redirectregex.replacement: "https://open.mp/$${1}"
      com.centurylinklabs.watchtower.enable: "true"

  postgres:
    image: postgres
    restart: always
    ports:
      - "25432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ${DATA_DIR}/openmp/postgres:/var/lib/postgresql/data

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    restart: always
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    ports:
      - 8082:9000
    volumes:
      - ${DATA_DIR}/openmp/minio:/data
    labels:
      traefik.enable: "true"
      traefik.docker.network: gateway
      traefik.http.routers.omp_index_minio.rule: Host(`assets.open.mp`)
      traefik.http.routers.omp_index_minio.entrypoints: https
      traefik.http.routers.omp_index_minio.tls.certresolver: default
      traefik.http.services.omp_index_minio.loadbalancer.server.port: "9000"

  prometheus:
    image: prom/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.size=10GB
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
    restart: always
    ports:
      - 9090:9090
    volumes:
      - ${DATA_DIR}/openmp/prometheus:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    labels:
      traefik.enable: "true"
      traefik.docker.network: gateway
      traefik.http.routers.omp_index_prom.rule: Host(`data.open.mp`)
      traefik.http.routers.omp_index_prom.entrypoints: https
      traefik.http.routers.omp_index_prom.tls.certresolver: default
      com.centurylinklabs.watchtower.enable: "true"

  rabbit:
    image: rabbitmq
    restart: always
    ports:
      - 8001:5672
      - 8002:15672

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - 25433:80
    volumes:
      - ${DATA_DIR:?required}/openmp/pgadmin:/var/lib/pgadmin/storage
    labels:
      traefik.enable: "true"
      traefik.docker.network: gateway
      traefik.http.routers.omp_index_pgadmin.rule: Host(`pgadmin.open.mp`)
      traefik.http.routers.omp_index_pgadmin.entrypoints: https
      traefik.http.routers.omp_index_pgadmin.tls.certresolver: default
      com.centurylinklabs.watchtower.enable: "true"

  mybb:
    image: mybb/mybb:latest
    restart: on-failure
    volumes:
      - ${DATA_DIR:?required}/openmp/mybb:/var/www/html:rw
    labels:
      - traefik.enable=false

  nginx:
    image: nginx:mainline
    restart: on-failure
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ${DATA_DIR:?required}/openmp/mybb:/var/www/html:ro
    labels:
      traefik.enable: "true"
      traefik.docker.network: gateway
      traefik.http.routers.openmp_bs.rule: Host(`burgershot.gg`) || Host(`www.burgershot.gg`)
      traefik.http.routers.openmp_bs.entrypoints: https
      traefik.http.routers.openmp_bs.tls.certresolver: default
      traefik.http.services.openmp_bs.loadbalancer.server.port: "80"
      traefik.http.middlewares.openmp_bs.redirectregex.regex: "^https://www.burgershot.gg/(.*)"
      traefik.http.middlewares.openmp_bs.redirectregex.replacement: "https://burgershot.gg/$${1}"
