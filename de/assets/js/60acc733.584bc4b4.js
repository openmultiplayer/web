"use strict";(self.webpackChunkomp_web=self.webpackChunkomp_web||[]).push([["7039"],{65127:function(e,n,i){i.r(n),i.d(n,{frontMatter:()=>s,toc:()=>o,default:()=>p,metadata:()=>t,assets:()=>d,contentTitle:()=>a});var t=JSON.parse('{"id":"scripting/callbacks/OnDialogResponse","title":"OnDialogResponse","description":"Dieses Callback wird ausgef\xfchrt wenn ein Spieler einem Dialog antwortet(benutzt), indem er einen der Buttons dr\xfcckt, Enter/ESC dr\xfcckt oder ein List-Item per Doppelklick ausw\xe4hlt(List Style Dialog).","source":"@site/i18n/de/docusaurus-plugin-content-docs/current/scripting/callbacks/OnDialogResponse.md","sourceDirName":"scripting/callbacks","slug":"/scripting/callbacks/OnDialogResponse","permalink":"/de/docs/scripting/callbacks/OnDialogResponse","draft":false,"unlisted":false,"editUrl":"https://github.com/openmultiplayer/web/edit/master/frontend/docs/scripting/callbacks/OnDialogResponse.md","tags":[{"inline":true,"label":"Pickup","permalink":"/de/docs/tags/pickup"}],"version":"current","frontMatter":{"title":"OnDialogResponse","sidebar_label":"OnDialogResponse","description":"Dieses Callback wird ausgef\xfchrt wenn ein Spieler einem Dialog antwortet(benutzt), indem er einen der Buttons dr\xfcckt, Enter/ESC dr\xfcckt oder ein List-Item per Doppelklick ausw\xe4hlt(List Style Dialog).","tags":["Pickup"]},"sidebar":"docsSidebar","previous":{"title":"OnClientMessage","permalink":"/de/docs/scripting/callbacks/OnClientMessage"},"next":{"title":"OnEnterExitModShop","permalink":"/de/docs/scripting/callbacks/OnEnterExitModShop"}}'),r=i(85893),l=i(50065);let s={title:"OnDialogResponse",sidebar_label:"OnDialogResponse",description:"Dieses Callback wird ausgef\xfchrt wenn ein Spieler einem Dialog antwortet(benutzt), indem er einen der Buttons dr\xfcckt, Enter/ESC dr\xfcckt oder ein List-Item per Doppelklick ausw\xe4hlt(List Style Dialog).",tags:["Pickup"]},a=void 0,d={},o=[{value:"Beschreibung",id:"beschreibung",level:2},{value:"R\xfcckgabe(return value)",id:"r\xfcckgabereturn-value",level:2},{value:"Beispiele",id:"beispiele",level:2},{value:"Anmerkungen",id:"anmerkungen",level:2},{value:"\xc4hnliche Funktionen",id:"\xe4hnliche-funktionen",level:2}];function c(e){let n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"beschreibung",children:"Beschreibung"}),"\n",(0,r.jsx)(n.p,{children:"Dieses Callback wird ausgef\xfchrt wenn ein Spieler einem Dialog antwortet(benutzt), indem er einen der Buttons dr\xfcckt, Enter/ESC dr\xfcckt oder ein List-Item per Doppelklick ausw\xe4hlt(Dialog: List-Style)"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Beschreibung"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"playerid"}),(0,r.jsx)(n.td,{children:"ID des Spielers der den Dialog benutzt."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"dialogid"}),(0,r.jsx)(n.td,{children:"ID des Dialogs der vom Spieler genutzt wird, zugewiesen in ShowPlayerDialog."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"response"}),(0,r.jsx)(n.td,{children:"1 f\xfcr den linken Button 0 f\xfcr den rechten Button (Gibt es nur einen Button, dann immer 1)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"listitem"}),(0,r.jsx)(n.td,{children:"ID des ausgew\xe4hlten List-Items (Start bei 0) (Nur bei List-Style Dialogen, ansonsten -1)."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"inputtext[]"}),(0,r.jsx)(n.td,{children:"Der vom Spieler eingef\xfcgte Text oder Text des ausgew\xe4hlten List-Items."})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"r\xfcckgabereturn-value",children:"R\xfcckgabe(return value)"}),"\n",(0,r.jsx)(n.p,{children:"Wird in Filterscripts immer zuerst ausgef\xfchrt. Bei Nutzung von return 1 k\xf6nnen andere Filterscripts es nicht erkennen."}),"\n",(0,r.jsx)(n.h2,{id:"beispiele",children:"Beispiele"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:'// Definieren der Dialog ID, mit der wie Antworten bearbeiten k\xf6nnen\n#define DIALOG_REGELN 1\n\n// In einem Befehl\nShowPlayerDialog(playerid, DIALOG_REGELN, DIALOG_STYLE_MSGBOX, "Server Regeln", "- Kein Cheaten\\n- Kein Spamming\\n- Respektiere die Admins\\n\\nAkzeptierst du die Regeln?", "Ja", "Nein");\n\npublic OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])\n{\n    if (dialogid == DIALOG_REGELN)\n    {\n        if (response) // Bei klicken von \'Ja\' oder dr\xfccken von Enter\n        {\n            SendClientMessage(playerid, COLOR_GREEN, "Du hast die Serverregeln akzeptiert!");\n        }\n        else // Bei ESC oder klickne von \'Nein\'\n        {\n            Kick(playerid);\n        }\n        return 1; // Wir haben den Dialog durchgef\xfchrt, also return 1. Genau wie bei OnPlayerCommandText.\n    }\n\n    return 0; // Hier muss return 0 stehen! Genau wie bei OnPlayerCommandText.\n}\n#define DIALOG_LOGIN 2\n\n// In einem Befehl\nShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_INPUT, "Login", "Bitte gebe dein Passwort ein:", "Login", "Abbruch");\n\npublic OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])\n{\n    if (dialogid == DIALOG_LOGIN)\n    {\n        if (!response) // Bei Klick von \'Abbruch\' oder ESC\n        {\n            Kick(playerid);\n        }\n        else // Bei Klick von \'Login\' oder Enter\n        {\n            if (CheckPassword(playerid, inputtext))\n            {\n                SendClientMessage(playerid, COLOR_RED, "Du bist jetzt eingeloggt!");\n            }\n            else\n            {\n                SendClientMessage(playerid, COLOR_RED, "Login fehlgeschlagen.");\n\n                // Den Dialog erneut anzeigen, da einloggen fehlgeschlagen\n                ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_INPUT, "Login", "Bitte gebe dein Passwort ein:", "Login", "Abbruch");\n            }\n        }\n        return 1; // Wir haben den Dialog durchgef\xfchrt, also return 1. Genau wie bei OnPlayerCommandText.\n    }\n\n    return 0; // Hier muss return 0 stehen! Genau wie bei OnPlayerCommandText.\n}\n\n\n#define DIALOG_WAFFEN 3\n\n// In einem Befehl\nShowPlayerDialog(playerid, DIALOG_WAFFEN, DIALOG_STYLE_LIST, "Waffen", "Desert Eagle\\nAK-47\\nCombat Shotgun", "W\xe4hlen", "Schlie\xdfen");\n\npublic OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])\n{\n    if (dialogid == DIALOG_WAFFEN)\n    {\n        if (response) // Wenn \'W\xe4hlen\' geklickt oder eine Waffe per Doppelklick gew\xe4hlt wurde\n        {\n            // Die gew\xe4hlte Waffe geben\n            switch(listitem)\n            {\n                case 0: GivePlayerWeapon(playerid, WEAPON_DEAGLE, 14); // Gibt dem Spieler eine Desert Eagle\n                case 1: GivePlayerWeapon(playerid, WEAPON_AK47, 120); // Gibt dem Spieler eine AK-47\n                case 2: GivePlayerWeapon(playerid, WEAPON_SHOTGSPA, 28); // Gibt dem Spieler eine Combat Shotgun\n            }\n        }\n        return 1; // Wir haben den Dialog durchgef\xfchrt, also return 1. Genau wie bei OnPlayerCommandText.\n    }\n\n    return 0; // Hier muss return 0 stehen! Genau wie bei OnPlayerCommandText.\n}\n\n\n#define DIALOG_WAFFEN 3\n\n// In einem Command\nShowPlayerDialog(playerid, DIALOG_WAFFEN, DIALOG_STYLE_LIST, "Waffen",\n"Waffe\\tMunition\\tPreis\\n\\\nM4\\t120\\t500\\n\\\nMP5\\t90\\t350\\n\\\nAK-47\\t120\\t400",\n"W\xe4hlen", "Schlie\xdfen");\n\npublic OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])\n{\n    if (dialogid == DIALOG_WAFFEN)\n    {\n        if (response) // Wenn \'W\xe4hlen\' geklickt oder eine Waffe per Doppelklick gew\xe4hlt wurde\n        {\n            // Die gew\xe4hlte Waffe geben\n            switch(listitem)\n            {\n                case 0: GivePlayerWeapon(playerid, WEAPON_M4, 120); // Gibt dem Spieler eine M4\n                case 1: GivePlayerWeapon(playerid, WEAPON_MP5, 90); // Gibt dem Spieler eine MP5\n                case 2: GivePlayerWeapon(playerid, WEAPON_AK47, 120); // Gibt dem Spieler eine AK-47\n            }\n        }\n        return 1; // Wir haben den Dialog durchgef\xfchrt, also return 1. Genau wie bei OnPlayerCommandText.\n    }\n\n    return 0; // Hier muss return 0 stehen! Genau wie bei OnPlayerCommandText.\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"anmerkungen",children:"Anmerkungen"}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["Parameter k\xf6nnen unterschiedliche Werte enthalten, abh\xe4ngig vom Dialog Style (",(0,r.jsx)(n.a,{href:"../resources/dialogstyles",children:"Klicke hier f\xfcr Beispiele"}),")."]})}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["Es ist sinnvoll zwischen bei ",(0,r.jsx)(n.code,{children:"VIELEN"})," Dialogen zwischen den einzelnen Dialog IDs zu switchen."]})}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsx)(n.p,{children:'Der Dialog eines Spielers wird nicht versteckt, wenn der Gamemode neustarte, weshalb der Server folgende Warnung anzeigt, wenn der Spieler nach dem Neustart den Dialog nutzt: "Warning: PlayerDialogResponse PlayerId: 0 dialog ID doesn\'t match last sent dialog ID".'})}),"\n",(0,r.jsx)(n.h2,{id:"\xe4hnliche-funktionen",children:"\xc4hnliche Funktionen"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../functions/ShowPlayerDialog",children:"ShowPlayerDialog"}),": Zeige einem Spieler einen Dialog."]}),"\n"]})]})}function p(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},50065:function(e,n,i){i.d(n,{Z:()=>a,a:()=>s});var t=i(67294);let r={},l=t.createContext(r);function s(e){let n=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);