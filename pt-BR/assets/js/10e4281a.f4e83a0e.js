"use strict";(self.webpackChunkomp_web=self.webpackChunkomp_web||[]).push([["24102"],{22645:function(e,a,r){r.r(a),r.d(a,{frontMatter:()=>i,toc:()=>l,default:()=>m,metadata:()=>n,assets:()=>d,contentTitle:()=>s});var n=JSON.parse('{"id":"scripting/callbacks/OnPlayerTakeDamage","title":"OnPlayerTakeDamage","description":"Esta callback \xe9 chama quando algum jogador recebe dano.","source":"@site/i18n/pt-BR/docusaurus-plugin-content-docs/current/scripting/callbacks/OnPlayerTakeDamage.md","sourceDirName":"scripting/callbacks","slug":"/scripting/callbacks/OnPlayerTakeDamage","permalink":"/pt-BR/docs/scripting/callbacks/OnPlayerTakeDamage","draft":false,"unlisted":false,"editUrl":"https://github.com/openmultiplayer/web/edit/master/frontend/docs/scripting/callbacks/OnPlayerTakeDamage.md","tags":[{"inline":true,"label":"player","permalink":"/pt-BR/docs/tags/player"}],"version":"current","frontMatter":{"title":"OnPlayerTakeDamage","sidebar_label":"OnPlayerTakeDamage","description":"Esta callback \xe9 chama quando algum jogador recebe dano.","tags":["player"]},"sidebar":"docsSidebar","previous":{"title":"OnPlayerStreamOut","permalink":"/pt-BR/docs/scripting/callbacks/OnPlayerStreamOut"},"next":{"title":"OnPlayerText","permalink":"/pt-BR/docs/scripting/callbacks/OnPlayerText"}}'),o=r(85893),t=r(50065);let i={title:"OnPlayerTakeDamage",sidebar_label:"OnPlayerTakeDamage",description:"Esta callback \xe9 chama quando algum jogador recebe dano.",tags:["player"]},s=void 0,d={},l=[{value:"Descri\xe7\xe3o",id:"descri\xe7\xe3o",level:2},{value:"Retornos",id:"retornos",level:2},{value:"Exemplos",id:"exemplos",level:2},{value:"Notas",id:"notas",level:2}];function c(e){let a={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(a.h2,{id:"descri\xe7\xe3o",children:"Descri\xe7\xe3o"}),"\n",(0,o.jsx)(a.p,{children:"Esta callback \xe9 chama quando algum jogador recebe dano."}),"\n",(0,o.jsxs)(a.table,{children:[(0,o.jsx)(a.thead,{children:(0,o.jsxs)(a.tr,{children:[(0,o.jsx)(a.th,{children:"Nome"}),(0,o.jsx)(a.th,{children:"Descrei\xe7\xe3o"})]})}),(0,o.jsxs)(a.tbody,{children:[(0,o.jsxs)(a.tr,{children:[(0,o.jsx)(a.td,{children:"playerid"}),(0,o.jsx)(a.td,{children:"O ID do jogador que recebeu determinado dano."})]}),(0,o.jsxs)(a.tr,{children:[(0,o.jsx)(a.td,{children:"issuerid"}),(0,o.jsx)(a.td,{children:"O ID do jogador que causou o dano. INVALID_PLAYER_ID se o dano for auto-infligido."})]}),(0,o.jsxs)(a.tr,{children:[(0,o.jsxs)(a.td,{children:["Float",":amount"]}),(0,o.jsx)(a.td,{children:"A quantidade de dano total que o jogador recebey (vida e colete combinados)."})]}),(0,o.jsxs)(a.tr,{children:[(0,o.jsxs)(a.td,{children:["WEAPON",":weaponid"]}),(0,o.jsx)(a.td,{children:"O ID da arma/raz\xe3o do determinado dano."})]}),(0,o.jsxs)(a.tr,{children:[(0,o.jsx)(a.td,{children:"bodypart"}),(0,o.jsxs)(a.td,{children:["A ",(0,o.jsx)(a.a,{href:"../resources/bodyparts",children:"Parte do Corpo"})," que foi atingida."]})]})]})]}),"\n",(0,o.jsx)(a.h2,{id:"retornos",children:"Retornos"}),"\n",(0,o.jsx)(a.p,{children:"1 - A Callback n\xe3o ser\xe1 chamada em outros filterscripts."}),"\n",(0,o.jsx)(a.p,{children:"0 - Permite que esta Callback seja chamada em outro filterscript."}),"\n",(0,o.jsx)(a.p,{children:"Sempre \xe9 chamada primeiro em filterscripts, portanto retornar 1 bloquear\xe1 que outro filterscript a veja."}),"\n",(0,o.jsx)(a.h2,{id:"exemplos",children:"Exemplos"}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-c",children:'public OnPlayerTakeDamage(playerid, issuerid, Float:amount, WEAPON:weaponid, bodypart)\n{\n    if (issuerid\xa0!= INVALID_PLAYER_ID) // Caso n\xe3o seja auto-infligido\n    {\n        new\n            infoString[128],\n            weaponName[24],\n            victimName[MAX_PLAYER_NAME],\n            attackerName[MAX_PLAYER_NAME];\n\n        GetPlayerName(playerid, victimName, sizeof (victimName));\n        GetPlayerName(issuerid, attackerName, sizeof (attackerName));\n\n        GetWeaponName(weaponid, weaponName, sizeof (weaponName));\n\n        format(infoString, sizeof(infoString), "%s causou %.0f de dano ao jogador %s, arma: %s, parte do corpo: %d", attackerName, amount, victimName, weaponName, bodypart);\n        SendClientMessageToAll(-1, infoString);\n    }\n    return 1;\n}\n'})}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-c",children:"public OnPlayerTakeDamage(playerid, issuerid, Float:amount, WEAPON:weaponid, bodypart)\n{\n    if (issuerid\xa0!= INVALID_PLAYER_ID && weaponid == 34 && bodypart == 9)\n    {\n        // Um tiro na cabe\xe7a para eliminar o jogador\n        SetPlayerHealth(playerid, 0.0);\n    }\n    return 1;\n}\n"})}),"\n",(0,o.jsx)(a.h2,{id:"notas",children:"Notas"}),"\n",(0,o.jsx)(a.admonition,{type:"tip",children:(0,o.jsx)(a.p,{children:"O ID da arma retornar\xe1 37 (Lan\xe7a Chamas) para qualquer fonte que utilize fogo (EX: Molotov). O ID da arma retornar\xe1 51 para qualquer fonte que utilize explos\xf5es (EX: RPG, granada). 'playerid' \xe9 o \xfanico que pode chamar esta callback. A quantidade (amount) sempre ser\xe1 o valor m\xe1ximo do dano que tal arma (weaponid) pode causar, mesmo quando a vida restante \xe9 menor do que o dano m\xe1ximo. Ent\xe3o quando algu\xe9m tem 100.0 de vida e \xe9 atingido por uma Desert Eagle, que possui um dano total de 46.2, ser\xe1 necess\xe1rio 3 tiros para matar o jogador. Todos os 3 tiros causar\xe3o 46.2 de dano, mesmo que a vida restante do jogador seja apenas de 7.6 ap\xf3s dois tiros."})}),"\n",(0,o.jsx)(a.admonition,{type:"warning",children:(0,o.jsx)(a.p,{children:"GetPlayerHealth e GetPlayerArmour retornar\xe3o as quantidades espec\xedficas anteriores a chamada desta callback. Sempre verifique se o ID do jogador que causou o dano (issuerid) \xe9 v\xe1lido antes de us\xe1-lo como index de uma array."})})]})}function m(e={}){let{wrapper:a}={...(0,t.a)(),...e.components};return a?(0,o.jsx)(a,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},50065:function(e,a,r){r.d(a,{Z:()=>s,a:()=>i});var n=r(67294);let o={},t=n.createContext(o);function i(e){let a=n.useContext(t);return n.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function s(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),n.createElement(t.Provider,{value:a},e.children)}}}]);