"use strict";(self.webpackChunkomp_web=self.webpackChunkomp_web||[]).push([["85433"],{40503:function(e,a,n){n.r(a),n.d(a,{frontMatter:()=>s,toc:()=>c,default:()=>p,metadata:()=>l,assets:()=>o,contentTitle:()=>i});var l=JSON.parse('{"id":"scripting/callbacks/OnPlayerUpdate","title":"OnPlayerUpdate","description":"Descripci\xf3n","source":"@site/i18n/es/docusaurus-plugin-content-docs/current/scripting/callbacks/OnPlayerUpdate.md","sourceDirName":"scripting/callbacks","slug":"/scripting/callbacks/OnPlayerUpdate","permalink":"/es/docs/scripting/callbacks/OnPlayerUpdate","draft":false,"unlisted":false,"editUrl":"https://github.com/openmultiplayer/web/edit/master/frontend/docs/scripting/callbacks/OnPlayerUpdate.md","tags":[{"inline":true,"label":"player","permalink":"/es/docs/tags/player"}],"version":"current","frontMatter":{"t\xedtulo":"OnPlayerUpdate","descripci\xf3n":"Este callback se llama cada vez que un cliente/jugador actualiza su estado con el servidor.","tags":["player"]},"sidebar":"docsSidebar","previous":{"title":"OnPlayerText","permalink":"/es/docs/scripting/callbacks/OnPlayerText"},"next":{"title":"OnPlayerWeaponShot","permalink":"/es/docs/scripting/callbacks/OnPlayerWeaponShot"}}'),r=n(85893),t=n(50065);let s={"t\xedtulo":"OnPlayerUpdate","descripci\xf3n":"Este callback se llama cada vez que un cliente/jugador actualiza su estado con el servidor.",tags:["player"]},i=void 0,o={},c=[{value:"Descripci\xf3n",id:"descripci\xf3n",level:2},{value:"Devoluciones",id:"devoluciones",level:2},{value:"Ejemplos",id:"ejemplos",level:2},{value:"Notes",id:"notes",level:2},{value:"Funciones Relacionadas",id:"funciones-relacionadas",level:2}];function d(e){let a={admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...e.components},{TipNPCCallbacksES:n}=a;return n||function(e,a){throw Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("TipNPCCallbacksES",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.h2,{id:"descripci\xf3n",children:"Descripci\xf3n"}),"\n",(0,r.jsx)(a.p,{children:"Este callback se llama cada vez que un cliente/jugador actualiza su estado con el servidor. A menudo de usa para crear callbacks personalizados para detectar actualizaciones en el cliente que no son rastreadas activamente por el servidor, como las actualizaciones de salud o chaleco o jugadores cambiando de armas."}),"\n",(0,r.jsxs)(a.table,{children:[(0,r.jsx)(a.thead,{children:(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.th,{children:"Nombre"}),(0,r.jsx)(a.th,{children:"Descripci\xf3n"})]})}),(0,r.jsx)(a.tbody,{children:(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"playerid"}),(0,r.jsx)(a.td,{children:"El ID del jugador que envi\xf3 un paquete de actualizaci\xf3n."})]})})]}),"\n",(0,r.jsx)(a.h2,{id:"devoluciones",children:"Devoluciones"}),"\n",(0,r.jsx)(a.p,{children:"1 - Prevendr\xe1 a otros filterscripts de recibir este callback."}),"\n",(0,r.jsx)(a.p,{children:"0 - Indica que este callback ser\xe1 pasado al siguiente filterscript."}),"\n",(0,r.jsx)(a.p,{children:"Siempre se llama primero en filterscripts."}),"\n",(0,r.jsx)(a.h2,{id:"ejemplos",children:"Ejemplos"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-c",children:'public OnPlayerUpdate(playerid)\n{\n    new iCurWeap = GetPlayerWeapon(playerid); // Devuelve el arma en mano actual del jugador\n    if (iCurWeap\xa0!= GetPVarInt(playerid, "iCurrentWeapon")) // Si cambi\xf3 de arma desde la \xfaltima actualizaci\xf3n\n    {\n        // Vamos a llamar un callback nombrado OnPlayerChangeWeapon\n        OnPlayerChangeWeapon(playerid, GetPVarInt(playerid, "iCurrentWeapon"), iCurWeap);\n        SetPVarInt(playerid, "iCurrentWeapon", iCurWeap); //Actualizamos la variable de arma al jugador\n    }\n    return 1; // Env\xeda esta actualizaci\xf3n a otros jugadores\n}\n\nstock OnPlayerChangeWeapon(playerid, oldweapon, newweapon)\n{\n    new     s[128],\n        oWeapon[24],\n        nWeapon[24];\n\n    GetWeaponName(oldweapon, oWeapon, sizeof(oWeapon));\n    GetWeaponName(newweapon, nWeapon, sizeof(nWeapon));\n\n    format(s, sizeof(s), "Cambiaste del arma %s a %s!", oWeapon, nWeapon);\n\n    SendClientMessage(playerid, 0xFFFFFFFF, s);\n}\npublic OnPlayerUpdate(playerid)\n{\n    new Float:fHealth;\n\n    GetPlayerHealth(playerid, fHealth);\n\n    if (fHealth\xa0!= GetPVarFloat(playerid, "faPlayerHealth"))\n    {\n        // La salud del jugador cambi\xf3 desde la \xfaltima actualizaci\xf3n con el servidor, as\xed que obviamente eso es lo actualizado.\n        // Hagamos mas comprobaciones para ver si aument\xf3 o disminuy\xf3 de salud, anti-health cheat?\xa0;)\n\n        if (fHealth > GetPVarFloat(playerid, "faPlayerHealth"))\n        {\n            /* El aument\xf3 su salud! Usando cheats? Escribe tus propios scripts aqu\xed para expresar de qu\xe9 manera el jugador gan\xf3 salud */\n        }\n        else\n        {\n            /* \xc9l perdi\xf3 salud! */\n        }\n\n        SetPVarFloat(playerid, "faPlayerHealth", fHealth);\n    }\n}\n'})}),"\n",(0,r.jsx)(a.h2,{id:"notes",children:"Notes"}),"\n",(0,r.jsx)(n,{}),"\n",(0,r.jsx)(a.admonition,{type:"warning",children:(0,r.jsx)(a.p,{children:"Este callback se llama, en promedio, 30 veces por segundo, por cada jugador; s\xf3lo usalo cuando sepas para que sirve (o m\xe1s importante, para lo que no est\xe1 pensado). La frecuencia con la que se llama este callback var\xeda por cada jugador, dependiendo qu\xe9 est\xe1 haciendo el jugador. Conduciendo o disparando desencadenar\xe1 muchas mas actualizaciones que estando quieto."})}),"\n",(0,r.jsx)(a.h2,{id:"funciones-relacionadas",children:"Funciones Relacionadas"})]})}function p(e={}){let{wrapper:a}={...(0,t.a)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},50065:function(e,a,n){n.d(a,{Z:()=>i,a:()=>s});var l=n(67294);let r={},t=l.createContext(r);function s(e){let a=l.useContext(t);return l.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),l.createElement(t.Provider,{value:a},e.children)}}}]);