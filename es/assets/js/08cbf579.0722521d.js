"use strict";(self.webpackChunkomp_web=self.webpackChunkomp_web||[]).push([["66415"],{58311:function(e,n,s){s.r(n),s.d(n,{frontMatter:()=>i,toc:()=>d,default:()=>u,metadata:()=>a,assets:()=>l,contentTitle:()=>t});var a=JSON.parse('{"id":"scripting/callbacks/OnPlayerDisconnect","title":"OnPlayerDisconnect","description":"Descripci\xf3n","source":"@site/i18n/es/docusaurus-plugin-content-docs/current/scripting/callbacks/OnPlayerDisconnect.md","sourceDirName":"scripting/callbacks","slug":"/scripting/callbacks/OnPlayerDisconnect","permalink":"/es/docs/scripting/callbacks/OnPlayerDisconnect","draft":false,"unlisted":false,"editUrl":"https://github.com/openmultiplayer/web/edit/master/frontend/docs/scripting/callbacks/OnPlayerDisconnect.md","tags":[{"inline":true,"label":"player","permalink":"/es/docs/tags/player"}],"version":"current","frontMatter":{"t\xedtulo":"OnPlayerDisconnect","descripci\xf3n":"Este callback se llama cuando un jugador se desconecta del servidor.","tags":["player"]},"sidebar":"docsSidebar","previous":{"title":"OnPlayerDeath","permalink":"/es/docs/scripting/callbacks/OnPlayerDeath"},"next":{"title":"OnPlayerEditAttachedObject","permalink":"/es/docs/scripting/callbacks/OnPlayerEditAttachedObject"}}'),c=s(85893),r=s(50065);let i={"t\xedtulo":"OnPlayerDisconnect","descripci\xf3n":"Este callback se llama cuando un jugador se desconecta del servidor.",tags:["player"]},t=void 0,l={},d=[{value:"Descripci\xf3n",id:"descripci\xf3n",level:2},{value:"Devoluciones",id:"devoluciones",level:2},{value:"Razones",id:"razones",level:2},{value:"Ejemplos",id:"ejemplos",level:2},{value:"Notas",id:"notas",level:2},{value:"Funciones Relacionadas",id:"funciones-relacionadas",level:2}];function o(e){let n={admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h2,{id:"descripci\xf3n",children:"Descripci\xf3n"}),"\n",(0,c.jsx)(n.p,{children:"Este callback se llama cuando un jugador se desconecta del servidor."}),"\n",(0,c.jsxs)(n.table,{children:[(0,c.jsx)(n.thead,{children:(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.th,{children:"Nombre"}),(0,c.jsx)(n.th,{children:"Descripci\xf3n"})]})}),(0,c.jsxs)(n.tbody,{children:[(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"playerid"}),(0,c.jsx)(n.td,{children:"El ID del jugador que se desconect\xf3."})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"reason"}),(0,c.jsx)(n.td,{children:"La raz\xf3n de la desconexi\xf3n. (ver tabla abajo)"})]})]})]}),"\n",(0,c.jsx)(n.h2,{id:"devoluciones",children:"Devoluciones"}),"\n",(0,c.jsx)(n.p,{children:"1 - Prevendr\xe1 a otros filterscripts de recibir este callback."}),"\n",(0,c.jsx)(n.p,{children:"0 - Indica que este callback ser\xe1 pasado al siguiente filterscript."}),"\n",(0,c.jsx)(n.p,{children:"Siempre se llama primero en filterscripts."}),"\n",(0,c.jsx)(n.h2,{id:"razones",children:"Razones"}),"\n",(0,c.jsxs)(n.table,{children:[(0,c.jsx)(n.thead,{children:(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.th,{children:"ID"}),(0,c.jsx)(n.th,{children:"Raz\xf3n"}),(0,c.jsx)(n.th,{children:"Detalles"})]})}),(0,c.jsxs)(n.tbody,{children:[(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"0"}),(0,c.jsx)(n.td,{children:"Timeout/Crash"}),(0,c.jsx)(n.td,{children:"La conexi\xf3n del jugador se perdi\xf3. Ya sea si su juego crashe\xf3 o su internet tuvo una falla."})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"1"}),(0,c.jsx)(n.td,{children:"Quit"}),(0,c.jsx)(n.td,{children:"El jugador sali\xf3 a prop\xf3sito, ya sea con /quit (/q) o a trav\xe9s del men\xfa de pausa."})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"2"}),(0,c.jsx)(n.td,{children:"Kick/Ban"}),(0,c.jsx)(n.td,{children:"El jugador fue kickeado o baneado por el servidor."})]})]})]}),"\n",(0,c.jsx)(n.h2,{id:"ejemplos",children:"Ejemplos"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-c",children:'public OnPlayerDisconnect(playerid, reason)\n{\n    new\n        szString[64],\n        playerName[MAX_PLAYER_NAME];\n\n    GetPlayerName(playerid, playerName, MAX_PLAYER_NAME);\n\n    new szDisconnectReason[3][] =\n    {\n        "Timeout/Crash",\n        "Quit",\n        "Kick/Ban"\n    };\n\n    format(szString, sizeof szString, "%s se desconect\xf3 del servidor (%s).", playerName, szDisconnectReason[reason]);\n\n    SendClientMessageToAll(0xC4C4C4FF, szString);\n    return 1;\n}\n'})}),"\n",(0,c.jsx)(n.h2,{id:"notas",children:"Notas"}),"\n",(0,c.jsx)(n.admonition,{type:"tip",children:(0,c.jsx)(n.p,{children:"Algunas funciones pueden no funcionar correctamente cuando son usadas en este callback debido a que el jugador ya est\xe1 desconectado cuando el callback es llamado. Esto quiere decir que no pod\xe9s obtener informaci\xf3n inequ\xedvoca de funciones como GetPlayerIp o GetPlayerPos."})}),"\n",(0,c.jsx)(n.h2,{id:"funciones-relacionadas",children:"Funciones Relacionadas"})]})}function u(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(o,{...e})}):o(e)}},50065:function(e,n,s){s.d(n,{Z:()=>t,a:()=>i});var a=s(67294);let c={},r=a.createContext(c);function i(e){let n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);